{
    "docs": [
        {
            "location": "/", 
            "text": "SDKBOX \u624b\u6e38\u670d\u52a1\u63a5\u5165\u52a9\u624b\n\n\n\n\nSDKBOX\n \u53ef\u4ee5\u8ba9cocos2d-x\u7684\u5f00\u53d1\u8005\u5f88\u8f7b\u677e\u5730\u628a\u5404\u79cd\u56fd\u5185\u5916\u7684SDK\u96c6\u6210\u5230\u81ea\u5df1\u7684\u6e38\u620f\u4e2d.\n\u6211\u4eec\u5b8c\u6210\u4e86\u96c6\u6210sdk\u8fc7\u7a0b\u4e2d\u6700\u5355\u8c03,\u91cd\u590d\u7684\u5de5\u4f5c.\u5e76\u5bf9\u96c6\u6210\u597d\u7684\u7684\u670d\u52a1,sdk\u505a\u4e86\u4e25\u683c\u7684\u6d4b\u8bd5.\n\u6240\u6709cocos2d-x\u7684\u6e38\u620f,\u4e0d\u7ba1\u662flua,js\u8fd8\u662f\u539f\u751fc++\u8bed\u8a00,\u90fd\u53ef\u4ee5\u4f7f\u7528 \nSDKBOX\n \u6765\u5b8c\u6210\u96c6\u6210\u5de5\u4f5c\n\n\n\u4ecb\u7ecd\n\n\nSDKBOX\u5b89\u88c5\u5668\n \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u7684\u5b89\u88c5\u7a0b\u5e8f,\u4f60\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2a\u547d\u4ee4\u5c31\u628a\u7b2c\u4e09\u65b9SDK\u96c6\u6210\u5230\u81ea\u5df1\u7684\u5de5\u4f5c\u4e2d\uff0c\u4f8b\u5982\nsdkbox import iap\n\n\nSDKBOX\u63d2\u4ef6\n \u662f\u7ecf\u8fc7\u6211\u4eec\u6d4b\u8bd5\u548c\u8ba4\u8bc1\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u501f\u53e3\u3002\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34\u90fd\u662f\u5168\u7403\u9876\u7ea7\u7684\u670d\u52a1\u5546\uff0c\u5305\u62ec\uff1aChartboost, Google Anylytics, Vungle, AdColony, Flurry, Tune, Kochava...", 
            "title": "\u4e3b\u9875"
        }, 
        {
            "location": "/#sdkbox", 
            "text": "SDKBOX  \u53ef\u4ee5\u8ba9cocos2d-x\u7684\u5f00\u53d1\u8005\u5f88\u8f7b\u677e\u5730\u628a\u5404\u79cd\u56fd\u5185\u5916\u7684SDK\u96c6\u6210\u5230\u81ea\u5df1\u7684\u6e38\u620f\u4e2d.\n\u6211\u4eec\u5b8c\u6210\u4e86\u96c6\u6210sdk\u8fc7\u7a0b\u4e2d\u6700\u5355\u8c03,\u91cd\u590d\u7684\u5de5\u4f5c.\u5e76\u5bf9\u96c6\u6210\u597d\u7684\u7684\u670d\u52a1,sdk\u505a\u4e86\u4e25\u683c\u7684\u6d4b\u8bd5.\n\u6240\u6709cocos2d-x\u7684\u6e38\u620f,\u4e0d\u7ba1\u662flua,js\u8fd8\u662f\u539f\u751fc++\u8bed\u8a00,\u90fd\u53ef\u4ee5\u4f7f\u7528  SDKBOX  \u6765\u5b8c\u6210\u96c6\u6210\u5de5\u4f5c", 
            "title": "SDKBOX \u624b\u6e38\u670d\u52a1\u63a5\u5165\u52a9\u624b"
        }, 
        {
            "location": "/#_1", 
            "text": "SDKBOX\u5b89\u88c5\u5668  \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u7684\u5b89\u88c5\u7a0b\u5e8f,\u4f60\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2a\u547d\u4ee4\u5c31\u628a\u7b2c\u4e09\u65b9SDK\u96c6\u6210\u5230\u81ea\u5df1\u7684\u5de5\u4f5c\u4e2d\uff0c\u4f8b\u5982 sdkbox import iap  SDKBOX\u63d2\u4ef6  \u662f\u7ecf\u8fc7\u6211\u4eec\u6d4b\u8bd5\u548c\u8ba4\u8bc1\u7684\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u501f\u53e3\u3002\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34\u90fd\u662f\u5168\u7403\u9876\u7ea7\u7684\u670d\u52a1\u5546\uff0c\u5305\u62ec\uff1aChartboost, Google Anylytics, Vungle, AdColony, Flurry, Tune, Kochava...", 
            "title": "\u4ecb\u7ecd"
        }, 
        {
            "location": "/installer/", 
            "text": "SDKBOX: \u7528\u5b89\u88c5\u5668\u6765\u5b89\u88c5sdkbox\u63d2\u4ef6\n\n\n\u51c6\u5907\u8fd0\u884c SDKBOX \u5b89\u88c5\u5668\n\n\n\u5728\u4f60\u80fd\u8fd0\u884c SDKBOX \u5b89\u88c5\u5668\u4e4b\u524d,\u4f60\u9700\u8981\u505a\u4e0b\u9762\u51e0\u4ef6\u4e8b\n\n \u786e\u8ba4\u4f60\u4e0b\u8f7d\u7684 SDKBOX \u5b89\u88c5\u5668\u6240\u5728\u7684\u8def\u5f84 (\u4f60\u53ef\u4ee5\u628a\u5b89\u88c5\u5668\u653e\u5728\n/usr/local/bin\n).\n\n \u786e\u8ba4\u4f60\u4e0b\u8f7d\u7684 SDKBOX \u63d2\u4ef6\u6240\u5728\u7684\u8def\u5f84.\n* \u56e0\u4e3a\u7f51\u8def\u7684\u539f\u56e0\uff0c\n\u5efa\u8bae\u60a8\u5728\u56fd\u5185\u4f7f\u7528\u5b89\u88c5\u5668\u65f6\u589e\u52a0\"--china\"\u53c2\u6570\n\uff0c\u8ba9\u5b89\u88c5\u5668\u4f7f\u7528\u56fd\u5185\u7684CDN\u670d\u52a1\u5668\uff0c\u63d0\u9ad8\u4e0b\u8f7d\u901f\u5ea6\u3002\n\n\n\u7528 SDKBOX \u5b89\u88c5\u5668\u5b89\u88c5\u4e00\u4e2a\u63d2\u4ef6\n\n\n\u73b0\u5728\u51c6\u5907\u597d\u53bb\u5b89\u88c5\u63d2\u4ef6\u4e86\u5417?\u8ba9\u6211\u4eec\u5f00\u59cb\u5427!\n\n\n\u5728 Mac OS X \u4e0a\u5b89\u88c5\n\n\n\n\n\u5728\u547d\u4ee4\u884c\u4e2d, \ncd\n \u5230\u4f60\u7684\u5de5\u7a0b\u7684\u6839\u76ee\u5f55. \u6bd4\u5982:\n\n\n\n\ncd ~/MyGame\n\n\n\n\n\n\n\u73b0\u5728,\u60a8\u53ef\u4ee5\u4f7f\u7528SDKBOX\u5b89\u88c5\u63d2\u4ef6\u5b89\u88c5\u7a0b\u5e8f,\u6ce8\u610f\u4f60\u653e\u7f6e\u7684\u4f4d\u7f6e\u5b89\u88c5\u7a0b\u5e8f\u548c\u63d2\u4ef6\u5305. \u6bd4\u5982:\n\n\n\n\nsdkbox import iap --china\n\n\n\n\nWhat Next?\n\n\nSDKBOX \u5b89\u88c5\u7a0b\u5e8f \u5904\u7406\u4e86\u5927\u90e8\u5206\u96c6\u6210\u6d41\u7a0b\u3002\u7136\u800c,\u4ecd\u7136\u6709\u4e00\u4e9b\u624b\u52a8\u6b65\u9aa4,\u60a8\u5fc5\u987b\u5b8c\u6210\u3002\u5b89\u88c5\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u4e00\u4e9b\u4f60\u8fd8\u9700\u8981\u5b8c\u6210\u7684\u6b65\u9aa4,\u5728\u63d2\u4ef6\u7684PDF\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\u6bd4\u5982\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u540e,\u4f1a\u5f97\u5230\u5982\u4e0b\u7ed3\u679c:\n\n\n$ sdkbox import iap --china\n_______ ______  _     _ ______   _____  _     _\n|______ |     \\ |____/  |_____] |     |  \\___/\n______| |_____/ |    \\_ |_____] |_____| _/   \\_\nCopyright (c) 2015 Chukong Technologies Inc. v0.5.7\n\nPlease reference the online documentation to finish the integration:\nhttp://sdkbox-doc.github.io/en/plugins/iap/v3-cpp/\nInstallation Successful :)\n\n\n\n\n\u5b89\u88c5\u5668\u7684\u5176\u5b83\u547d\u4ee4\u53c2\u6570.\n\n\nSDKBOX \u5b89\u88c5\u5668\u8fd8\u6709\u51e0\u79cd\u5176\u5b83\u547d\u4ee4\u4f60\u53ef\u4ee5\u7528.\u4f60\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c \nsdkbox\n \u6216\u8005\u5e26 \n-h\n \u53c2\u6570:\n\n\n$ \npath\n/sdkbox\n_______ ______  _     _ ______   _____  _     _\n|______ |     \\ |____/  |_____] |     |  \\___/\n______| |_____/ |    \\_ |_____] |_____| _/   \\_\nCopyright (c) 2015 Chukong Technologies Inc. v0.5.7\n\nusage: sdkbox {import,restore,symbols,api} PLUGIN\n [-h] [-v] [-p PROJECT] [--yes] [--dryrun]\n\n\n\n\n\n\n\n\n\n\n\nswitch\n\n\nalternate switch\n\n\nwhat it does\n\n\n\n\n\n\n\n\n\n\n-h\n\n\n--help\n\n\nshow this help message and exit\n\n\n\n\n\n\n-v\n\n\n--verbose\n\n\nspecify verbosity level\n\n\n\n\n\n\n-p PROJECT\n\n\n--project PROJECT\n\n\npath to project root (defaults to .)\n\n\n\n\n\n\n-b PLUGIN\n\n\n--plugin PLUGIN\n\n\nspecify path to plugin (defaults to .)\n\n\n\n\n\n\n\n\n--dryrun\n\n\ntest install before performing.\n\n\n\n\n\n\n\n\n\u4fdd\u6301\u4e00\u76f4\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7248\n\n\nSDKBOX\u5b89\u88c5\u7a0b\u5e8f\u81ea\u52a8\u68c0\u67e5\u66f4\u65b0.\u66f4\u65b0\u4e4b\u524d\u5b83\u4f1a\u8be2\u95ee\u60a8\u7684\u8bb8\u53ef.\u8fd9\u5c06\u5141\u8bb8\u4f60\u8fd8\u4fdd\u6301\u5f53\u524d\u7248\u672c\u6216\u66f4\u65b0\u5230\u6700\u65b0\u7248.\n\n\n_______ ______  _     _ ______   _____  _     _\n|______ |     \\ |____/  |_____] |     |  \\___/\n______| |_____/ |    \\_ |_____] |_____| _/   \\_\nCopyright (c) 2015 Chukong Technologies Inc. v0.5.6\n\nA newer version of SDKBOX is available, would you like to update to v0.5.7?\nPlease type Yes, No or Quit Yes\nupdated SDKBOX v0.5.6 to v0.5.7 at sdkbox", 
            "title": "\u5b89\u88c5\u5668"
        }, 
        {
            "location": "/installer/#sdkbox-sdkbox", 
            "text": "", 
            "title": "SDKBOX: \u7528\u5b89\u88c5\u5668\u6765\u5b89\u88c5sdkbox\u63d2\u4ef6"
        }, 
        {
            "location": "/installer/#sdkbox", 
            "text": "\u5728\u4f60\u80fd\u8fd0\u884c SDKBOX \u5b89\u88c5\u5668\u4e4b\u524d,\u4f60\u9700\u8981\u505a\u4e0b\u9762\u51e0\u4ef6\u4e8b  \u786e\u8ba4\u4f60\u4e0b\u8f7d\u7684 SDKBOX \u5b89\u88c5\u5668\u6240\u5728\u7684\u8def\u5f84 (\u4f60\u53ef\u4ee5\u628a\u5b89\u88c5\u5668\u653e\u5728 /usr/local/bin ).  \u786e\u8ba4\u4f60\u4e0b\u8f7d\u7684 SDKBOX \u63d2\u4ef6\u6240\u5728\u7684\u8def\u5f84.\n* \u56e0\u4e3a\u7f51\u8def\u7684\u539f\u56e0\uff0c \u5efa\u8bae\u60a8\u5728\u56fd\u5185\u4f7f\u7528\u5b89\u88c5\u5668\u65f6\u589e\u52a0\"--china\"\u53c2\u6570 \uff0c\u8ba9\u5b89\u88c5\u5668\u4f7f\u7528\u56fd\u5185\u7684CDN\u670d\u52a1\u5668\uff0c\u63d0\u9ad8\u4e0b\u8f7d\u901f\u5ea6\u3002", 
            "title": "\u51c6\u5907\u8fd0\u884c SDKBOX \u5b89\u88c5\u5668"
        }, 
        {
            "location": "/installer/#sdkbox_1", 
            "text": "\u73b0\u5728\u51c6\u5907\u597d\u53bb\u5b89\u88c5\u63d2\u4ef6\u4e86\u5417?\u8ba9\u6211\u4eec\u5f00\u59cb\u5427!  \u5728 Mac OS X \u4e0a\u5b89\u88c5   \u5728\u547d\u4ee4\u884c\u4e2d,  cd  \u5230\u4f60\u7684\u5de5\u7a0b\u7684\u6839\u76ee\u5f55. \u6bd4\u5982:   cd ~/MyGame   \u73b0\u5728,\u60a8\u53ef\u4ee5\u4f7f\u7528SDKBOX\u5b89\u88c5\u63d2\u4ef6\u5b89\u88c5\u7a0b\u5e8f,\u6ce8\u610f\u4f60\u653e\u7f6e\u7684\u4f4d\u7f6e\u5b89\u88c5\u7a0b\u5e8f\u548c\u63d2\u4ef6\u5305. \u6bd4\u5982:   sdkbox import iap --china  What Next?  SDKBOX \u5b89\u88c5\u7a0b\u5e8f \u5904\u7406\u4e86\u5927\u90e8\u5206\u96c6\u6210\u6d41\u7a0b\u3002\u7136\u800c,\u4ecd\u7136\u6709\u4e00\u4e9b\u624b\u52a8\u6b65\u9aa4,\u60a8\u5fc5\u987b\u5b8c\u6210\u3002\u5b89\u88c5\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u4e00\u4e9b\u4f60\u8fd8\u9700\u8981\u5b8c\u6210\u7684\u6b65\u9aa4,\u5728\u63d2\u4ef6\u7684PDF\u6709\u8be6\u7ec6\u8bf4\u660e\u3002\u6bd4\u5982\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u540e,\u4f1a\u5f97\u5230\u5982\u4e0b\u7ed3\u679c:  $ sdkbox import iap --china\n_______ ______  _     _ ______   _____  _     _\n|______ |     \\ |____/  |_____] |     |  \\___/\n______| |_____/ |    \\_ |_____] |_____| _/   \\_\nCopyright (c) 2015 Chukong Technologies Inc. v0.5.7\n\nPlease reference the online documentation to finish the integration:\nhttp://sdkbox-doc.github.io/en/plugins/iap/v3-cpp/\nInstallation Successful :)  \u5b89\u88c5\u5668\u7684\u5176\u5b83\u547d\u4ee4\u53c2\u6570.  SDKBOX \u5b89\u88c5\u5668\u8fd8\u6709\u51e0\u79cd\u5176\u5b83\u547d\u4ee4\u4f60\u53ef\u4ee5\u7528.\u4f60\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c  sdkbox  \u6216\u8005\u5e26  -h  \u53c2\u6570:  $  path /sdkbox\n_______ ______  _     _ ______   _____  _     _\n|______ |     \\ |____/  |_____] |     |  \\___/\n______| |_____/ |    \\_ |_____] |_____| _/   \\_\nCopyright (c) 2015 Chukong Technologies Inc. v0.5.7\n\nusage: sdkbox {import,restore,symbols,api} PLUGIN\n [-h] [-v] [-p PROJECT] [--yes] [--dryrun]     switch  alternate switch  what it does      -h  --help  show this help message and exit    -v  --verbose  specify verbosity level    -p PROJECT  --project PROJECT  path to project root (defaults to .)    -b PLUGIN  --plugin PLUGIN  specify path to plugin (defaults to .)     --dryrun  test install before performing.     \u4fdd\u6301\u4e00\u76f4\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7248  SDKBOX\u5b89\u88c5\u7a0b\u5e8f\u81ea\u52a8\u68c0\u67e5\u66f4\u65b0.\u66f4\u65b0\u4e4b\u524d\u5b83\u4f1a\u8be2\u95ee\u60a8\u7684\u8bb8\u53ef.\u8fd9\u5c06\u5141\u8bb8\u4f60\u8fd8\u4fdd\u6301\u5f53\u524d\u7248\u672c\u6216\u66f4\u65b0\u5230\u6700\u65b0\u7248.  _______ ______  _     _ ______   _____  _     _\n|______ |     \\ |____/  |_____] |     |  \\___/\n______| |_____/ |    \\_ |_____] |_____| _/   \\_\nCopyright (c) 2015 Chukong Technologies Inc. v0.5.6\n\nA newer version of SDKBOX is available, would you like to update to v0.5.7?\nPlease type Yes, No or Quit Yes\nupdated SDKBOX v0.5.6 to v0.5.7 at sdkbox", 
            "title": "\u7528 SDKBOX \u5b89\u88c5\u5668\u5b89\u88c5\u4e00\u4e2a\u63d2\u4ef6"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/", 
            "text": "AdColony\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import adcolony\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n,\u5199\u5165\u4e00\u4e2a \nProguard\n \u914d\u7f6e. Example:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAdColony\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \napp id\n \u548c \nzone id\n.\n\n\nAdColony\n:{\n    \nid\n:\napp id\n,\n    \ndebug\n:true,\n    \nads\n:{\n        \nvideo\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: false\n        },\n        \nv4vc\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: true,\n            \npre_popup\n : true,\n            \npost_popup\n: true\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 AdColony\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAdColony/PluginAdColony.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAdColony::init();\n}\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:\n\n\nsdkbox::PluginAdColony::show(\nvideo\n);\n\n\n\n\n\u6216:\n\n\nsdkbox::PluginAdColony::show(\nv4vc\n);\n\n\n\n\n\u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nAdColony\n \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::AdColonyListener\n\n\n\n\n#include \nPluginAdColony/PluginAdColony.h\n\nclass MyClass : public sdkbox::AdColonyListener\n{\nprivate:\n  void onAdColonyChange(const sdkbox::AdColonyAdInfo\n info, bool available);\n  void onAdColonyReward(const sdkbox::AdColonyAdInfo\n info,\n        const std::string\n currencyName, int amount, bool success);\n  void onAdColonyStarted(const sdkbox::AdColonyAdInfo\n info);\n  void onAdColonyFinished(const sdkbox::AdColonyAdInfo\n info);\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03:\n\n\n\n\nsdkbox::PluginAdColony::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic AdColonyAdStatus getStatus(const std::string\n name);\n\n\n\n\n\n\nCheck the availability of the AdColony ads by name\n\n\n\n\nstatic int zoneStatusForZone(const std::string\n zoneID);\n\n\n\n\n\n\nreturns the status for the specified zone. Use this to pre-load a zone.\n\n\n\n\nstatic void show(const std::string\n name);\n\n\n\n\n\n\nplay video ad using provided \nzone name\n that was specified in \nsdkbox_config.json\n.\n\n\n\n\nstatic void setListener(AdColonyListener* listener);\n\n\n\n\n\n\nset a listener to listen for event changes.\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nremove the event listener.\n\n\n\n\nstatic bool isVirtualCurrencyRewardAvailableForZone(const std::string\n zoneID);\n\n\n\n\n\n\ncheck if this zone offers a virtual currency reward.\n\n\n\n\nstatic int getVirtualCurrencyRewardsAvailableTodayForZone(\n  const std::string\n zoneID);\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nstatic std::string getVirtualCurrencyNameForZone(const std::string\n zoneID);\n\n\n\n\n\n\nget virtual currency name for passed in zone.\n\n\n\n\nstatic int getVirtualCurrencyRewardAmountForZone(const std::string\n zoneID);\n\n\n\n\n\n\nthe amount of the virtual currency reward for passed in zone.\n\n\n\n\nstatic int getVideosPerReward(const std::string\n currencyName);\n\n\n\n\n\n\nare there multiple videos to watch per reward? Get the number of them.\n\n\n\n\nstatic int getVideoCreditBalance(const std::string\n currencyName);\n\n\n\n\n\n\nget video credit balance for passed in currency name.\n\n\n\n\nstatic void cancelAd();\n\n\n\n\n\n\nstop the currently showing ad.\n\n\n\n\nstatic bool videoAdCurrentlyRunning();\n\n\n\n\n\n\nis there a video currently showing?\n\n\n\n\nstatic void turnAllAdsOff();\n\n\n\n\n\n\nturn off all ads.\n\n\n\n\nListeners\n\n\nvoid onAdColonyChange(const sdkbox::AdColonyAdInfo\n info, bool available);\n\n\n\n\n\n\ncalled when AdColony is finished loading.\n\n\n\n\nvoid onAdColonyReward(const sdkbox::AdColonyAdInfo\n info,\n  const std::string\n currencyName,\n  int amount, bool success);\n\n\n\n\n\n\nreward was received.\n\n\n\n\nvoid onAdColonyStarted(const sdkbox::AdColonyAdInfo\n info);\n\n\n\n\n\n\nshowing an ad has started.\n\n\n\n\nvoid onAdColonyFinished(const sdkbox::AdColonyAdInfo\n info);\n\n\n\n\n\n\nshowing an ad has finished.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/#adcolony", 
            "text": "", 
            "title": "AdColony"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import adcolony", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u7f16\u8f91  project.properties ,\u5199\u5165\u4e00\u4e2a  Proguard  \u914d\u7f6e. Example:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AdColony \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  app id  \u548c  zone id .  AdColony :{\n     id : app id ,\n     debug :true,\n     ads :{\n         video :{\n             zone :  zone id ,\n             v4vc : false\n        },\n         v4vc :{\n             zone :  zone id ,\n             v4vc : true,\n             pre_popup  : true,\n             post_popup : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 AdColony   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginAdColony/PluginAdColony.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAdColony::init();\n}  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:  sdkbox::PluginAdColony::show( video );  \u6216:  sdkbox::PluginAdColony::show( v4vc );  \u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  AdColony  \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::AdColonyListener   #include  PluginAdColony/PluginAdColony.h \nclass MyClass : public sdkbox::AdColonyListener\n{\nprivate:\n  void onAdColonyChange(const sdkbox::AdColonyAdInfo  info, bool available);\n  void onAdColonyReward(const sdkbox::AdColonyAdInfo  info,\n        const std::string  currencyName, int amount, bool success);\n  void onAdColonyStarted(const sdkbox::AdColonyAdInfo  info);\n  void onAdColonyFinished(const sdkbox::AdColonyAdInfo  info);\n};   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03:   sdkbox::PluginAdColony::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/adcolony/v3-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static AdColonyAdStatus getStatus(const std::string  name);   Check the availability of the AdColony ads by name   static int zoneStatusForZone(const std::string  zoneID);   returns the status for the specified zone. Use this to pre-load a zone.   static void show(const std::string  name);   play video ad using provided  zone name  that was specified in  sdkbox_config.json .   static void setListener(AdColonyListener* listener);   set a listener to listen for event changes.   static void removeListener();   remove the event listener.   static bool isVirtualCurrencyRewardAvailableForZone(const std::string  zoneID);   check if this zone offers a virtual currency reward.   static int getVirtualCurrencyRewardsAvailableTodayForZone(\n  const std::string  zoneID);   is there a virtual currency reward available to the user today for passed in\nzone.   static std::string getVirtualCurrencyNameForZone(const std::string  zoneID);   get virtual currency name for passed in zone.   static int getVirtualCurrencyRewardAmountForZone(const std::string  zoneID);   the amount of the virtual currency reward for passed in zone.   static int getVideosPerReward(const std::string  currencyName);   are there multiple videos to watch per reward? Get the number of them.   static int getVideoCreditBalance(const std::string  currencyName);   get video credit balance for passed in currency name.   static void cancelAd();   stop the currently showing ad.   static bool videoAdCurrentlyRunning();   is there a video currently showing?   static void turnAllAdsOff();   turn off all ads.   Listeners  void onAdColonyChange(const sdkbox::AdColonyAdInfo  info, bool available);   called when AdColony is finished loading.   void onAdColonyReward(const sdkbox::AdColonyAdInfo  info,\n  const std::string  currencyName,\n  int amount, bool success);   reward was received.   void onAdColonyStarted(const sdkbox::AdColonyAdInfo  info);   showing an ad has started.   void onAdColonyFinished(const sdkbox::AdColonyAdInfo  info);   showing an ad has finished.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/", 
            "text": "AdColony\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import adcolony\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n,\u5199\u5165\u4e00\u4e2a \nProguard\n \u914d\u7f6e. Example:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAdColony\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \napp id\n \u548c \nzone id\n.\n\n\nAdColony\n:{\n    \nid\n:\napp id\n,\n    \ndebug\n:true,\n    \nads\n:{\n        \nvideo\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: false\n        },\n        \nv4vc\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: true,\n            \npre_popup\n : true,\n            \npost_popup\n: true\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 AdColony\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginAdColony.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAdColonyJS.hpp\n\n#include \nPluginAdColonyJSHelper.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginAdColonyJS);\nsc-\naddRegisterCallback(register_all_PluginAdColonyJS_helper);\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u8981\u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u4ee3\u7801\u4e2d,\u8f93\u5165\u5982\u4e0b:\n\n\nsdkbox.PluginAdColony.show(\nvideo\n);\n\n\n\n\n\u6216:\n\n\nsdkbox.PluginAdColony.show(\nv4vc\n);\n\n\n\n\n\u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nAdColony\n \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c:\n\n\n\n\n/**\n * data \u7684\u6570\u636e\u5982\u4e0b\n * data.name : \u5e7f\u544a\u7684\u540d\u5b57 (\u5728\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json \u4e2d\u5b9a\u4e49)\n * data.zoneID : \u5e7f\u544a\u7684 zoneID\n * data.shown : \u6807\u8bb0\u5e7f\u544a\u662f\u5426\u663e\u793a\u4e86,\u6216\u88ab\u7528\u6237\u5173\u95ed\u4e86\n * data.iapEnabled : \u6807\u8bb0\u5173\u8054\u7684\u5e7f\u544a\u662f\u5426\u662fIAP\n * data.iapProductID : \u5e7f\u544a\u7684IAP\u5bf9\u5e94\u7684\u5546\u54c1id\n * data.iapQuantity : \u7528\u6237\u8981\u4ed8\u8d39\u5546\u54c1\u7684\u6570\u91cf\n * data.iapEngagementType : \u5546\u54c1\u7c7b\u578b\n */\n\nsdkbox.PluginAdColony.setListener({\n        onAdColonyChange : function (data, available) {\n                // \u5f53AdColony\u5b8c\u6210\u52a0\u8f7d\u8c03\u7528\n        },\n        onAdColonyReward : function (data, currencyName, amount, success) {\n                // \u5f53AdColony\u7684 v4vc \u5e7f\u544a\u64ad\u653e\u5b8c\u6bd5\u540e\u8c03\u7528\n        },\n        onAdColonyStarted : function (data) {\n                // \u5f53\u5e7f\u544a\u5f00\u59cb\u64ad\u653e\u8c03\u7528\n        },\n        onAdColonyFinished : function (data) {\n                // \u5f53\u5e7f\u544a\u663e\u793a\u5b8c\u6bd5\u540e\u8c03\u7528\n        }\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAdColony.zoneStatusForZone(zoneID);\n\n\n\n\n\n\nreturns the status for the specified zone. Use this to pre-load a zone.\n\n\n\n\nsdkbox.PluginAdColony.isVirtualCurrencyRewardAvailableForZone(zoneID);\n\n\n\n\n\n\ncheck if this zone offers a virtual currency reward.\n\n\n\n\nsdkbox.PluginAdColony.show(name);\n\n\n\n\n\n\nplay video ad using provided \nzone name\n that was specified in \nsdkbox_config.json\n.\n\n\n\n\nsdkbox.PluginAdColony.getStatus(name);\n\n\n\n\n\n\nCheck the availability of the AdColony ads by name\n\n\n\n\nsdkbox.PluginAdColony.setListener(listener);\n\n\n\n\n\n\nset a listener to listen for event changes.\n\n\n\n\nsdkbox.PluginAdColony.removeListener();\n\n\n\n\n\n\nremove the event listener.\n\n\n\n\nsdkbox.PluginAdColony.getVirtualCurrencyRewardAmountForZone(zoneID);\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in zone.\n\n\n\n\nsdkbox.PluginAdColony.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginAdColony.videoAdCurrentlyRunning();\n\n\n\n\n\n\nis there a video currently showing?\n\n\n\n\nsdkbox.PluginAdColony.turnAllAdsOff();\n\n\n\n\n\n\nturn off all ads.\n\n\n\n\nsdkbox.PluginAdColony.getVideoCreditBalance(currencyName);\n\n\n\n\n\n\nget video credit balance for passed in currency name.\n\n\n\n\nsdkbox.PluginAdColony.getVideosPerReward(currencyName);\n\n\n\n\n\n\nare there multiple videos to watch per reward? Get the number of them.\n\n\n\n\nsdkbox.PluginAdColony.getVirtualCurrencyNameForZone(zoneID);\n\n\n\n\n\n\nget virtual currency name for passed in zone.\n\n\n\n\nsdkbox.PluginAdColony.getVirtualCurrencyRewardsAvailableTodayForZone(zoneID);\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nsdkbox.PluginAdColony.cancelAd();\n\n\n\n\n\n\nstop the currently showing ad.\n\n\n\n\nListeners\n\n\n/**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */\n\n\n\n\nonAdColonyChange(data, available);\n\n\n\n\n\n\ncalled when AdColony is finished loading.\n\n\n\n\nonAdColonyReward(data, currencyName, amount, success);\n\n\n\n\n\n\nreward was received.\n\n\n\n\nonAdColonyStarted(data);\n\n\n\n\n\n\nshowing an ad has started.\n\n\n\n\nonAdColonyFinished(data);\n\n\n\n\n\n\nshowing an ad has finished.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/#adcolony", 
            "text": "", 
            "title": "AdColony"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import adcolony", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u7f16\u8f91  project.properties ,\u5199\u5165\u4e00\u4e2a  Proguard  \u914d\u7f6e. Example:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AdColony \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  app id  \u548c  zone id .  AdColony :{\n     id : app id ,\n     debug :true,\n     ads :{\n         video :{\n             zone :  zone id ,\n             v4vc : false\n        },\n         v4vc :{\n             zone :  zone id ,\n             v4vc : true,\n             pre_popup  : true,\n             post_popup : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 AdColony   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginAdColony.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginAdColonyJS.hpp \n#include  PluginAdColonyJSHelper.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:   sc- addRegisterCallback(register_all_PluginAdColonyJS);\nsc- addRegisterCallback(register_all_PluginAdColonyJS_helper);  \u663e\u793a\u5e7f\u544a  \u8981\u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u4ee3\u7801\u4e2d,\u8f93\u5165\u5982\u4e0b:  sdkbox.PluginAdColony.show( video );  \u6216:  sdkbox.PluginAdColony.show( v4vc );  \u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  AdColony  \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c:   /**\n * data \u7684\u6570\u636e\u5982\u4e0b\n * data.name : \u5e7f\u544a\u7684\u540d\u5b57 (\u5728\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json \u4e2d\u5b9a\u4e49)\n * data.zoneID : \u5e7f\u544a\u7684 zoneID\n * data.shown : \u6807\u8bb0\u5e7f\u544a\u662f\u5426\u663e\u793a\u4e86,\u6216\u88ab\u7528\u6237\u5173\u95ed\u4e86\n * data.iapEnabled : \u6807\u8bb0\u5173\u8054\u7684\u5e7f\u544a\u662f\u5426\u662fIAP\n * data.iapProductID : \u5e7f\u544a\u7684IAP\u5bf9\u5e94\u7684\u5546\u54c1id\n * data.iapQuantity : \u7528\u6237\u8981\u4ed8\u8d39\u5546\u54c1\u7684\u6570\u91cf\n * data.iapEngagementType : \u5546\u54c1\u7c7b\u578b\n */\n\nsdkbox.PluginAdColony.setListener({\n        onAdColonyChange : function (data, available) {\n                // \u5f53AdColony\u5b8c\u6210\u52a0\u8f7d\u8c03\u7528\n        },\n        onAdColonyReward : function (data, currencyName, amount, success) {\n                // \u5f53AdColony\u7684 v4vc \u5e7f\u544a\u64ad\u653e\u5b8c\u6bd5\u540e\u8c03\u7528\n        },\n        onAdColonyStarted : function (data) {\n                // \u5f53\u5e7f\u544a\u5f00\u59cb\u64ad\u653e\u8c03\u7528\n        },\n        onAdColonyFinished : function (data) {\n                // \u5f53\u5e7f\u544a\u663e\u793a\u5b8c\u6bd5\u540e\u8c03\u7528\n        }\n});", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/adcolony/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginAdColony.zoneStatusForZone(zoneID);   returns the status for the specified zone. Use this to pre-load a zone.   sdkbox.PluginAdColony.isVirtualCurrencyRewardAvailableForZone(zoneID);   check if this zone offers a virtual currency reward.   sdkbox.PluginAdColony.show(name);   play video ad using provided  zone name  that was specified in  sdkbox_config.json .   sdkbox.PluginAdColony.getStatus(name);   Check the availability of the AdColony ads by name   sdkbox.PluginAdColony.setListener(listener);   set a listener to listen for event changes.   sdkbox.PluginAdColony.removeListener();   remove the event listener.   sdkbox.PluginAdColony.getVirtualCurrencyRewardAmountForZone(zoneID);   is there a virtual currency reward available to the user today for passed in zone.   sdkbox.PluginAdColony.init();   initialize the plugin instance.   sdkbox.PluginAdColony.videoAdCurrentlyRunning();   is there a video currently showing?   sdkbox.PluginAdColony.turnAllAdsOff();   turn off all ads.   sdkbox.PluginAdColony.getVideoCreditBalance(currencyName);   get video credit balance for passed in currency name.   sdkbox.PluginAdColony.getVideosPerReward(currencyName);   are there multiple videos to watch per reward? Get the number of them.   sdkbox.PluginAdColony.getVirtualCurrencyNameForZone(zoneID);   get virtual currency name for passed in zone.   sdkbox.PluginAdColony.getVirtualCurrencyRewardsAvailableTodayForZone(zoneID);   is there a virtual currency reward available to the user today for passed in\nzone.   sdkbox.PluginAdColony.cancelAd();   stop the currently showing ad.   Listeners  /**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */  onAdColonyChange(data, available);   called when AdColony is finished loading.   onAdColonyReward(data, currencyName, amount, success);   reward was received.   onAdColonyStarted(data);   showing an ad has started.   onAdColonyFinished(data);   showing an ad has finished.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/", 
            "text": "AdColony\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import adcolony\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n,\u5199\u5165\u4e00\u4e2a \nProguard\n \u914d\u7f6e. Example:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAdColony\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \napp id\n \u548c \nzone id\n.\n\n\nAdColony\n:{\n    \nid\n:\napp id\n,\n    \ndebug\n:true,\n    \nads\n:{\n        \nvideo\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: false\n        },\n        \nv4vc\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: true,\n            \npre_popup\n : true,\n            \npost_popup\n: true\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\nModify Lua Code\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u4ee5\u5305\u542b\u5982\u4e0b\u5fc5\u987b\u5934\u6587\u4ef6, \u5e76\u8c03\u7528 \nAdColony\n \u7684lua\u6ce8\u518c\u51fd\u6570.\u6ce8\u610f\u5b83\u4eec\u7684\u53c2\u6570 \nlua_State*\n :\n\n\n#include \nPluginAdColonyLua.hpp\n\n#include \nPluginAdColonyLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginAdColonyLua(L);\n  register_PluginAdColonyLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 AdColony\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6. \u8fd9\u4e2a\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8981\u60f3\u4f7f\u7528 AdColony \u7684\u529f\u80fd\u4e4b\u524d.\n\n\nsdkbox.PluginAdColony:init()\n\n\n\n\nShowing Ads\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:\n\n\nsdkbox.PluginAdColony:show(\nvideo\n)\n\n\n\n\n\u6216:\n\n\nsdkbox.PluginAdColony:show(\nv4vc\n)\n\n\n\n\n\u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nAdColony\n \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c:\n\n\n\n\nsdkbox.PluginAdColony:setListener(function(args)\n    if \nonAdColonyChange\n == args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local available = args.available -- boolean\n                dump(info, \nonAdColonyChange:\n)\n        print(\navailable:\n, available)\n    elseif \nonAdColonyReward\n ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local currencyName = args.currencyName -- string\n        local amount = args.amount -- int\n        local success = args.success -- boolean\n                dump(info, \nonAdColonyReward:\n)\n        print(\ncurrencyName:\n, currencyName)\n        print(\namount:\n, amount)\n        print(\nsuccess:\n, success)\n    elseif \nonAdColonyStarted\n ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info, \nonAdColonyStarted:\n)\n    elseif \nonAdColonyFinished\n ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info, \nonAdColonyFinished:\n)\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAdColony:zoneStatusForZone(zoneID)\n\n\n\n\n\n\nreturns the status for the specified zone. Use this to pre-load a zone.\n\n\n\n\nsdkbox.PluginAdColony:isVirtualCurrencyRewardAvailableForZone(zoneID)\n\n\n\n\n\n\ncheck if this zone offers a virtual currency reward.\n\n\n\n\nsdkbox.PluginAdColony:show(name)\n\n\n\n\n\n\nplay video ad using provided \nzone name\n that was specified in \nsdkbox_config.json\n.\n\n\n\n\nsdkbox.PluginAdColony:getStatus(name)\n\n\n\n\n\n\nCheck the availability of the AdColony ads by name\n\n\n\n\nsdkbox.PluginAdColony:getVirtualCurrencyRewardAmountForZone(zoneID)\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nsdkbox.PluginAdColony:init()\n\n\n\n\n\n\ninitialize the instance.\n\n\n\n\nsdkbox.PluginAdColony:videoAdCurrentlyRunning()\n\n\n\n\n\n\nis there a video currently showing?\n\n\n\n\nsdkbox.PluginAdColony:turnAllAdsOff()\n\n\n\n\n\n\nturn off all ads.\n\n\n\n\nsdkbox.PluginAdColony:getVideoCreditBalance(currencyName)\n\n\n\n\n\n\nget video credit balance for passed in currency name.\n\n\n\n\nsdkbox.PluginAdColony:getVideosPerReward(currencyName)\n\n\n\n\n\n\nare there multiple videos to watch per reward? Get the number of them.\n\n\n\n\nsdkbox.PluginAdColony:getVirtualCurrencyNameForZone(zoneID)\n\n\n\n\n\n\nget virtual currency name for passed in zone.\n\n\n\n\nsdkbox.PluginAdColony:getVirtualCurrencyRewardsAvailableTodayForZone(zoneID)\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nsdkbox.PluginAdColony:cancelAd()\n\n\n\n\n\n\nstop the currently showing ad.\n\n\n\n\nListeners\n\n\n/**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */\n\n\n\n\nonAdColonyChange(data, available)\n\n\n\n\n\n\ncalled when AdColony is finished loading.\n\n\n\n\nonAdColonyReward(data, currencyName, amount, success)\n\n\n\n\n\n\nreward was received.\n\n\n\n\nonAdColonyStarted(data)\n\n\n\n\n\n\nshowing an ad has started.\n\n\n\n\nonAdColonyFinished(data)\n\n\n\n\n\n\nshowing an ad has finished.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/#adcolony", 
            "text": "", 
            "title": "AdColony"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import adcolony", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u7f16\u8f91  project.properties ,\u5199\u5165\u4e00\u4e2a  Proguard  \u914d\u7f6e. Example:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AdColony \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  app id  \u548c  zone id .  AdColony :{\n     id : app id ,\n     debug :true,\n     ads :{\n         video :{\n             zone :  zone id ,\n             v4vc : false\n        },\n         v4vc :{\n             zone :  zone id ,\n             v4vc : true,\n             pre_popup  : true,\n             post_popup : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/#_4", 
            "text": "Modify Lua Code  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u4ee5\u5305\u542b\u5982\u4e0b\u5fc5\u987b\u5934\u6587\u4ef6, \u5e76\u8c03\u7528  AdColony  \u7684lua\u6ce8\u518c\u51fd\u6570.\u6ce8\u610f\u5b83\u4eec\u7684\u53c2\u6570  lua_State*  :  #include  PluginAdColonyLua.hpp \n#include  PluginAdColonyLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginAdColonyLua(L);\n  register_PluginAdColonyLua_helper(L);\n}  \u521d\u59cb\u5316 AdColony  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6. \u8fd9\u4e2a\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8981\u60f3\u4f7f\u7528 AdColony \u7684\u529f\u80fd\u4e4b\u524d.  sdkbox.PluginAdColony:init()  Showing Ads  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:  sdkbox.PluginAdColony:show( video )  \u6216:  sdkbox.PluginAdColony:show( v4vc )  \u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  AdColony  \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c:   sdkbox.PluginAdColony:setListener(function(args)\n    if  onAdColonyChange  == args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local available = args.available -- boolean\n                dump(info,  onAdColonyChange: )\n        print( available: , available)\n    elseif  onAdColonyReward  ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local currencyName = args.currencyName -- string\n        local amount = args.amount -- int\n        local success = args.success -- boolean\n                dump(info,  onAdColonyReward: )\n        print( currencyName: , currencyName)\n        print( amount: , amount)\n        print( success: , success)\n    elseif  onAdColonyStarted  ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info,  onAdColonyStarted: )\n    elseif  onAdColonyFinished  ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info,  onAdColonyFinished: )\n    end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/adcolony/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginAdColony:zoneStatusForZone(zoneID)   returns the status for the specified zone. Use this to pre-load a zone.   sdkbox.PluginAdColony:isVirtualCurrencyRewardAvailableForZone(zoneID)   check if this zone offers a virtual currency reward.   sdkbox.PluginAdColony:show(name)   play video ad using provided  zone name  that was specified in  sdkbox_config.json .   sdkbox.PluginAdColony:getStatus(name)   Check the availability of the AdColony ads by name   sdkbox.PluginAdColony:getVirtualCurrencyRewardAmountForZone(zoneID)   is there a virtual currency reward available to the user today for passed in\nzone.   sdkbox.PluginAdColony:init()   initialize the instance.   sdkbox.PluginAdColony:videoAdCurrentlyRunning()   is there a video currently showing?   sdkbox.PluginAdColony:turnAllAdsOff()   turn off all ads.   sdkbox.PluginAdColony:getVideoCreditBalance(currencyName)   get video credit balance for passed in currency name.   sdkbox.PluginAdColony:getVideosPerReward(currencyName)   are there multiple videos to watch per reward? Get the number of them.   sdkbox.PluginAdColony:getVirtualCurrencyNameForZone(zoneID)   get virtual currency name for passed in zone.   sdkbox.PluginAdColony:getVirtualCurrencyRewardsAvailableTodayForZone(zoneID)   is there a virtual currency reward available to the user today for passed in\nzone.   sdkbox.PluginAdColony:cancelAd()   stop the currently showing ad.   Listeners  /**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */  onAdColonyChange(data, available)   called when AdColony is finished loading.   onAdColonyReward(data, currencyName, amount, success)   reward was received.   onAdColonyStarted(data)   showing an ad has started.   onAdColonyFinished(data)   showing an ad has finished.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/", 
            "text": "AdColony\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import adcolony\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n,\u5199\u5165\u4e00\u4e2a \nProguard\n \u914d\u7f6e. Example:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAdColony\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \napp id\n \u548c \nzone id\n.\n\n\nAdColony\n:{\n    \nid\n:\napp id\n,\n    \ndebug\n:true,\n    \nads\n:{\n        \nvideo\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: false\n        },\n        \nv4vc\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: true,\n            \npre_popup\n : true,\n            \npost_popup\n: true\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 AdColony\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAdColony/PluginAdColony.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAdColony::init();\n}\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:\n\n\nsdkbox::PluginAdColony::show(\nvideo\n);\n\n\n\n\n\u6216:\n\n\nsdkbox::PluginAdColony::show(\nv4vc\n);\n\n\n\n\n\u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nAdColony\n \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::AdColonyListener\n\n\n\n\n#include \nPluginAdColony/PluginAdColony.h\n\nclass MyClass : public sdkbox::AdColonyListener\n{\nprivate:\n  void onAdColonyChange(const sdkbox::AdColonyAdInfo\n info, bool available);\n  void onAdColonyReward(const sdkbox::AdColonyAdInfo\n info,\n        const std::string\n currencyName, int amount, bool success);\n  void onAdColonyStarted(const sdkbox::AdColonyAdInfo\n info);\n  void onAdColonyFinished(const sdkbox::AdColonyAdInfo\n info);\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03:\n\n\n\n\nsdkbox::PluginAdColony::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic AdColonyAdStatus getStatus(const std::string\n name);\n\n\n\n\n\n\nCheck the availability of the AdColony ads by name\n\n\n\n\nstatic int zoneStatusForZone(const std::string\n zoneID);\n\n\n\n\n\n\nreturns the status for the specified zone. Use this to pre-load a zone.\n\n\n\n\nstatic void show(const std::string\n name);\n\n\n\n\n\n\nplay video ad using provided \nzone name\n that was specified in \nsdkbox_config.json\n.\n\n\n\n\nstatic void setListener(AdColonyListener* listener);\n\n\n\n\n\n\nset a listener to listen for event changes.\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nremove the event listener.\n\n\n\n\nstatic bool isVirtualCurrencyRewardAvailableForZone(const std::string\n zoneID);\n\n\n\n\n\n\ncheck if this zone offers a virtual currency reward.\n\n\n\n\nstatic int getVirtualCurrencyRewardsAvailableTodayForZone(\n  const std::string\n zoneID);\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nstatic std::string getVirtualCurrencyNameForZone(const std::string\n zoneID);\n\n\n\n\n\n\nget virtual currency name for passed in zone.\n\n\n\n\nstatic int getVirtualCurrencyRewardAmountForZone(const std::string\n zoneID);\n\n\n\n\n\n\nthe amount of the virtual currency reward for passed in zone.\n\n\n\n\nstatic int getVideosPerReward(const std::string\n currencyName);\n\n\n\n\n\n\nare there multiple videos to watch per reward? Get the number of them.\n\n\n\n\nstatic int getVideoCreditBalance(const std::string\n currencyName);\n\n\n\n\n\n\nget video credit balance for passed in currency name.\n\n\n\n\nstatic void cancelAd();\n\n\n\n\n\n\nstop the currently showing ad.\n\n\n\n\nstatic bool videoAdCurrentlyRunning();\n\n\n\n\n\n\nis there a video currently showing?\n\n\n\n\nstatic void turnAllAdsOff();\n\n\n\n\n\n\nturn off all ads.\n\n\n\n\nListeners\n\n\nvoid onAdColonyChange(const sdkbox::AdColonyAdInfo\n info, bool available);\n\n\n\n\n\n\ncalled when AdColony is finished loading.\n\n\n\n\nvoid onAdColonyReward(const sdkbox::AdColonyAdInfo\n info,\n  const std::string\n currencyName,\n  int amount, bool success);\n\n\n\n\n\n\nreward was received.\n\n\n\n\nvoid onAdColonyStarted(const sdkbox::AdColonyAdInfo\n info);\n\n\n\n\n\n\nshowing an ad has started.\n\n\n\n\nvoid onAdColonyFinished(const sdkbox::AdColonyAdInfo\n info);\n\n\n\n\n\n\nshowing an ad has finished.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/#adcolony", 
            "text": "", 
            "title": "AdColony"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import adcolony", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u7f16\u8f91  project.properties ,\u5199\u5165\u4e00\u4e2a  Proguard  \u914d\u7f6e. Example:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AdColony \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  app id  \u548c  zone id .  AdColony :{\n     id : app id ,\n     debug :true,\n     ads :{\n         video :{\n             zone :  zone id ,\n             v4vc : false\n        },\n         v4vc :{\n             zone :  zone id ,\n             v4vc : true,\n             pre_popup  : true,\n             post_popup : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 AdColony   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginAdColony/PluginAdColony.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAdColony::init();\n}  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:  sdkbox::PluginAdColony::show( video );  \u6216:  sdkbox::PluginAdColony::show( v4vc );  \u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  AdColony  \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::AdColonyListener   #include  PluginAdColony/PluginAdColony.h \nclass MyClass : public sdkbox::AdColonyListener\n{\nprivate:\n  void onAdColonyChange(const sdkbox::AdColonyAdInfo  info, bool available);\n  void onAdColonyReward(const sdkbox::AdColonyAdInfo  info,\n        const std::string  currencyName, int amount, bool success);\n  void onAdColonyStarted(const sdkbox::AdColonyAdInfo  info);\n  void onAdColonyFinished(const sdkbox::AdColonyAdInfo  info);\n};   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03:   sdkbox::PluginAdColony::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/adcolony/v2-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static AdColonyAdStatus getStatus(const std::string  name);   Check the availability of the AdColony ads by name   static int zoneStatusForZone(const std::string  zoneID);   returns the status for the specified zone. Use this to pre-load a zone.   static void show(const std::string  name);   play video ad using provided  zone name  that was specified in  sdkbox_config.json .   static void setListener(AdColonyListener* listener);   set a listener to listen for event changes.   static void removeListener();   remove the event listener.   static bool isVirtualCurrencyRewardAvailableForZone(const std::string  zoneID);   check if this zone offers a virtual currency reward.   static int getVirtualCurrencyRewardsAvailableTodayForZone(\n  const std::string  zoneID);   is there a virtual currency reward available to the user today for passed in\nzone.   static std::string getVirtualCurrencyNameForZone(const std::string  zoneID);   get virtual currency name for passed in zone.   static int getVirtualCurrencyRewardAmountForZone(const std::string  zoneID);   the amount of the virtual currency reward for passed in zone.   static int getVideosPerReward(const std::string  currencyName);   are there multiple videos to watch per reward? Get the number of them.   static int getVideoCreditBalance(const std::string  currencyName);   get video credit balance for passed in currency name.   static void cancelAd();   stop the currently showing ad.   static bool videoAdCurrentlyRunning();   is there a video currently showing?   static void turnAllAdsOff();   turn off all ads.   Listeners  void onAdColonyChange(const sdkbox::AdColonyAdInfo  info, bool available);   called when AdColony is finished loading.   void onAdColonyReward(const sdkbox::AdColonyAdInfo  info,\n  const std::string  currencyName,\n  int amount, bool success);   reward was received.   void onAdColonyStarted(const sdkbox::AdColonyAdInfo  info);   showing an ad has started.   void onAdColonyFinished(const sdkbox::AdColonyAdInfo  info);   showing an ad has finished.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/", 
            "text": "AdColony\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import adcolony\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n,\u5199\u5165\u4e00\u4e2a \nProguard\n \u914d\u7f6e. Example:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAdColony\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \napp id\n \u548c \nzone id\n.\n\n\nAdColony\n:{\n    \nid\n:\napp id\n,\n    \ndebug\n:true,\n    \nads\n:{\n        \nvideo\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: false\n        },\n        \nv4vc\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: true,\n            \npre_popup\n : true,\n            \npost_popup\n: true\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 AdColony\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginAdColony.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAdColonyJS.hpp\n\n#include \nPluginAdColonyJSHelper.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginAdColonyJS);\nsc-\naddRegisterCallback(register_all_PluginAdColonyJS_helper);\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u8981\u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u4ee3\u7801\u4e2d,\u8f93\u5165\u5982\u4e0b:\n\n\nsdkbox.PluginAdColony.show(\nvideo\n);\n\n\n\n\n\u6216:\n\n\nsdkbox.PluginAdColony.show(\nv4vc\n);\n\n\n\n\n\u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nAdColony\n \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c:\n\n\n\n\n/**\n * data \u7684\u6570\u636e\u5982\u4e0b\n * data.name : \u5e7f\u544a\u7684\u540d\u5b57 (\u5728\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json \u4e2d\u5b9a\u4e49)\n * data.zoneID : \u5e7f\u544a\u7684 zoneID\n * data.shown : \u6807\u8bb0\u5e7f\u544a\u662f\u5426\u663e\u793a\u4e86,\u6216\u88ab\u7528\u6237\u5173\u95ed\u4e86\n * data.iapEnabled : \u6807\u8bb0\u5173\u8054\u7684\u5e7f\u544a\u662f\u5426\u662fIAP\n * data.iapProductID : \u5e7f\u544a\u7684IAP\u5bf9\u5e94\u7684\u5546\u54c1id\n * data.iapQuantity : \u7528\u6237\u8981\u4ed8\u8d39\u5546\u54c1\u7684\u6570\u91cf\n * data.iapEngagementType : \u5546\u54c1\u7c7b\u578b\n */\n\nsdkbox.PluginAdColony.setListener({\n        onAdColonyChange : function (data, available) {\n                // \u5f53AdColony\u5b8c\u6210\u52a0\u8f7d\u8c03\u7528\n        },\n        onAdColonyReward : function (data, currencyName, amount, success) {\n                // \u5f53AdColony\u7684 v4vc \u5e7f\u544a\u64ad\u653e\u5b8c\u6bd5\u540e\u8c03\u7528\n        },\n        onAdColonyStarted : function (data) {\n                // \u5f53\u5e7f\u544a\u5f00\u59cb\u64ad\u653e\u8c03\u7528\n        },\n        onAdColonyFinished : function (data) {\n                // \u5f53\u5e7f\u544a\u663e\u793a\u5b8c\u6bd5\u540e\u8c03\u7528\n        }\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAdColony.zoneStatusForZone(zoneID);\n\n\n\n\n\n\nreturns the status for the specified zone. Use this to pre-load a zone.\n\n\n\n\nsdkbox.PluginAdColony.isVirtualCurrencyRewardAvailableForZone(zoneID);\n\n\n\n\n\n\ncheck if this zone offers a virtual currency reward.\n\n\n\n\nsdkbox.PluginAdColony.show(name);\n\n\n\n\n\n\nplay video ad using provided \nzone name\n that was specified in \nsdkbox_config.json\n.\n\n\n\n\nsdkbox.PluginAdColony.getStatus(name);\n\n\n\n\n\n\nCheck the availability of the AdColony ads by name\n\n\n\n\nsdkbox.PluginAdColony.setListener(listener);\n\n\n\n\n\n\nset a listener to listen for event changes.\n\n\n\n\nsdkbox.PluginAdColony.removeListener();\n\n\n\n\n\n\nremove the event listener.\n\n\n\n\nsdkbox.PluginAdColony.getVirtualCurrencyRewardAmountForZone(zoneID);\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in zone.\n\n\n\n\nsdkbox.PluginAdColony.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginAdColony.videoAdCurrentlyRunning();\n\n\n\n\n\n\nis there a video currently showing?\n\n\n\n\nsdkbox.PluginAdColony.turnAllAdsOff();\n\n\n\n\n\n\nturn off all ads.\n\n\n\n\nsdkbox.PluginAdColony.getVideoCreditBalance(currencyName);\n\n\n\n\n\n\nget video credit balance for passed in currency name.\n\n\n\n\nsdkbox.PluginAdColony.getVideosPerReward(currencyName);\n\n\n\n\n\n\nare there multiple videos to watch per reward? Get the number of them.\n\n\n\n\nsdkbox.PluginAdColony.getVirtualCurrencyNameForZone(zoneID);\n\n\n\n\n\n\nget virtual currency name for passed in zone.\n\n\n\n\nsdkbox.PluginAdColony.getVirtualCurrencyRewardsAvailableTodayForZone(zoneID);\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nsdkbox.PluginAdColony.cancelAd();\n\n\n\n\n\n\nstop the currently showing ad.\n\n\n\n\nListeners\n\n\n/**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */\n\n\n\n\nonAdColonyChange(data, available);\n\n\n\n\n\n\ncalled when AdColony is finished loading.\n\n\n\n\nonAdColonyReward(data, currencyName, amount, success);\n\n\n\n\n\n\nreward was received.\n\n\n\n\nonAdColonyStarted(data);\n\n\n\n\n\n\nshowing an ad has started.\n\n\n\n\nonAdColonyFinished(data);\n\n\n\n\n\n\nshowing an ad has finished.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/#adcolony", 
            "text": "", 
            "title": "AdColony"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import adcolony", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u7f16\u8f91  project.properties ,\u5199\u5165\u4e00\u4e2a  Proguard  \u914d\u7f6e. Example:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AdColony \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  app id  \u548c  zone id .  AdColony :{\n     id : app id ,\n     debug :true,\n     ads :{\n         video :{\n             zone :  zone id ,\n             v4vc : false\n        },\n         v4vc :{\n             zone :  zone id ,\n             v4vc : true,\n             pre_popup  : true,\n             post_popup : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 AdColony   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginAdColony.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginAdColonyJS.hpp \n#include  PluginAdColonyJSHelper.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:   sc- addRegisterCallback(register_all_PluginAdColonyJS);\nsc- addRegisterCallback(register_all_PluginAdColonyJS_helper);  \u663e\u793a\u5e7f\u544a  \u8981\u5728\u4f60\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u4ee3\u7801\u4e2d,\u8f93\u5165\u5982\u4e0b:  sdkbox.PluginAdColony.show( video );  \u6216:  sdkbox.PluginAdColony.show( v4vc );  \u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  AdColony  \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c:   /**\n * data \u7684\u6570\u636e\u5982\u4e0b\n * data.name : \u5e7f\u544a\u7684\u540d\u5b57 (\u5728\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json \u4e2d\u5b9a\u4e49)\n * data.zoneID : \u5e7f\u544a\u7684 zoneID\n * data.shown : \u6807\u8bb0\u5e7f\u544a\u662f\u5426\u663e\u793a\u4e86,\u6216\u88ab\u7528\u6237\u5173\u95ed\u4e86\n * data.iapEnabled : \u6807\u8bb0\u5173\u8054\u7684\u5e7f\u544a\u662f\u5426\u662fIAP\n * data.iapProductID : \u5e7f\u544a\u7684IAP\u5bf9\u5e94\u7684\u5546\u54c1id\n * data.iapQuantity : \u7528\u6237\u8981\u4ed8\u8d39\u5546\u54c1\u7684\u6570\u91cf\n * data.iapEngagementType : \u5546\u54c1\u7c7b\u578b\n */\n\nsdkbox.PluginAdColony.setListener({\n        onAdColonyChange : function (data, available) {\n                // \u5f53AdColony\u5b8c\u6210\u52a0\u8f7d\u8c03\u7528\n        },\n        onAdColonyReward : function (data, currencyName, amount, success) {\n                // \u5f53AdColony\u7684 v4vc \u5e7f\u544a\u64ad\u653e\u5b8c\u6bd5\u540e\u8c03\u7528\n        },\n        onAdColonyStarted : function (data) {\n                // \u5f53\u5e7f\u544a\u5f00\u59cb\u64ad\u653e\u8c03\u7528\n        },\n        onAdColonyFinished : function (data) {\n                // \u5f53\u5e7f\u544a\u663e\u793a\u5b8c\u6bd5\u540e\u8c03\u7528\n        }\n});", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/adcolony/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginAdColony.zoneStatusForZone(zoneID);   returns the status for the specified zone. Use this to pre-load a zone.   sdkbox.PluginAdColony.isVirtualCurrencyRewardAvailableForZone(zoneID);   check if this zone offers a virtual currency reward.   sdkbox.PluginAdColony.show(name);   play video ad using provided  zone name  that was specified in  sdkbox_config.json .   sdkbox.PluginAdColony.getStatus(name);   Check the availability of the AdColony ads by name   sdkbox.PluginAdColony.setListener(listener);   set a listener to listen for event changes.   sdkbox.PluginAdColony.removeListener();   remove the event listener.   sdkbox.PluginAdColony.getVirtualCurrencyRewardAmountForZone(zoneID);   is there a virtual currency reward available to the user today for passed in zone.   sdkbox.PluginAdColony.init();   initialize the plugin instance.   sdkbox.PluginAdColony.videoAdCurrentlyRunning();   is there a video currently showing?   sdkbox.PluginAdColony.turnAllAdsOff();   turn off all ads.   sdkbox.PluginAdColony.getVideoCreditBalance(currencyName);   get video credit balance for passed in currency name.   sdkbox.PluginAdColony.getVideosPerReward(currencyName);   are there multiple videos to watch per reward? Get the number of them.   sdkbox.PluginAdColony.getVirtualCurrencyNameForZone(zoneID);   get virtual currency name for passed in zone.   sdkbox.PluginAdColony.getVirtualCurrencyRewardsAvailableTodayForZone(zoneID);   is there a virtual currency reward available to the user today for passed in\nzone.   sdkbox.PluginAdColony.cancelAd();   stop the currently showing ad.   Listeners  /**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */  onAdColonyChange(data, available);   called when AdColony is finished loading.   onAdColonyReward(data, currencyName, amount, success);   reward was received.   onAdColonyStarted(data);   showing an ad has started.   onAdColonyFinished(data);   showing an ad has finished.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/", 
            "text": "AdColony\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import adcolony\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n,\u5199\u5165\u4e00\u4e2a \nProguard\n \u914d\u7f6e. Example:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAdColony\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \napp id\n \u548c \nzone id\n.\n\n\nAdColony\n:{\n    \nid\n:\napp id\n,\n    \ndebug\n:true,\n    \nads\n:{\n        \nvideo\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: false\n        },\n        \nv4vc\n:{\n            \nzone\n: \nzone id\n,\n            \nv4vc\n: true,\n            \npre_popup\n : true,\n            \npost_popup\n: true\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAdColonyLua.hpp\n\n#include \nPluginAdColonyLuaHelper.hpp\n\n\n\n\n\n\n\n\u7136\u540e, \u6211\u4eec\u9700\u8981\u8c03\u7528 \nregister_all_PluginAdColonyLua(\nlua_State*\n);\n \u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.\n\n\n\n\n\u6ce8\u610f:\n \u4e0a\u9762\u7684\u8c03\u7528\u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e,\u800c\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d.\n\n\n\u5982\u4e0b\u662f\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50:\n\n\n\n#include \nPluginAdColonyLua.hpp\n\n#include \nPluginAdColonyLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginAdColonyLua(tolua_s);\n    register_all_PluginAdColonyLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 AdColony\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6. \u8fd9\u4e2a\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8981\u60f3\u4f7f\u7528 AdColony \u7684\u529f\u80fd\u4e4b\u524d.\n\n\nsdkbox.PluginAdColony:init()\n\n\n\n\nShowing Ads\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:\n\n\nsdkbox.PluginAdColony:show(\nvideo\n)\n\n\n\n\n\u6216:\n\n\nsdkbox.PluginAdColony:show(\nv4vc\n)\n\n\n\n\n\u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nAdColony\n \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c:\n\n\n\n\nsdkbox.PluginAdColony:setListener(function(args)\n    if \nonAdColonyChange\n == args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local available = args.available -- boolean\n                dump(info, \nonAdColonyChange:\n)\n        print(\navailable:\n, available)\n    elseif \nonAdColonyReward\n ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local currencyName = args.currencyName -- string\n        local amount = args.amount -- int\n        local success = args.success -- boolean\n                dump(info, \nonAdColonyReward:\n)\n        print(\ncurrencyName:\n, currencyName)\n        print(\namount:\n, amount)\n        print(\nsuccess:\n, success)\n    elseif \nonAdColonyStarted\n ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info, \nonAdColonyStarted:\n)\n    elseif \nonAdColonyFinished\n ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info, \nonAdColonyFinished:\n)\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAdColony:zoneStatusForZone(zoneID)\n\n\n\n\n\n\nreturns the status for the specified zone. Use this to pre-load a zone.\n\n\n\n\nsdkbox.PluginAdColony:isVirtualCurrencyRewardAvailableForZone(zoneID)\n\n\n\n\n\n\ncheck if this zone offers a virtual currency reward.\n\n\n\n\nsdkbox.PluginAdColony:show(name)\n\n\n\n\n\n\nplay video ad using provided \nzone name\n that was specified in \nsdkbox_config.json\n.\n\n\n\n\nsdkbox.PluginAdColony:getStatus(name)\n\n\n\n\n\n\nCheck the availability of the AdColony ads by name\n\n\n\n\nsdkbox.PluginAdColony:getVirtualCurrencyRewardAmountForZone(zoneID)\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nsdkbox.PluginAdColony:init()\n\n\n\n\n\n\ninitialize the instance.\n\n\n\n\nsdkbox.PluginAdColony:videoAdCurrentlyRunning()\n\n\n\n\n\n\nis there a video currently showing?\n\n\n\n\nsdkbox.PluginAdColony:turnAllAdsOff()\n\n\n\n\n\n\nturn off all ads.\n\n\n\n\nsdkbox.PluginAdColony:getVideoCreditBalance(currencyName)\n\n\n\n\n\n\nget video credit balance for passed in currency name.\n\n\n\n\nsdkbox.PluginAdColony:getVideosPerReward(currencyName)\n\n\n\n\n\n\nare there multiple videos to watch per reward? Get the number of them.\n\n\n\n\nsdkbox.PluginAdColony:getVirtualCurrencyNameForZone(zoneID)\n\n\n\n\n\n\nget virtual currency name for passed in zone.\n\n\n\n\nsdkbox.PluginAdColony:getVirtualCurrencyRewardsAvailableTodayForZone(zoneID)\n\n\n\n\n\n\nis there a virtual currency reward available to the user today for passed in\nzone.\n\n\n\n\nsdkbox.PluginAdColony:cancelAd()\n\n\n\n\n\n\nstop the currently showing ad.\n\n\n\n\nListeners\n\n\n/**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */\n\n\n\n\nonAdColonyChange(data, available)\n\n\n\n\n\n\ncalled when AdColony is finished loading.\n\n\n\n\nonAdColonyReward(data, currencyName, amount, success)\n\n\n\n\n\n\nreward was received.\n\n\n\n\nonAdColonyStarted(data)\n\n\n\n\n\n\nshowing an ad has started.\n\n\n\n\nonAdColonyFinished(data)\n\n\n\n\n\n\nshowing an ad has finished.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/#adcolony", 
            "text": "", 
            "title": "AdColony"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AdColony \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import adcolony", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u7f16\u8f91  project.properties ,\u5199\u5165\u4e00\u4e2a  Proguard  \u914d\u7f6e. Example:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6,\u586b\u5165\u4f60\u60f3\u5305\u542f\u7684,\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aAdColony\u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AdColony \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  app id  \u548c  zone id .  AdColony :{\n     id : app id ,\n     debug :true,\n     ads :{\n         video :{\n             zone :  zone id ,\n             v4vc : false\n        },\n         v4vc :{\n             zone :  zone id ,\n             v4vc : true,\n             pre_popup  : true,\n             post_popup : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginAdColonyLua.hpp \n#include  PluginAdColonyLuaHelper.hpp    \u7136\u540e, \u6211\u4eec\u9700\u8981\u8c03\u7528  register_all_PluginAdColonyLua( lua_State* );  \u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.   \u6ce8\u610f:  \u4e0a\u9762\u7684\u8c03\u7528\u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e,\u800c\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d.  \u5982\u4e0b\u662f\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50:  #include  PluginAdColonyLua.hpp \n#include  PluginAdColonyLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginAdColonyLua(tolua_s);\n    register_all_PluginAdColonyLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 AdColony  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6. \u8fd9\u4e2a\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8981\u60f3\u4f7f\u7528 AdColony \u7684\u529f\u80fd\u4e4b\u524d.  sdkbox.PluginAdColony:init()  Showing Ads  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u60f3\u8981\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9,\u8f93\u5165\u5982\u4e0b\u4ee3\u7801:  sdkbox.PluginAdColony:show( video )  \u6216:  sdkbox.PluginAdColony:show( v4vc )  \u63a5\u6536 AdColony \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  AdColony  \u7684\u4e8b\u4ef6, \u8fd9\u6837\u4f60\u53ef\u4ee5\u5728\u73a9\u5bb6\u89c2\u770b\u5b8c\u5e7f\u544a\u540e\u7ed9\u4ed6\u76f8\u5e94\u7684\u5956\u52b1.   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c:   sdkbox.PluginAdColony:setListener(function(args)\n    if  onAdColonyChange  == args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local available = args.available -- boolean\n                dump(info,  onAdColonyChange: )\n        print( available: , available)\n    elseif  onAdColonyReward  ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n        local currencyName = args.currencyName -- string\n        local amount = args.amount -- int\n        local success = args.success -- boolean\n                dump(info,  onAdColonyReward: )\n        print( currencyName: , currencyName)\n        print( amount: , amount)\n        print( success: , success)\n    elseif  onAdColonyStarted  ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info,  onAdColonyStarted: )\n    elseif  onAdColonyFinished  ==  args.name then\n        local info = args.info  -- sdkbox::AdColonyAdInfo\n                dump(info,  onAdColonyFinished: )\n    end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/adcolony/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginAdColony:zoneStatusForZone(zoneID)   returns the status for the specified zone. Use this to pre-load a zone.   sdkbox.PluginAdColony:isVirtualCurrencyRewardAvailableForZone(zoneID)   check if this zone offers a virtual currency reward.   sdkbox.PluginAdColony:show(name)   play video ad using provided  zone name  that was specified in  sdkbox_config.json .   sdkbox.PluginAdColony:getStatus(name)   Check the availability of the AdColony ads by name   sdkbox.PluginAdColony:getVirtualCurrencyRewardAmountForZone(zoneID)   is there a virtual currency reward available to the user today for passed in\nzone.   sdkbox.PluginAdColony:init()   initialize the instance.   sdkbox.PluginAdColony:videoAdCurrentlyRunning()   is there a video currently showing?   sdkbox.PluginAdColony:turnAllAdsOff()   turn off all ads.   sdkbox.PluginAdColony:getVideoCreditBalance(currencyName)   get video credit balance for passed in currency name.   sdkbox.PluginAdColony:getVideosPerReward(currencyName)   are there multiple videos to watch per reward? Get the number of them.   sdkbox.PluginAdColony:getVirtualCurrencyNameForZone(zoneID)   get virtual currency name for passed in zone.   sdkbox.PluginAdColony:getVirtualCurrencyRewardsAvailableTodayForZone(zoneID)   is there a virtual currency reward available to the user today for passed in\nzone.   sdkbox.PluginAdColony:cancelAd()   stop the currently showing ad.   Listeners  /**\n * The structure of data\n * data.name : name of the ad (in sdkbox_config.json)\n * data.zoneID : the zoneID of the ad\n * data.shown : indicates wether the ad gets shown or closed by user\n * data.iapEnabled : indicating whether or not the associated ad is an IAP\n * data.iapProductID : product identifier for the associated ad's IAP\n * data.iapQuantity : he number of items the user wishes to purchase\n * data.iapEngagementType : indicating the IAP engagement mechanism\n *\n * avail = bool\n */  onAdColonyChange(data, available)   called when AdColony is finished loading.   onAdColonyReward(data, currencyName, amount, success)   reward was received.   onAdColonyStarted(data)   showing an ad has started.   onAdColonyFinished(data)   showing an ad has finished.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/", 
            "text": "AgeCheq\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import agecheq\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n# \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nres/sdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAgeCheq ID\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nAppID\n \u548c \nDeveloperKey\n.\n\n\nAgeCheq\n:{\n            \nAppID\n:\nca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc\n,\n            \nDeveloperKey\n:\n9102be76-232b-49b1-9c4f-1c6806d3a975\n\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 AgeCheq\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAgeCheq/PluginAgeCheq.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAgeCheq::init();\n}\n\n\n\n\n\u4f7f\u7528 AgeCheq\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86, \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528 \ncheck\n \u6216 \nassociateDate()\n:\n\n\nsdkbox::PluginAgeCheq::check(\n1426\n);\nsdkbox::PluginAgeCheq::associateData(\n1426\n, \nikfill\n);\n\n\n\n\n\u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u7136\u540e\u5728\u7a0b\u5e8f\u505a\u4e0d\u540c\u7684\u5904\u7406\u4e0e\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::AgeCheqListener\n\n\n\n\n#include \nPluginAgeCheq/PluginAgeCheq.h\n\nclass MyClass : public sdkbox::AgeCheqListener\n{\nprivate:\n  void checkResponse(const std::string\n rtn, const std::string\n rtnmsg,\n          int apiversion, int checktype, bool appauthorized,\n          bool appblocked, int parentverified, bool under13,\n          bool under18, bool underdevage, int trials);\n\n  void associateDataResponse(const std::string\n rtn,\n          const std::string\n rtnmsg);\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u6765\u5904\u7406\u8fd9\u4e9b\u56de\u8c03:\n\n\n\n\nsdkbox::PluginAgeCheq::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic bool init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void setListener(AgeCheqListener* listener);\n\n\n\n\n\n\nSet listener to listen for adcolony events\n\n\n\n\nstatic AgeCheqListener* getListener();\n\n\n\n\n\n\nGet the listener\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nRemove the listener, and can't listen to events anymore\n\n\n\n\nstatic void check(const std::string\n ACPin);\n\n\n\n\n\n\nThe AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.\n\n\n\n\nstatic void associateData(const std::string\n ACPin ,\n                            const std::string\n Data);\n\n\n\n\n\n\nThe associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.\n\n\n\n\nListeners\n\n\nvoid checkResponse(const std::string\n rtn ,\n                     const std::string\n rtnmsg ,\n                     int apiversion ,\n                     int checktype ,\n                     bool appauthorized ,\n                     bool appblocked ,\n                     int parentverified ,\n                     bool under13 ,\n                     bool under18 ,\n                     bool underdevage ,\n                     int trials);\n\n\n\n\n\n\nThe delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.\n\n\n\n\nvoid associateDataResponse(const std::string\n rtn ,\n                             const std::string\n rtnmsg);\n\n\n\n\n\n\nThe delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/#agecheq", 
            "text": "", 
            "title": "AgeCheq"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import agecheq", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u4fee\u6539  project.properties  \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   # \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 res/sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AgeCheq ID \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  AppID  \u548c  DeveloperKey .  AgeCheq :{\n             AppID : ca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc ,\n             DeveloperKey : 9102be76-232b-49b1-9c4f-1c6806d3a975 \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 AgeCheq   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginAgeCheq/PluginAgeCheq.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAgeCheq::init();\n}  \u4f7f\u7528 AgeCheq  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86, \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528  check  \u6216  associateDate() :  sdkbox::PluginAgeCheq::check( 1426 );\nsdkbox::PluginAgeCheq::associateData( 1426 ,  ikfill );  \u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u7136\u540e\u5728\u7a0b\u5e8f\u505a\u4e0d\u540c\u7684\u5904\u7406\u4e0e\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::AgeCheqListener   #include  PluginAgeCheq/PluginAgeCheq.h \nclass MyClass : public sdkbox::AgeCheqListener\n{\nprivate:\n  void checkResponse(const std::string  rtn, const std::string  rtnmsg,\n          int apiversion, int checktype, bool appauthorized,\n          bool appblocked, int parentverified, bool under13,\n          bool under18, bool underdevage, int trials);\n\n  void associateDataResponse(const std::string  rtn,\n          const std::string  rtnmsg);\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u6765\u5904\u7406\u8fd9\u4e9b\u56de\u8c03:   sdkbox::PluginAgeCheq::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/agecheq/v3-cpp/#api-reference", 
            "text": "Methods  static bool init();   initialize the plugin instance.   static void setListener(AgeCheqListener* listener);   Set listener to listen for adcolony events   static AgeCheqListener* getListener();   Get the listener   static void removeListener();   Remove the listener, and can't listen to events anymore   static void check(const std::string  ACPin);   The AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.   static void associateData(const std::string  ACPin ,\n                            const std::string  Data);   The associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.   Listeners  void checkResponse(const std::string  rtn ,\n                     const std::string  rtnmsg ,\n                     int apiversion ,\n                     int checktype ,\n                     bool appauthorized ,\n                     bool appblocked ,\n                     int parentverified ,\n                     bool under13 ,\n                     bool under18 ,\n                     bool underdevage ,\n                     int trials);   The delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.   void associateDataResponse(const std::string  rtn ,\n                             const std::string  rtnmsg);   The delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/", 
            "text": "AgeCheq\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import agecheq\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n# \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nres/sdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAgeCheq ID\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nAppID\n \u548c \nDeveloperKey\n.\n\n\nAgeCheq\n:{\n            \nAppID\n:\nca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc\n,\n            \nDeveloperKey\n:\n9102be76-232b-49b1-9c4f-1c6806d3a975\n\n}\n\n\n\n\n\u7528\u6cd5\n\n\nInitialize AgeCheq\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginAgeCheq.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5728\u5176\u4e2d\u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAgeCheqJS.hpp\n\n#include \nPluginAgeCheqJSHelper.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5728\u5176\u4e2d\u8c03\u4e0b\u5982\u4e0b\u4ee3\u7801:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginAgeCheqJS);\nsc-\naddRegisterCallback(register_all_PluginAgeCheqJS_helper);\n\n\n\n\n\u4f7f\u7528 AgeCheq\n\n\n\u5728\u521d\u59cb\u5316\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u4f7f\u7528 \ncheck\n \u529f\u80fd:\n\n\nsdkbox.PluginAgeCheq.check(\nagecheqPin\n);\n\n\n\n\n\u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u5e76\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u54cd\u5e94. \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:\n\n\nsdkbox.PluginAgeCheq.init();\nsdkbox.PluginAgeCheq.setListener({\n    checkResponse : function (rtn, rtnmsg, apiversion, checktype, appauthorized, appblocked, parentverified, under13, under18, underdevage, trials) {\n        cc.log(\ncheckResponse rtn:\n + rtn + \n rtnmsg:\n + rtnmsg\n            + \n apiversion:\n + apiversion + \n checktype:\n + checktype\n            + \n appauthorized:\n + appauthorized + \n appblocked:\n + appblocked\n            + \n parentverified:\n + parentverified + \n under13:\n + under13\n            + \n under18:\n + under18 + \n underdevage:\n + underdevage + \n trials:\n + trials);\n    },\n    associateDataResponse : function (rtn, rtnmsg) {\n        cc.log(\nassociateDataResponse rtn:\n + rtn + \n rtnmsg:\n + rtnmsg);\n    }\n})\nsdkbox.PluginAgeCheq.check(\nagecheqPin\n);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAgeCheq.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginAgeCheq.setListener(listener);\n\n\n\n\n\n\nSet listener to listen for adcolony events\n\n\n\n\nsdkbox.PluginAgeCheq.check(ACPin);\n\n\n\n\n\n\nThe AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.\n\n\n\n\nsdkbox.PluginAgeCheq.associateData(ACPin, Data);\n\n\n\n\n\n\nThe associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.\n\n\n\n\nListeners\n\n\ncheckResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials);\n\n\n\n\n\n\nThe delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.\n\n\n\n\nassociateDataResponse(rtn, rtnmsg);\n\n\n\n\n\n\nThe delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/#agecheq", 
            "text": "", 
            "title": "AgeCheq"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import agecheq", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u4fee\u6539  project.properties  \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   # \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 res/sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AgeCheq ID \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  AppID  \u548c  DeveloperKey .  AgeCheq :{\n             AppID : ca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc ,\n             DeveloperKey : 9102be76-232b-49b1-9c4f-1c6806d3a975 \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/#_4", 
            "text": "Initialize AgeCheq   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginAgeCheq.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5728\u5176\u4e2d\u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginAgeCheqJS.hpp \n#include  PluginAgeCheqJSHelper.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5728\u5176\u4e2d\u8c03\u4e0b\u5982\u4e0b\u4ee3\u7801:   sc- addRegisterCallback(register_all_PluginAgeCheqJS);\nsc- addRegisterCallback(register_all_PluginAgeCheqJS_helper);  \u4f7f\u7528 AgeCheq  \u5728\u521d\u59cb\u5316\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u4f7f\u7528  check  \u529f\u80fd:  sdkbox.PluginAgeCheq.check( agecheqPin );  \u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u5e76\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u54cd\u5e94. \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:  sdkbox.PluginAgeCheq.init();\nsdkbox.PluginAgeCheq.setListener({\n    checkResponse : function (rtn, rtnmsg, apiversion, checktype, appauthorized, appblocked, parentverified, under13, under18, underdevage, trials) {\n        cc.log( checkResponse rtn:  + rtn +   rtnmsg:  + rtnmsg\n            +   apiversion:  + apiversion +   checktype:  + checktype\n            +   appauthorized:  + appauthorized +   appblocked:  + appblocked\n            +   parentverified:  + parentverified +   under13:  + under13\n            +   under18:  + under18 +   underdevage:  + underdevage +   trials:  + trials);\n    },\n    associateDataResponse : function (rtn, rtnmsg) {\n        cc.log( associateDataResponse rtn:  + rtn +   rtnmsg:  + rtnmsg);\n    }\n})\nsdkbox.PluginAgeCheq.check( agecheqPin );", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/agecheq/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginAgeCheq.init();   initialize the plugin instance.   sdkbox.PluginAgeCheq.setListener(listener);   Set listener to listen for adcolony events   sdkbox.PluginAgeCheq.check(ACPin);   The AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.   sdkbox.PluginAgeCheq.associateData(ACPin, Data);   The associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.   Listeners  checkResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials);   The delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.   associateDataResponse(rtn, rtnmsg);   The delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/", 
            "text": "AgeCheq\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import agecheq\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n# \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nres/sdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAgeCheq ID\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nAppID\n \u548c \nDeveloperKey\n.\n\n\nAgeCheq\n:{\n            \nAppID\n:\nca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc\n,\n            \nDeveloperKey\n:\n9102be76-232b-49b1-9c4f-1c6806d3a975\n\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c \nAgeCheq\n \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570 \nlua_State*\n:\n\n\n#include \nPluginAgeCheqLua.hpp\n\n#include \nPluginAgeCheqLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginAgeCheqLua(L);\n  register_PluginAgeCheqLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 AgeCheq\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginAgeCheq:init()\n\n\n\n\n\u4f7f\u7528 AgeCheq\n\n\n\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528 \ncheck\n \u529f\u80fd:\n\n\nsdkbox.PluginAgeCheq:check(\nagecheqPin\n)\n\n\n\n\n\u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u4e8b\u4ef6,\u7136\u540e\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u5728\u7a0b\u5e8f\u4e2d\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:\n\n\nsdkbox.PluginAgeCheq:init()\nsdkbox.PluginAgeCheq:setListener(function(data)\n        if \ncheckResponse\n == data.event then\n            dump(data)\n        elseif \nassociateDataResponse\n == data.event then\n            dump(data)\n        end\n    end)\nsdkbox.PluginAgeCheq:check(\nagecheqPin\n)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAgeCheq:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginAgeCheq:setListener(listener)\n\n\n\n\n\n\nSet listener to listen for adcolony events\n\n\n\n\nsdkbox.PluginAgeCheq:check(ACPin)\n\n\n\n\n\n\nThe AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.\n\n\n\n\nsdkbox.PluginAgeCheq:associateData(ACPin, Data)\n\n\n\n\n\n\nThe associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.\n\n\n\n\nListeners\n\n\ncheckResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials)\n\n\n\n\n\n\nThe delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.\n\n\n\n\nassociateDataResponse(rtn, rtnmsg)\n\n\n\n\n\n\nThe delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/#agecheq", 
            "text": "", 
            "title": "AgeCheq"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import agecheq", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u4fee\u6539  project.properties  \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   # \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 res/sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AgeCheq ID \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  AppID  \u548c  DeveloperKey .  AgeCheq :{\n             AppID : ca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc ,\n             DeveloperKey : 9102be76-232b-49b1-9c4f-1c6806d3a975 \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c  AgeCheq  \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570  lua_State* :  #include  PluginAgeCheqLua.hpp \n#include  PluginAgeCheqLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginAgeCheqLua(L);\n  register_PluginAgeCheqLua_helper(L);\n}  \u521d\u59cb\u5316 AgeCheq  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginAgeCheq:init()  \u4f7f\u7528 AgeCheq  \u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528  check  \u529f\u80fd:  sdkbox.PluginAgeCheq:check( agecheqPin )  \u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u4e8b\u4ef6,\u7136\u540e\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u5728\u7a0b\u5e8f\u4e2d\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:  sdkbox.PluginAgeCheq:init()\nsdkbox.PluginAgeCheq:setListener(function(data)\n        if  checkResponse  == data.event then\n            dump(data)\n        elseif  associateDataResponse  == data.event then\n            dump(data)\n        end\n    end)\nsdkbox.PluginAgeCheq:check( agecheqPin )", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/agecheq/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginAgeCheq:init()   initialize the plugin instance.   sdkbox.PluginAgeCheq:setListener(listener)   Set listener to listen for adcolony events   sdkbox.PluginAgeCheq:check(ACPin)   The AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.   sdkbox.PluginAgeCheq:associateData(ACPin, Data)   The associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.   Listeners  checkResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials)   The delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.   associateDataResponse(rtn, rtnmsg)   The delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/", 
            "text": "AgeCheq\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import agecheq\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n# \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nres/sdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAgeCheq ID\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nAppID\n \u548c \nDeveloperKey\n.\n\n\nAgeCheq\n:{\n            \nAppID\n:\nca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc\n,\n            \nDeveloperKey\n:\n9102be76-232b-49b1-9c4f-1c6806d3a975\n\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 AgeCheq\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAgeCheq/PluginAgeCheq.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAgeCheq::init();\n}\n\n\n\n\n\u4f7f\u7528 AgeCheq\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86, \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528 \ncheck\n \u6216 \nassociateDate()\n:\n\n\nsdkbox::PluginAgeCheq::check(\n1426\n);\nsdkbox::PluginAgeCheq::associateData(\n1426\n, \nikfill\n);\n\n\n\n\n\u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u7136\u540e\u5728\u7a0b\u5e8f\u505a\u4e0d\u540c\u7684\u5904\u7406\u4e0e\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::AgeCheqListener\n\n\n\n\n#include \nPluginAgeCheq/PluginAgeCheq.h\n\nclass MyClass : public sdkbox::AgeCheqListener\n{\nprivate:\n  void checkResponse(const std::string\n rtn, const std::string\n rtnmsg,\n          int apiversion, int checktype, bool appauthorized,\n          bool appblocked, int parentverified, bool under13,\n          bool under18, bool underdevage, int trials);\n\n  void associateDataResponse(const std::string\n rtn,\n          const std::string\n rtnmsg);\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u6765\u5904\u7406\u8fd9\u4e9b\u56de\u8c03:\n\n\n\n\nsdkbox::PluginAgeCheq::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic bool init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void setListener(AgeCheqListener* listener);\n\n\n\n\n\n\nSet listener to listen for adcolony events\n\n\n\n\nstatic AgeCheqListener* getListener();\n\n\n\n\n\n\nGet the listener\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nRemove the listener, and can't listen to events anymore\n\n\n\n\nstatic void check(const std::string\n ACPin);\n\n\n\n\n\n\nThe AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.\n\n\n\n\nstatic void associateData(const std::string\n ACPin ,\n                            const std::string\n Data);\n\n\n\n\n\n\nThe associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.\n\n\n\n\nListeners\n\n\nvoid checkResponse(const std::string\n rtn ,\n                     const std::string\n rtnmsg ,\n                     int apiversion ,\n                     int checktype ,\n                     bool appauthorized ,\n                     bool appblocked ,\n                     int parentverified ,\n                     bool under13 ,\n                     bool under18 ,\n                     bool underdevage ,\n                     int trials);\n\n\n\n\n\n\nThe delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.\n\n\n\n\nvoid associateDataResponse(const std::string\n rtn ,\n                             const std::string\n rtnmsg);\n\n\n\n\n\n\nThe delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/#agecheq", 
            "text": "", 
            "title": "AgeCheq"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import agecheq", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u4fee\u6539  project.properties  \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   # \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 res/sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AgeCheq ID \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  AppID  \u548c  DeveloperKey .  AgeCheq :{\n             AppID : ca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc ,\n             DeveloperKey : 9102be76-232b-49b1-9c4f-1c6806d3a975 \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 AgeCheq   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginAgeCheq/PluginAgeCheq.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginAgeCheq::init();\n}  \u4f7f\u7528 AgeCheq  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86, \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528  check  \u6216  associateDate() :  sdkbox::PluginAgeCheq::check( 1426 );\nsdkbox::PluginAgeCheq::associateData( 1426 ,  ikfill );  \u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u7136\u540e\u5728\u7a0b\u5e8f\u505a\u4e0d\u540c\u7684\u5904\u7406\u4e0e\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::AgeCheqListener   #include  PluginAgeCheq/PluginAgeCheq.h \nclass MyClass : public sdkbox::AgeCheqListener\n{\nprivate:\n  void checkResponse(const std::string  rtn, const std::string  rtnmsg,\n          int apiversion, int checktype, bool appauthorized,\n          bool appblocked, int parentverified, bool under13,\n          bool under18, bool underdevage, int trials);\n\n  void associateDataResponse(const std::string  rtn,\n          const std::string  rtnmsg);\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u6765\u5904\u7406\u8fd9\u4e9b\u56de\u8c03:   sdkbox::PluginAgeCheq::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/agecheq/v2-cpp/#api-reference", 
            "text": "Methods  static bool init();   initialize the plugin instance.   static void setListener(AgeCheqListener* listener);   Set listener to listen for adcolony events   static AgeCheqListener* getListener();   Get the listener   static void removeListener();   Remove the listener, and can't listen to events anymore   static void check(const std::string  ACPin);   The AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.   static void associateData(const std::string  ACPin ,\n                            const std::string  Data);   The associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.   Listeners  void checkResponse(const std::string  rtn ,\n                     const std::string  rtnmsg ,\n                     int apiversion ,\n                     int checktype ,\n                     bool appauthorized ,\n                     bool appblocked ,\n                     int parentverified ,\n                     bool under13 ,\n                     bool under18 ,\n                     bool underdevage ,\n                     int trials);   The delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.   void associateDataResponse(const std::string  rtn ,\n                             const std::string  rtnmsg);   The delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/", 
            "text": "AgeCheq\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import agecheq\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n# \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nres/sdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAgeCheq ID\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nAppID\n \u548c \nDeveloperKey\n.\n\n\nAgeCheq\n:{\n            \nAppID\n:\nca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc\n,\n            \nDeveloperKey\n:\n9102be76-232b-49b1-9c4f-1c6806d3a975\n\n}\n\n\n\n\n\u7528\u6cd5\n\n\nInitialize AgeCheq\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginAgeCheq.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5728\u5176\u4e2d\u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAgeCheqJS.hpp\n\n#include \nPluginAgeCheqJSHelper.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5728\u5176\u4e2d\u8c03\u4e0b\u5982\u4e0b\u4ee3\u7801:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginAgeCheqJS);\nsc-\naddRegisterCallback(register_all_PluginAgeCheqJS_helper);\n\n\n\n\n\u4f7f\u7528 AgeCheq\n\n\n\u5728\u521d\u59cb\u5316\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u4f7f\u7528 \ncheck\n \u529f\u80fd:\n\n\nsdkbox.PluginAgeCheq.check(\nagecheqPin\n);\n\n\n\n\n\u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u5e76\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u54cd\u5e94. \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:\n\n\nsdkbox.PluginAgeCheq.init();\nsdkbox.PluginAgeCheq.setListener({\n    checkResponse : function (rtn, rtnmsg, apiversion, checktype, appauthorized, appblocked, parentverified, under13, under18, underdevage, trials) {\n        cc.log(\ncheckResponse rtn:\n + rtn + \n rtnmsg:\n + rtnmsg\n            + \n apiversion:\n + apiversion + \n checktype:\n + checktype\n            + \n appauthorized:\n + appauthorized + \n appblocked:\n + appblocked\n            + \n parentverified:\n + parentverified + \n under13:\n + under13\n            + \n under18:\n + under18 + \n underdevage:\n + underdevage + \n trials:\n + trials);\n    },\n    associateDataResponse : function (rtn, rtnmsg) {\n        cc.log(\nassociateDataResponse rtn:\n + rtn + \n rtnmsg:\n + rtnmsg);\n    }\n})\nsdkbox.PluginAgeCheq.check(\nagecheqPin\n);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAgeCheq.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginAgeCheq.setListener(listener);\n\n\n\n\n\n\nSet listener to listen for adcolony events\n\n\n\n\nsdkbox.PluginAgeCheq.check(ACPin);\n\n\n\n\n\n\nThe AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.\n\n\n\n\nsdkbox.PluginAgeCheq.associateData(ACPin, Data);\n\n\n\n\n\n\nThe associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.\n\n\n\n\nListeners\n\n\ncheckResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials);\n\n\n\n\n\n\nThe delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.\n\n\n\n\nassociateDataResponse(rtn, rtnmsg);\n\n\n\n\n\n\nThe delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/#agecheq", 
            "text": "", 
            "title": "AgeCheq"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import agecheq", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u4fee\u6539  project.properties  \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   # \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 res/sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AgeCheq ID \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  AppID  \u548c  DeveloperKey .  AgeCheq :{\n             AppID : ca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc ,\n             DeveloperKey : 9102be76-232b-49b1-9c4f-1c6806d3a975 \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/#_4", 
            "text": "Initialize AgeCheq   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginAgeCheq.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5728\u5176\u4e2d\u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginAgeCheqJS.hpp \n#include  PluginAgeCheqJSHelper.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5728\u5176\u4e2d\u8c03\u4e0b\u5982\u4e0b\u4ee3\u7801:   sc- addRegisterCallback(register_all_PluginAgeCheqJS);\nsc- addRegisterCallback(register_all_PluginAgeCheqJS_helper);  \u4f7f\u7528 AgeCheq  \u5728\u521d\u59cb\u5316\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 AgeCheq \u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u4f7f\u7528  check  \u529f\u80fd:  sdkbox.PluginAgeCheq.check( agecheqPin );  \u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u7684\u4e8b\u4ef6,\u5e76\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u54cd\u5e94. \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:  sdkbox.PluginAgeCheq.init();\nsdkbox.PluginAgeCheq.setListener({\n    checkResponse : function (rtn, rtnmsg, apiversion, checktype, appauthorized, appblocked, parentverified, under13, under18, underdevage, trials) {\n        cc.log( checkResponse rtn:  + rtn +   rtnmsg:  + rtnmsg\n            +   apiversion:  + apiversion +   checktype:  + checktype\n            +   appauthorized:  + appauthorized +   appblocked:  + appblocked\n            +   parentverified:  + parentverified +   under13:  + under13\n            +   under18:  + under18 +   underdevage:  + underdevage +   trials:  + trials);\n    },\n    associateDataResponse : function (rtn, rtnmsg) {\n        cc.log( associateDataResponse rtn:  + rtn +   rtnmsg:  + rtnmsg);\n    }\n})\nsdkbox.PluginAgeCheq.check( agecheqPin );", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/agecheq/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginAgeCheq.init();   initialize the plugin instance.   sdkbox.PluginAgeCheq.setListener(listener);   Set listener to listen for adcolony events   sdkbox.PluginAgeCheq.check(ACPin);   The AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.   sdkbox.PluginAgeCheq.associateData(ACPin, Data);   The associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.   Listeners  checkResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials);   The delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.   associateDataResponse(rtn, rtnmsg);   The delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/", 
            "text": "AgeCheq\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import agecheq\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, \u53ef\u9009)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n# \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nres/sdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nAgeCheq ID\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nAppID\n \u548c \nDeveloperKey\n.\n\n\nAgeCheq\n:{\n            \nAppID\n:\nca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc\n,\n            \nDeveloperKey\n:\n9102be76-232b-49b1-9c4f-1c6806d3a975\n\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginAgeCheqLua.hpp\n\n#include \nPluginAgeCheqLuaHelper.h\n\n\n\n\n\n\n\n\u7136\u540e,\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528 \nregister_all_PluginAgeCheqLua(\nlua_State*\n);\n \u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.\n\n\n\n\n\u6ce8\u610f:\n \u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e, \u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u8c03\u7528\u4e0a\u9762\u7684\u6ce8\u518c\u51fd\u6570.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\n\n#include \nPluginAgeCheqLua.hpp\n\n#include \nPluginAgeCheqLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginAgeCheqLua(tolua_s);\n    register_all_PluginAgeCheqLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 AgeCheq\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginAgeCheq:init()\n\n\n\n\n\u4f7f\u7528 AgeCheq\n\n\n\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528 \ncheck\n \u529f\u80fd:\n\n\nsdkbox.PluginAgeCheq:check(\nagecheqPin\n)\n\n\n\n\n\u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u4e8b\u4ef6,\u7136\u540e\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u5728\u7a0b\u5e8f\u4e2d\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:\n\n\nsdkbox.PluginAgeCheq:init()\nsdkbox.PluginAgeCheq:setListener(function(data)\n        if \ncheckResponse\n == data.event then\n            dump(data)\n        elseif \nassociateDataResponse\n == data.event then\n            dump(data)\n        end\n    end)\nsdkbox.PluginAgeCheq:check(\nagecheqPin\n)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginAgeCheq:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginAgeCheq:setListener(listener)\n\n\n\n\n\n\nSet listener to listen for adcolony events\n\n\n\n\nsdkbox.PluginAgeCheq:check(ACPin)\n\n\n\n\n\n\nThe AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.\n\n\n\n\nsdkbox.PluginAgeCheq:associateData(ACPin, Data)\n\n\n\n\n\n\nThe associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.\n\n\n\n\nListeners\n\n\ncheckResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials)\n\n\n\n\n\n\nThe delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.\n\n\n\n\nassociateDataResponse(rtn, rtnmsg)\n\n\n\n\n\n\nThe delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/#agecheq", 
            "text": "", 
            "title": "AgeCheq"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX AgeCheq \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import agecheq", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, \u53ef\u9009)   \u4fee\u6539  project.properties  \u52a0\u5165\u4e00\u4e2a\u7279\u5b9a\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u4f60\u7279\u5b9a\u7684\u6587\u4ef6,\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   # \u5982\u679c\u4f60\u7684JS\u5de5\u7a0b\u7528\u5230\u4e86WebView,\u4e0d\u8981\u6ce8\u91ca\u4e0b\u9762\u7684\u4ee3\u7801,\u5e76\u8f93\u5165\u5b8c\u5168\u5408\u6cd5\u7684 JavasSript \u63a5\u53e3\u7c7b\u540d\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 res/sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a AgeCheq \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 AgeCheq ID \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  AppID  \u548c  DeveloperKey .  AgeCheq :{\n             AppID : ca0e20a3-3bb8-42e1-a5ac-55af7f63dbfc ,\n             DeveloperKey : 9102be76-232b-49b1-9c4f-1c6806d3a975 \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801   \u4fee\u6539  Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginAgeCheqLua.hpp \n#include  PluginAgeCheqLuaHelper.h    \u7136\u540e,\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528  register_all_PluginAgeCheqLua( lua_State* );  \u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.   \u6ce8\u610f:  \u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e, \u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u8c03\u7528\u4e0a\u9762\u7684\u6ce8\u518c\u51fd\u6570.  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  #include  PluginAgeCheqLua.hpp \n#include  PluginAgeCheqLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginAgeCheqLua(tolua_s);\n    register_all_PluginAgeCheqLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 AgeCheq  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginAgeCheq:init()  \u4f7f\u7528 AgeCheq  \u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4efb\u610f\u9700\u8981\u7684\u5730\u65b9\u8c03\u7528  check  \u529f\u80fd:  sdkbox.PluginAgeCheq:check( agecheqPin )  \u63a5\u6536 AgeCheq \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 AgeCheq \u4e8b\u4ef6,\u7136\u540e\u5bf9\u4e0d\u540c\u7684\u4e8b\u4ef6\u5728\u7a0b\u5e8f\u4e2d\u505a\u51fa\u4e0d\u540c\u7684\u54cd\u5e94.\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u80fd\u4f1a\u5982\u4e0b:  sdkbox.PluginAgeCheq:init()\nsdkbox.PluginAgeCheq:setListener(function(data)\n        if  checkResponse  == data.event then\n            dump(data)\n        elseif  associateDataResponse  == data.event then\n            dump(data)\n        end\n    end)\nsdkbox.PluginAgeCheq:check( agecheqPin )", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/agecheq/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginAgeCheq:init()   initialize the plugin instance.   sdkbox.PluginAgeCheq:setListener(listener)   Set listener to listen for adcolony events   sdkbox.PluginAgeCheq:check(ACPin)   The AgeCheq check method is used to determine the status of a child\u2019s relationship with a particular\n online service. It requires the developer\u2019s unique identifier, the child\u2019s AgeCheq PIN as set up by\n their parent, and the unique identifier of the game or application.   sdkbox.PluginAgeCheq:associateData(ACPin, Data)   The associateData method allows you to save a string of information linking it to a particular\n AgeCheqPIN for a specific game or app. You\u2019ll want to use that data later if a parent should\n unauthorize your online service.   Listeners  checkResponse(rtn,\n               rtnmsg,\n               apiversion,\n               checktype,\n               appauthorized,\n               appblocked,\n               parentverified,\n               under13,\n               under18,\n               underdevage,\n               trials)   The delegate named checkResponse is triggered once the check command executes. It contains several\n status variables that you can check against.   associateDataResponse(rtn, rtnmsg)   The delegate named associateDataResponse is triggered once the associateData command executes.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/", 
            "text": "Chartboost\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import chartboost\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\nProguard (release, optional)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4f60\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n\n\n-keep class com.chartboost.** { *; }\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nChartboost\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nCHARTBOOST ID\n \u548c \nCHARTBOOST SIGNATURE\n.\n\n\nChartboost\n:{\n    \nid\n:\nCHARTBOOST ID\n,\n    \nsignature\n:\nCHARTBOOST SIGNATURE\n,\n    \nads\n:{\n        \nDefault\n:{\n            \ntype\n:\ninterstitial\n\n        },\n        \nLevel Complete\n:{\n            \ntype\n:\nrewarded_video\n\n        },\n        \nMoreApp\n:{\n            \ntype\n:\nmore_app\n\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Chartboost\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginChartboost/PluginChartboost.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginChartboost::init();\n}\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d,\u60f3\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n// To use the Chartboost predefined locations\nsdkbox::PluginChartboost::show(sdkbox::CB_Location_Default);\n// To use customized location\nsdkbox::PluginChartboost::show(\nyour_ad_name\n);\n\n\n\n\n\u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nChartboost\n \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::ChartboostListener\n\n\n\n\n#include \nPluginChartboost/PluginChartboost.h\n\nclass MyClass : public sdkbox::ChartboostListener\n{\npublic:\n      void onChartboostCached(const std::string\n name);\n      void onChartboostShouldDisplay(const std::string\n name);\n      void onChartboostDisplay(const std::string\n name);\n      void onChartboostDismiss(const std::string\n name);\n      void onChartboostClose(const std::string\n name);\n      void onChartboostClick(const std::string\n name);\n      void onChartboostReward(const std::string\n name, int reward);\n      void onChartboostPauseClickForConfirmation();\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u6765\u5904\u7406\u56de\u8c03:\n\n\n\n\nsdkbox::PluginChartboost::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void show(const std::string\n name);\n\n\n\n\n\n\nshow ad by specifying ad name.\n\n\n\n\nstatic void setListener(ChartboostListener* listener);\n\n\n\n\n\n\ncreates the an optional listener.\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nremoved the listener.\n\n\n\n\nstatic bool isAnyViewVisible();\n\n\n\n\n\n\ncheck to see if any views are visible.\n\n\n\n\nstatic bool isAvailable(const std::string\n name);\n\n\n\n\n\n\nis the specified ad available?\n\n\n\n\nstatic void setAutoCacheAds(bool shouldCache);\n\n\n\n\n\n\nset to enable and disable the auto cache feature (Enabled by default).\n\n\n\n\nstatic bool getAutoCacheAds();\n\n\n\n\n\n\nget the current auto cache behavior (Enabled by default).\n\n\n\n\nstatic void closeImpression();\n\n\n\n\n\n\nclose any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).\n\n\n\n\nstatic void setStatusBarBehavior(CB_StatusBarBehavior behavior);\n\n\n\n\n\n\nset to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).\n\n\n\n\nstatic void didPassAgeGate(bool pass);\n\n\n\n\n\n\nconfirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.\n\n\n\n\nstatic void setShouldPauseClickForConfirmation(bool shouldPause);\n\n\n\n\n\n\ndecide if Chartboost SDK should block for an age gate.\n\n\n\n\nstatic bool handleOpenURL(const std::string\n url, const std::string\n sourceApp);\n\n\n\n\n\n\nopens a \"deep link\" URL for a Chartboost Custom Scheme.\n\n\n\n\nstatic void setCustomID(const std::string\n customID);\n\n\n\n\n\n\nset a custom identifier to send in the POST body for all Chartboost API server\nrequests.\n\n\n\n\nstatic std::string getCustomID();\n\n\n\n\n\n\nget the current custom identifier being sent in the POST body for all Chartboost\nAPI server requests.\n\n\n\n\nstatic void setShouldRequestInterstitialsInFirstSession(bool shouldRequest);\n\n\n\n\n\n\ndecide if Chartboost SDK should show interstitials in the first session.\n\n\n\n\nstatic void setShouldDisplayLoadingViewForMoreApps(bool shouldDisplay);\n\n\n\n\n\n\ndecide if Chartboost SDK should show a loading view while preparing to display\nthe \"more applications\" UI.\n\n\n\n\nstatic void setShouldPrefetchVideoContent(bool shouldPrefetch);\n\n\n\n\n\n\ndecide if Chartboost SDK will attempt to fetch videos from the Chartboost API\nservers.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/#chartboost", 
            "text": "", 
            "title": "Chartboost"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import chartboost", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  Proguard (release, optional)   \u4fee\u6539  project.properties  \u52a0\u5165\u4f60\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:   -keep class com.chartboost.** { *; }  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 Chartboost \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  CHARTBOOST ID  \u548c  CHARTBOOST SIGNATURE .  Chartboost :{\n     id : CHARTBOOST ID ,\n     signature : CHARTBOOST SIGNATURE ,\n     ads :{\n         Default :{\n             type : interstitial \n        },\n         Level Complete :{\n             type : rewarded_video \n        },\n         MoreApp :{\n             type : more_app \n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Chartboost   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginChartboost/PluginChartboost.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginChartboost::init();\n}  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d,\u60f3\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:  // To use the Chartboost predefined locations\nsdkbox::PluginChartboost::show(sdkbox::CB_Location_Default);\n// To use customized location\nsdkbox::PluginChartboost::show( your_ad_name );  \u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Chartboost  \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::ChartboostListener   #include  PluginChartboost/PluginChartboost.h \nclass MyClass : public sdkbox::ChartboostListener\n{\npublic:\n      void onChartboostCached(const std::string  name);\n      void onChartboostShouldDisplay(const std::string  name);\n      void onChartboostDisplay(const std::string  name);\n      void onChartboostDismiss(const std::string  name);\n      void onChartboostClose(const std::string  name);\n      void onChartboostClick(const std::string  name);\n      void onChartboostReward(const std::string  name, int reward);\n      void onChartboostPauseClickForConfirmation();\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u6765\u5904\u7406\u56de\u8c03:   sdkbox::PluginChartboost::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/chartboost/v3-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static void show(const std::string  name);   show ad by specifying ad name.   static void setListener(ChartboostListener* listener);   creates the an optional listener.   static void removeListener();   removed the listener.   static bool isAnyViewVisible();   check to see if any views are visible.   static bool isAvailable(const std::string  name);   is the specified ad available?   static void setAutoCacheAds(bool shouldCache);   set to enable and disable the auto cache feature (Enabled by default).   static bool getAutoCacheAds();   get the current auto cache behavior (Enabled by default).   static void closeImpression();   close any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).   static void setStatusBarBehavior(CB_StatusBarBehavior behavior);   set to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).   static void didPassAgeGate(bool pass);   confirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.   static void setShouldPauseClickForConfirmation(bool shouldPause);   decide if Chartboost SDK should block for an age gate.   static bool handleOpenURL(const std::string  url, const std::string  sourceApp);   opens a \"deep link\" URL for a Chartboost Custom Scheme.   static void setCustomID(const std::string  customID);   set a custom identifier to send in the POST body for all Chartboost API server\nrequests.   static std::string getCustomID();   get the current custom identifier being sent in the POST body for all Chartboost\nAPI server requests.   static void setShouldRequestInterstitialsInFirstSession(bool shouldRequest);   decide if Chartboost SDK should show interstitials in the first session.   static void setShouldDisplayLoadingViewForMoreApps(bool shouldDisplay);   decide if Chartboost SDK should show a loading view while preparing to display\nthe \"more applications\" UI.   static void setShouldPrefetchVideoContent(bool shouldPrefetch);   decide if Chartboost SDK will attempt to fetch videos from the Chartboost API\nservers.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/", 
            "text": "Chartboost\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import chartboost\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\nProguard (release, optional)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4f60\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n\n\n-keep class com.chartboost.** { *; }\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nChartboost\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nCHARTBOOST ID\n \u548c \nCHARTBOOST SIGNATURE\n.\n\n\nChartboost\n:{\n    \nid\n:\nCHARTBOOST ID\n,\n    \nsignature\n:\nCHARTBOOST SIGNATURE\n,\n    \nads\n:{\n        \nDefault\n:{\n            \ntype\n:\ninterstitial\n\n        },\n        \nLevel Complete\n:{\n            \ntype\n:\nrewarded_video\n\n        },\n        \nMoreApp\n:{\n            \ntype\n:\nmore_app\n\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Chartboost\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginChartboost.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginChartboostJS.hpp\n\n#include \nPluginChartboostJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginChartboostJS);\nsc-\naddRegisterCallback(register_PluginChartboostJs_helper);\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:\n\n\n// To use the Chartboost predefined locations\nsdkbox.PluginChartboost.show(\nDefault\n);\n// To use customized location\nsdkbox.PluginChartboost.show(\nyour_ad_name\n);\n\n\n\n\n\u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nChartboost\n \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c (\u7528logging\u6765\u663e\u793a\u8fd4\u56de\u5185\u5bb9):\n\n\n\n\nsdkbox.PluginChartboost.setListener({\n    onChartboostCached : function (name) { cc.log(\nonChartboostCached \n + name) },\n    onChartboostShouldDisplay : function (name) { cc.log(\nonChartboostShouldDisplay \n + name) },\n    onChartboostDisplay : function (name) { cc.log(\nonChartboostDisplay \n + name) },\n    onChartboostDismiss : function (name) { cc.log(\nonChartboostDismiss \n + name) },\n    onChartboostClose : function (name) { cc.log(\nonChartboostClose \n + name) },\n    onChartboostClick : function (name) { cc.log(\nonChartboostClick \n + name) },\n    onChartboostReward : function (name, reward) { cc.log(\nonChartboostReward \n + name + \n reward \n + reward) },\n    onChartboostFailedToLoad : function (name, e) { cc.log(\nonChartboostFailedToLoad \n + name + \n load error \n + e) },\n    onChartboostFailToRecordClick : function (name, e) { cc.log(\nonChartboostFailToRecordClick \n + name + \n click error \n + e) },\n    onChartboostConfirmation : function () { cc.log(\nonChartboostConfirmation\n) },\n    onChartboostCompleteStore : function () { cc.log(\nonChartboostCompleteStore\n) },\n})\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginChartboost.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginChartboost.show(name);\n\n\n\n\n\n\nshow ad by specifying ad name.\n\n\n\n\nsdkbox.PluginChartboost.setListener(listener);\n\n\n\n\n\n\ncreates the an optional listener.\n\n\n\n\nsdkbox.PluginChartboost.removeListener();\n\n\n\n\n\n\nremoved the listener.\n\n\n\n\nsdkbox.PluginChartboost.isAnyViewVisible();\n\n\n\n\n\n\ncheck to see if any views are visible.\n\n\n\n\nsdkbox.PluginChartboost.isAvailable(name);\n\n\n\n\n\n\nis the specified ad available?\n\n\n\n\nsdkbox.PluginChartboost.setAutoCacheAds(shouldCache);\n\n\n\n\n\n\nset to enable and disable the auto cache feature (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost.getAutoCacheAds();\n\n\n\n\n\n\nget the current auto cache behavior (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost.closeImpression();\n\n\n\n\n\n\nclose any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).\n\n\n\n\nsdkbox.PluginChartboost.setStatusBarBehavior(behavior);\n\n\n\n\n\n\nset to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).\n\n\n\n\nsdkbox.PluginChartboost.didPassAgeGate(pass);\n\n\n\n\n\n\nconfirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.\n\n\n\n\nsdkbox.PluginChartboost.setShouldPauseClickForConfirmation(shouldPause);\n\n\n\n\n\n\ndecide if Chartboost SDK should block for an age gate.\n\n\n\n\nsdkbox.PluginChartboost.handleOpenURL(url, sourceApp);\n\n\n\n\n\n\nopens a \"deep link\" URL for a Chartboost Custom Scheme.\n\n\n\n\nsdkbox.PluginChartboost.setCustomID(customID);\n\n\n\n\n\n\nset a custom identifier to send in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost.getCustomID();\n\n\n\n\n\n\nget the current custom identifier being sent in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost.setShouldRequestInterstitialsInFirstSession(shouldRequest);\n\n\n\n\n\n\ndecide if Chartboost SDK should show interstitials in the first session.\n\n\n\n\nsdkbox.PluginChartboost.setShouldDisplayLoadingViewForMoreApps(shouldDisplay);\n\n\n\n\n\n\ndecide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.\n\n\n\n\nsdkbox.PluginChartboost.setShouldPrefetchVideoContent(shouldPrefetch);\n\n\n\n\n\n\ndecide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.\n\n\n\n\nListeners\n\n\nonChartboostCached();\n\n\n\n\n\n\nthere is cached content\n\n\n\n\nonChartboostShouldDisplay();\n\n\n\n\n\n\nshould Chartboost display\n\n\n\n\nonChartboostDisplay();\n\n\n\n\n\n\nCharboost ad has displayed\n\n\n\n\nonChartboostDismiss();\n\n\n\n\n\n\nChartboost ad has been dismissed\n\n\n\n\nonChartboostClose();\n\n\n\n\n\n\nChartboost is not running\n\n\n\n\nonChartboostClick();\n\n\n\n\n\n\nChartboost ad was clicked on\n\n\n\n\nonChartboostReward();\n\n\n\n\n\n\nChartboost reward was given\n\n\n\n\nonChartboostFailedToLoad();\n\n\n\n\n\n\nChartboost failed to load\n\n\n\n\nonChartboostFailToRecordClick();\n\n\n\n\n\n\nChartboost failed to record click\n\n\n\n\nonChartboostConfirmation();\n\n\n\n\n\n\nChartboost confirmation\n\n\n\n\nonChartboostCompleteStore();\n\n\n\n\n\n\nChartboost complete store", 
            "title": "js"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/#chartboost", 
            "text": "", 
            "title": "Chartboost"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import chartboost", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  Proguard (release, optional)   \u4fee\u6539  project.properties  \u52a0\u5165\u4f60\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:   -keep class com.chartboost.** { *; }  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 Chartboost \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  CHARTBOOST ID  \u548c  CHARTBOOST SIGNATURE .  Chartboost :{\n     id : CHARTBOOST ID ,\n     signature : CHARTBOOST SIGNATURE ,\n     ads :{\n         Default :{\n             type : interstitial \n        },\n         Level Complete :{\n             type : rewarded_video \n        },\n         MoreApp :{\n             type : more_app \n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 Chartboost   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginChartboost.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:   #include  PluginChartboostJS.hpp \n#include  PluginChartboostJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:   sc- addRegisterCallback(register_all_PluginChartboostJS);\nsc- addRegisterCallback(register_PluginChartboostJs_helper);  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:  // To use the Chartboost predefined locations\nsdkbox.PluginChartboost.show( Default );\n// To use customized location\nsdkbox.PluginChartboost.show( your_ad_name );  \u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Chartboost  \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c (\u7528logging\u6765\u663e\u793a\u8fd4\u56de\u5185\u5bb9):   sdkbox.PluginChartboost.setListener({\n    onChartboostCached : function (name) { cc.log( onChartboostCached   + name) },\n    onChartboostShouldDisplay : function (name) { cc.log( onChartboostShouldDisplay   + name) },\n    onChartboostDisplay : function (name) { cc.log( onChartboostDisplay   + name) },\n    onChartboostDismiss : function (name) { cc.log( onChartboostDismiss   + name) },\n    onChartboostClose : function (name) { cc.log( onChartboostClose   + name) },\n    onChartboostClick : function (name) { cc.log( onChartboostClick   + name) },\n    onChartboostReward : function (name, reward) { cc.log( onChartboostReward   + name +   reward   + reward) },\n    onChartboostFailedToLoad : function (name, e) { cc.log( onChartboostFailedToLoad   + name +   load error   + e) },\n    onChartboostFailToRecordClick : function (name, e) { cc.log( onChartboostFailToRecordClick   + name +   click error   + e) },\n    onChartboostConfirmation : function () { cc.log( onChartboostConfirmation ) },\n    onChartboostCompleteStore : function () { cc.log( onChartboostCompleteStore ) },\n})", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/chartboost/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginChartboost.init();   initialize the plugin instance.   sdkbox.PluginChartboost.show(name);   show ad by specifying ad name.   sdkbox.PluginChartboost.setListener(listener);   creates the an optional listener.   sdkbox.PluginChartboost.removeListener();   removed the listener.   sdkbox.PluginChartboost.isAnyViewVisible();   check to see if any views are visible.   sdkbox.PluginChartboost.isAvailable(name);   is the specified ad available?   sdkbox.PluginChartboost.setAutoCacheAds(shouldCache);   set to enable and disable the auto cache feature (Enabled by default).   sdkbox.PluginChartboost.getAutoCacheAds();   get the current auto cache behavior (Enabled by default).   sdkbox.PluginChartboost.closeImpression();   close any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).   sdkbox.PluginChartboost.setStatusBarBehavior(behavior);   set to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).   sdkbox.PluginChartboost.didPassAgeGate(pass);   confirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.   sdkbox.PluginChartboost.setShouldPauseClickForConfirmation(shouldPause);   decide if Chartboost SDK should block for an age gate.   sdkbox.PluginChartboost.handleOpenURL(url, sourceApp);   opens a \"deep link\" URL for a Chartboost Custom Scheme.   sdkbox.PluginChartboost.setCustomID(customID);   set a custom identifier to send in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost.getCustomID();   get the current custom identifier being sent in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost.setShouldRequestInterstitialsInFirstSession(shouldRequest);   decide if Chartboost SDK should show interstitials in the first session.   sdkbox.PluginChartboost.setShouldDisplayLoadingViewForMoreApps(shouldDisplay);   decide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.   sdkbox.PluginChartboost.setShouldPrefetchVideoContent(shouldPrefetch);   decide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.   Listeners  onChartboostCached();   there is cached content   onChartboostShouldDisplay();   should Chartboost display   onChartboostDisplay();   Charboost ad has displayed   onChartboostDismiss();   Chartboost ad has been dismissed   onChartboostClose();   Chartboost is not running   onChartboostClick();   Chartboost ad was clicked on   onChartboostReward();   Chartboost reward was given   onChartboostFailedToLoad();   Chartboost failed to load   onChartboostFailToRecordClick();   Chartboost failed to record click   onChartboostConfirmation();   Chartboost confirmation   onChartboostCompleteStore();   Chartboost complete store", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/", 
            "text": "Chartboost\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import chartboost\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\nProguard (release, optional)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4f60\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n\n\n-keep class com.chartboost.** { *; }\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nChartboost\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nCHARTBOOST ID\n \u548c \nCHARTBOOST SIGNATURE\n.\n\n\nChartboost\n:{\n    \nid\n:\nCHARTBOOST ID\n,\n    \nsignature\n:\nCHARTBOOST SIGNATURE\n,\n    \nads\n:{\n        \nDefault\n:{\n            \ntype\n:\ninterstitial\n\n        },\n        \nLevel Complete\n:{\n            \ntype\n:\nrewarded_video\n\n        },\n        \nMoreApp\n:{\n            \ntype\n:\nmore_app\n\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c \nChartboost\n \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570 \nlua_State*\n:\n\n\n#include \nPluginChartboostLua.hpp\n\n#include \nPluginChartboostLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginChartboostLua(L);\n  register_PluginChartboostLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 Chartboost\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginChartboost:init()\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:\n\n\n// To use the Chartboost predefined locations\nsdkbox.PluginChartboost:show(\nDefault\n)\n// To use customized location\nsdkbox.PluginChartboost:show(\nyour_ad_name\n)\n\n\n\n\n\u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nChartboost\n \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.\n\n\n\n\n\u6ce8\u518c\u56de\u8c03(\u901a\u8fc7log\u6f14\u793a\u7ed3\u679c):\n\n\n\n\nsdkbox.PluginChartboost:setListener(function(args)\n    if \nonChartboostCached\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostCached\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostShouldDisplay\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostShouldDisplay\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostDisplay\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostDisplay\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostDismiss\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostDismiss\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostClose\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostClose\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostClick\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostClick\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostReward\n == args.func then\n        local name = args.name -- string\n        local reward = args.reward -- int\n        print(\nonChartboostReward\n)\n        print(\nname:\n, args.name)\n        print(\nreward:\n, reward)\n    elseif \nonChartboostFailedToLoad\n == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print(\nonChartboostFailedToLoad\n)\n        print(\nname:\n, args.name)\n        print(\nerror:\n, e)\n    elseif \nonChartboostFailToRecordClick\n == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print(\nonChartboostFailToRecordClick\n)\n        print(\nname:\n, args.name)\n        print(\nerror:\n, e)\n    elseif \nonChartboostConfirmation\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostConfirmation\n)\n    elseif \nonChartboostCompleteStore\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostCompleteStore\n)\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginChartboost:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginChartboost:show(name)\n\n\n\n\n\n\nshow ad by specifying ad name.\n\n\n\n\nsdkbox.PluginChartboost:setListener(listener)\n\n\n\n\n\n\ncreates the an optional listener.\n\n\n\n\nsdkbox.PluginChartboost:removeListener()\n\n\n\n\n\n\nremoved the listener.\n\n\n\n\nsdkbox.PluginChartboost:isAnyViewVisible()\n\n\n\n\n\n\ncheck to see if any views are visible.\n\n\n\n\nsdkbox.PluginChartboost:isAvailable(name)\n\n\n\n\n\n\nis the specified ad available?\n\n\n\n\nsdkbox.PluginChartboost:setAutoCacheAds(shouldCache)\n\n\n\n\n\n\nset to enable and disable the auto cache feature (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost:getAutoCacheAds()\n\n\n\n\n\n\nget the current auto cache behavior (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost:closeImpression()\n\n\n\n\n\n\nclose any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).\n\n\n\n\nsdkbox.PluginChartboost:setStatusBarBehavior(behavior)\n\n\n\n\n\n\nset to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).\n\n\n\n\nsdkbox.PluginChartboost:didPassAgeGate(pass)\n\n\n\n\n\n\nconfirm if an age gate passed or failed. When specified Chartboost will wait for this call before showing the IOS App Store.\n\n\n\n\nsdkbox.PluginChartboost:setShouldPauseClickForConfirmation(shouldPause)\n\n\n\n\n\n\ndecide if Chartboost SDK should block for an age gate.\n\n\n\n\nsdkbox.PluginChartboost:handleOpenURL(url, sourceApp)\n\n\n\n\n\n\nopens a \"deep link\" URL for a Chartboost Custom Scheme.\n\n\n\n\nsdkbox.PluginChartboost:setCustomID(customID)\n\n\n\n\n\n\nset a custom identifier to send in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost:getCustomID()\n\n\n\n\n\n\nget the current custom identifier being sent in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost:setShouldRequestInterstitialsInFirstSession(shouldRequest)\n\n\n\n\n\n\ndecide if Chartboost SDK should show interstitials in the first session.\n\n\n\n\nsdkbox.PluginChartboost:setShouldDisplayLoadingViewForMoreApps(shouldDisplay)\n\n\n\n\n\n\ndecide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.\n\n\n\n\nsdkbox.PluginChartboost:setShouldPrefetchVideoContent(shouldPrefetch)\n\n\n\n\n\n\ndecide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.\n\n\n\n\nListeners\n\n\nonChartboostCached()\n\n\n\n\n\n\nthere is cached content\n\n\n\n\nonChartboostShouldDisplay()\n\n\n\n\n\n\nshould Chartboost display\n\n\n\n\nonChartboostDisplay()\n\n\n\n\n\n\nCharboost ad has displayed\n\n\n\n\nonChartboostDismiss()\n\n\n\n\n\n\nChartboost ad has been dismissed\n\n\n\n\nonChartboostClose()\n\n\n\n\n\n\nChartboost is not running\n\n\n\n\nonChartboostClick()\n\n\n\n\n\n\nChartboost ad was clicked on\n\n\n\n\nonChartboostReward()\n\n\n\n\n\n\nChartboost reward was given\n\n\n\n\nonChartboostFailedToLoad()\n\n\n\n\n\n\nChartboost failed to load\n\n\n\n\nonChartboostFailToRecordClick()\n\n\n\n\n\n\nChartboost failed to record click\n\n\n\n\nonChartboostConfirmation()\n\n\n\n\n\n\nChartboost confirmation\n\n\n\n\nonChartboostCompleteStore()\n\n\n\n\n\n\nChartboost complete store", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/#chartboost", 
            "text": "", 
            "title": "Chartboost"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import chartboost", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  Proguard (release, optional)   \u4fee\u6539  project.properties  \u52a0\u5165\u4f60\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:   -keep class com.chartboost.** { *; }  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 Chartboost \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  CHARTBOOST ID  \u548c  CHARTBOOST SIGNATURE .  Chartboost :{\n     id : CHARTBOOST ID ,\n     signature : CHARTBOOST SIGNATURE ,\n     ads :{\n         Default :{\n             type : interstitial \n        },\n         Level Complete :{\n             type : rewarded_video \n        },\n         MoreApp :{\n             type : more_app \n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c  Chartboost  \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570  lua_State* :  #include  PluginChartboostLua.hpp \n#include  PluginChartboostLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginChartboostLua(L);\n  register_PluginChartboostLua_helper(L);\n}  \u521d\u59cb\u5316 Chartboost  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginChartboost:init()  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:  // To use the Chartboost predefined locations\nsdkbox.PluginChartboost:show( Default )\n// To use customized location\nsdkbox.PluginChartboost:show( your_ad_name )  \u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Chartboost  \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.   \u6ce8\u518c\u56de\u8c03(\u901a\u8fc7log\u6f14\u793a\u7ed3\u679c):   sdkbox.PluginChartboost:setListener(function(args)\n    if  onChartboostCached  == args.func then\n        local name = args.name -- string\n        print( onChartboostCached )\n        print( name: , args.name)\n    elseif  onChartboostShouldDisplay  == args.func then\n        local name = args.name -- string\n        print( onChartboostShouldDisplay )\n        print( name: , args.name)\n    elseif  onChartboostDisplay  == args.func then\n        local name = args.name -- string\n        print( onChartboostDisplay )\n        print( name: , args.name)\n    elseif  onChartboostDismiss  == args.func then\n        local name = args.name -- string\n        print( onChartboostDismiss )\n        print( name: , args.name)\n    elseif  onChartboostClose  == args.func then\n        local name = args.name -- string\n        print( onChartboostClose )\n        print( name: , args.name)\n    elseif  onChartboostClick  == args.func then\n        local name = args.name -- string\n        print( onChartboostClick )\n        print( name: , args.name)\n    elseif  onChartboostReward  == args.func then\n        local name = args.name -- string\n        local reward = args.reward -- int\n        print( onChartboostReward )\n        print( name: , args.name)\n        print( reward: , reward)\n    elseif  onChartboostFailedToLoad  == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print( onChartboostFailedToLoad )\n        print( name: , args.name)\n        print( error: , e)\n    elseif  onChartboostFailToRecordClick  == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print( onChartboostFailToRecordClick )\n        print( name: , args.name)\n        print( error: , e)\n    elseif  onChartboostConfirmation  == args.func then\n        local name = args.name -- string\n        print( onChartboostConfirmation )\n    elseif  onChartboostCompleteStore  == args.func then\n        local name = args.name -- string\n        print( onChartboostCompleteStore )\n    end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/chartboost/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginChartboost:init()   initialize the plugin instance.   sdkbox.PluginChartboost:show(name)   show ad by specifying ad name.   sdkbox.PluginChartboost:setListener(listener)   creates the an optional listener.   sdkbox.PluginChartboost:removeListener()   removed the listener.   sdkbox.PluginChartboost:isAnyViewVisible()   check to see if any views are visible.   sdkbox.PluginChartboost:isAvailable(name)   is the specified ad available?   sdkbox.PluginChartboost:setAutoCacheAds(shouldCache)   set to enable and disable the auto cache feature (Enabled by default).   sdkbox.PluginChartboost:getAutoCacheAds()   get the current auto cache behavior (Enabled by default).   sdkbox.PluginChartboost:closeImpression()   close any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).   sdkbox.PluginChartboost:setStatusBarBehavior(behavior)   set to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).   sdkbox.PluginChartboost:didPassAgeGate(pass)   confirm if an age gate passed or failed. When specified Chartboost will wait for this call before showing the IOS App Store.   sdkbox.PluginChartboost:setShouldPauseClickForConfirmation(shouldPause)   decide if Chartboost SDK should block for an age gate.   sdkbox.PluginChartboost:handleOpenURL(url, sourceApp)   opens a \"deep link\" URL for a Chartboost Custom Scheme.   sdkbox.PluginChartboost:setCustomID(customID)   set a custom identifier to send in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost:getCustomID()   get the current custom identifier being sent in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost:setShouldRequestInterstitialsInFirstSession(shouldRequest)   decide if Chartboost SDK should show interstitials in the first session.   sdkbox.PluginChartboost:setShouldDisplayLoadingViewForMoreApps(shouldDisplay)   decide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.   sdkbox.PluginChartboost:setShouldPrefetchVideoContent(shouldPrefetch)   decide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.   Listeners  onChartboostCached()   there is cached content   onChartboostShouldDisplay()   should Chartboost display   onChartboostDisplay()   Charboost ad has displayed   onChartboostDismiss()   Chartboost ad has been dismissed   onChartboostClose()   Chartboost is not running   onChartboostClick()   Chartboost ad was clicked on   onChartboostReward()   Chartboost reward was given   onChartboostFailedToLoad()   Chartboost failed to load   onChartboostFailToRecordClick()   Chartboost failed to record click   onChartboostConfirmation()   Chartboost confirmation   onChartboostCompleteStore()   Chartboost complete store", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/", 
            "text": "Chartboost\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import chartboost\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\nProguard (release, optional)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4f60\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n\n\n-keep class com.chartboost.** { *; }\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nChartboost\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nCHARTBOOST ID\n \u548c \nCHARTBOOST SIGNATURE\n.\n\n\nChartboost\n:{\n    \nid\n:\nCHARTBOOST ID\n,\n    \nsignature\n:\nCHARTBOOST SIGNATURE\n,\n    \nads\n:{\n        \nDefault\n:{\n            \ntype\n:\ninterstitial\n\n        },\n        \nLevel Complete\n:{\n            \ntype\n:\nrewarded_video\n\n        },\n        \nMoreApp\n:{\n            \ntype\n:\nmore_app\n\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Chartboost\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginChartboost/PluginChartboost.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginChartboost::init();\n}\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d,\u60f3\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n// To use the Chartboost predefined locations\nsdkbox::PluginChartboost::show(sdkbox::CB_Location_Default);\n// To use customized location\nsdkbox::PluginChartboost::show(\nyour_ad_name\n);\n\n\n\n\n\u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nChartboost\n \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::ChartboostListener\n\n\n\n\n#include \nPluginChartboost/PluginChartboost.h\n\nclass MyClass : public sdkbox::ChartboostListener\n{\npublic:\n      void onChartboostCached(const std::string\n name);\n      void onChartboostShouldDisplay(const std::string\n name);\n      void onChartboostDisplay(const std::string\n name);\n      void onChartboostDismiss(const std::string\n name);\n      void onChartboostClose(const std::string\n name);\n      void onChartboostClick(const std::string\n name);\n      void onChartboostReward(const std::string\n name, int reward);\n      void onChartboostPauseClickForConfirmation();\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u6765\u5904\u7406\u56de\u8c03:\n\n\n\n\nsdkbox::PluginChartboost::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void show(const std::string\n name);\n\n\n\n\n\n\nshow ad by specifying ad name.\n\n\n\n\nstatic void setListener(ChartboostListener* listener);\n\n\n\n\n\n\ncreates the an optional listener.\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nremoved the listener.\n\n\n\n\nstatic bool isAnyViewVisible();\n\n\n\n\n\n\ncheck to see if any views are visible.\n\n\n\n\nstatic bool isAvailable(const std::string\n name);\n\n\n\n\n\n\nis the specified ad available?\n\n\n\n\nstatic void setAutoCacheAds(bool shouldCache);\n\n\n\n\n\n\nset to enable and disable the auto cache feature (Enabled by default).\n\n\n\n\nstatic bool getAutoCacheAds();\n\n\n\n\n\n\nget the current auto cache behavior (Enabled by default).\n\n\n\n\nstatic void closeImpression();\n\n\n\n\n\n\nclose any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).\n\n\n\n\nstatic void setStatusBarBehavior(CB_StatusBarBehavior behavior);\n\n\n\n\n\n\nset to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).\n\n\n\n\nstatic void didPassAgeGate(bool pass);\n\n\n\n\n\n\nconfirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.\n\n\n\n\nstatic void setShouldPauseClickForConfirmation(bool shouldPause);\n\n\n\n\n\n\ndecide if Chartboost SDK should block for an age gate.\n\n\n\n\nstatic bool handleOpenURL(const std::string\n url, const std::string\n sourceApp);\n\n\n\n\n\n\nopens a \"deep link\" URL for a Chartboost Custom Scheme.\n\n\n\n\nstatic void setCustomID(const std::string\n customID);\n\n\n\n\n\n\nset a custom identifier to send in the POST body for all Chartboost API server\nrequests.\n\n\n\n\nstatic std::string getCustomID();\n\n\n\n\n\n\nget the current custom identifier being sent in the POST body for all Chartboost\nAPI server requests.\n\n\n\n\nstatic void setShouldRequestInterstitialsInFirstSession(bool shouldRequest);\n\n\n\n\n\n\ndecide if Chartboost SDK should show interstitials in the first session.\n\n\n\n\nstatic void setShouldDisplayLoadingViewForMoreApps(bool shouldDisplay);\n\n\n\n\n\n\ndecide if Chartboost SDK should show a loading view while preparing to display\nthe \"more applications\" UI.\n\n\n\n\nstatic void setShouldPrefetchVideoContent(bool shouldPrefetch);\n\n\n\n\n\n\ndecide if Chartboost SDK will attempt to fetch videos from the Chartboost API\nservers.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/#chartboost", 
            "text": "", 
            "title": "Chartboost"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import chartboost", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  Proguard (release, optional)   \u4fee\u6539  project.properties  \u52a0\u5165\u4f60\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:   -keep class com.chartboost.** { *; }  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 Chartboost \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  CHARTBOOST ID  \u548c  CHARTBOOST SIGNATURE .  Chartboost :{\n     id : CHARTBOOST ID ,\n     signature : CHARTBOOST SIGNATURE ,\n     ads :{\n         Default :{\n             type : interstitial \n        },\n         Level Complete :{\n             type : rewarded_video \n        },\n         MoreApp :{\n             type : more_app \n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Chartboost   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginChartboost/PluginChartboost.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginChartboost::init();\n}  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d,\u60f3\u663e\u793a\u5e7f\u544a\u7684\u5730\u65b9\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:  // To use the Chartboost predefined locations\nsdkbox::PluginChartboost::show(sdkbox::CB_Location_Default);\n// To use customized location\nsdkbox::PluginChartboost::show( your_ad_name );  \u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Chartboost  \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::ChartboostListener   #include  PluginChartboost/PluginChartboost.h \nclass MyClass : public sdkbox::ChartboostListener\n{\npublic:\n      void onChartboostCached(const std::string  name);\n      void onChartboostShouldDisplay(const std::string  name);\n      void onChartboostDisplay(const std::string  name);\n      void onChartboostDismiss(const std::string  name);\n      void onChartboostClose(const std::string  name);\n      void onChartboostClick(const std::string  name);\n      void onChartboostReward(const std::string  name, int reward);\n      void onChartboostPauseClickForConfirmation();\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u6765\u5904\u7406\u56de\u8c03:   sdkbox::PluginChartboost::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/chartboost/v2-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static void show(const std::string  name);   show ad by specifying ad name.   static void setListener(ChartboostListener* listener);   creates the an optional listener.   static void removeListener();   removed the listener.   static bool isAnyViewVisible();   check to see if any views are visible.   static bool isAvailable(const std::string  name);   is the specified ad available?   static void setAutoCacheAds(bool shouldCache);   set to enable and disable the auto cache feature (Enabled by default).   static bool getAutoCacheAds();   get the current auto cache behavior (Enabled by default).   static void closeImpression();   close any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).   static void setStatusBarBehavior(CB_StatusBarBehavior behavior);   set to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).   static void didPassAgeGate(bool pass);   confirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.   static void setShouldPauseClickForConfirmation(bool shouldPause);   decide if Chartboost SDK should block for an age gate.   static bool handleOpenURL(const std::string  url, const std::string  sourceApp);   opens a \"deep link\" URL for a Chartboost Custom Scheme.   static void setCustomID(const std::string  customID);   set a custom identifier to send in the POST body for all Chartboost API server\nrequests.   static std::string getCustomID();   get the current custom identifier being sent in the POST body for all Chartboost\nAPI server requests.   static void setShouldRequestInterstitialsInFirstSession(bool shouldRequest);   decide if Chartboost SDK should show interstitials in the first session.   static void setShouldDisplayLoadingViewForMoreApps(bool shouldDisplay);   decide if Chartboost SDK should show a loading view while preparing to display\nthe \"more applications\" UI.   static void setShouldPrefetchVideoContent(bool shouldPrefetch);   decide if Chartboost SDK will attempt to fetch videos from the Chartboost API\nservers.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/", 
            "text": "Chartboost\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import chartboost\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\nProguard (release, optional)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4f60\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n\n\n-keep class com.chartboost.** { *; }\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nChartboost\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nCHARTBOOST ID\n \u548c \nCHARTBOOST SIGNATURE\n.\n\n\nChartboost\n:{\n    \nid\n:\nCHARTBOOST ID\n,\n    \nsignature\n:\nCHARTBOOST SIGNATURE\n,\n    \nads\n:{\n        \nDefault\n:{\n            \ntype\n:\ninterstitial\n\n        },\n        \nLevel Complete\n:{\n            \ntype\n:\nrewarded_video\n\n        },\n        \nMoreApp\n:{\n            \ntype\n:\nmore_app\n\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Chartboost\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginChartboost.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginChartboostJS.hpp\n\n#include \nPluginChartboostJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginChartboostJS);\nsc-\naddRegisterCallback(register_PluginChartboostJs_helper);\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:\n\n\n// To use the Chartboost predefined locations\nsdkbox.PluginChartboost.show(\nDefault\n);\n// To use customized location\nsdkbox.PluginChartboost.show(\nyour_ad_name\n);\n\n\n\n\n\u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nChartboost\n \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c (\u7528logging\u6765\u663e\u793a\u8fd4\u56de\u5185\u5bb9):\n\n\n\n\nsdkbox.PluginChartboost.setListener({\n    onChartboostCached : function (name) { cc.log(\nonChartboostCached \n + name) },\n    onChartboostShouldDisplay : function (name) { cc.log(\nonChartboostShouldDisplay \n + name) },\n    onChartboostDisplay : function (name) { cc.log(\nonChartboostDisplay \n + name) },\n    onChartboostDismiss : function (name) { cc.log(\nonChartboostDismiss \n + name) },\n    onChartboostClose : function (name) { cc.log(\nonChartboostClose \n + name) },\n    onChartboostClick : function (name) { cc.log(\nonChartboostClick \n + name) },\n    onChartboostReward : function (name, reward) { cc.log(\nonChartboostReward \n + name + \n reward \n + reward) },\n    onChartboostFailedToLoad : function (name, e) { cc.log(\nonChartboostFailedToLoad \n + name + \n load error \n + e) },\n    onChartboostFailToRecordClick : function (name, e) { cc.log(\nonChartboostFailToRecordClick \n + name + \n click error \n + e) },\n    onChartboostConfirmation : function () { cc.log(\nonChartboostConfirmation\n) },\n    onChartboostCompleteStore : function () { cc.log(\nonChartboostCompleteStore\n) },\n})\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginChartboost.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginChartboost.show(name);\n\n\n\n\n\n\nshow ad by specifying ad name.\n\n\n\n\nsdkbox.PluginChartboost.setListener(listener);\n\n\n\n\n\n\ncreates the an optional listener.\n\n\n\n\nsdkbox.PluginChartboost.removeListener();\n\n\n\n\n\n\nremoved the listener.\n\n\n\n\nsdkbox.PluginChartboost.isAnyViewVisible();\n\n\n\n\n\n\ncheck to see if any views are visible.\n\n\n\n\nsdkbox.PluginChartboost.isAvailable(name);\n\n\n\n\n\n\nis the specified ad available?\n\n\n\n\nsdkbox.PluginChartboost.setAutoCacheAds(shouldCache);\n\n\n\n\n\n\nset to enable and disable the auto cache feature (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost.getAutoCacheAds();\n\n\n\n\n\n\nget the current auto cache behavior (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost.closeImpression();\n\n\n\n\n\n\nclose any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).\n\n\n\n\nsdkbox.PluginChartboost.setStatusBarBehavior(behavior);\n\n\n\n\n\n\nset to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).\n\n\n\n\nsdkbox.PluginChartboost.didPassAgeGate(pass);\n\n\n\n\n\n\nconfirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.\n\n\n\n\nsdkbox.PluginChartboost.setShouldPauseClickForConfirmation(shouldPause);\n\n\n\n\n\n\ndecide if Chartboost SDK should block for an age gate.\n\n\n\n\nsdkbox.PluginChartboost.handleOpenURL(url, sourceApp);\n\n\n\n\n\n\nopens a \"deep link\" URL for a Chartboost Custom Scheme.\n\n\n\n\nsdkbox.PluginChartboost.setCustomID(customID);\n\n\n\n\n\n\nset a custom identifier to send in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost.getCustomID();\n\n\n\n\n\n\nget the current custom identifier being sent in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost.setShouldRequestInterstitialsInFirstSession(shouldRequest);\n\n\n\n\n\n\ndecide if Chartboost SDK should show interstitials in the first session.\n\n\n\n\nsdkbox.PluginChartboost.setShouldDisplayLoadingViewForMoreApps(shouldDisplay);\n\n\n\n\n\n\ndecide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.\n\n\n\n\nsdkbox.PluginChartboost.setShouldPrefetchVideoContent(shouldPrefetch);\n\n\n\n\n\n\ndecide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.\n\n\n\n\nListeners\n\n\nonChartboostCached();\n\n\n\n\n\n\nthere is cached content\n\n\n\n\nonChartboostShouldDisplay();\n\n\n\n\n\n\nshould Chartboost display\n\n\n\n\nonChartboostDisplay();\n\n\n\n\n\n\nCharboost ad has displayed\n\n\n\n\nonChartboostDismiss();\n\n\n\n\n\n\nChartboost ad has been dismissed\n\n\n\n\nonChartboostClose();\n\n\n\n\n\n\nChartboost is not running\n\n\n\n\nonChartboostClick();\n\n\n\n\n\n\nChartboost ad was clicked on\n\n\n\n\nonChartboostReward();\n\n\n\n\n\n\nChartboost reward was given\n\n\n\n\nonChartboostFailedToLoad();\n\n\n\n\n\n\nChartboost failed to load\n\n\n\n\nonChartboostFailToRecordClick();\n\n\n\n\n\n\nChartboost failed to record click\n\n\n\n\nonChartboostConfirmation();\n\n\n\n\n\n\nChartboost confirmation\n\n\n\n\nonChartboostCompleteStore();\n\n\n\n\n\n\nChartboost complete store", 
            "title": "js"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/#chartboost", 
            "text": "", 
            "title": "Chartboost"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import chartboost", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  Proguard (release, optional)   \u4fee\u6539  project.properties  \u52a0\u5165\u4f60\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:   -keep class com.chartboost.** { *; }  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 Chartboost \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  CHARTBOOST ID  \u548c  CHARTBOOST SIGNATURE .  Chartboost :{\n     id : CHARTBOOST ID ,\n     signature : CHARTBOOST SIGNATURE ,\n     ads :{\n         Default :{\n             type : interstitial \n        },\n         Level Complete :{\n             type : rewarded_video \n        },\n         MoreApp :{\n             type : more_app \n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 Chartboost   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginChartboost.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:   #include  PluginChartboostJS.hpp \n#include  PluginChartboostJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:   sc- addRegisterCallback(register_all_PluginChartboostJS);\nsc- addRegisterCallback(register_PluginChartboostJs_helper);  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:  // To use the Chartboost predefined locations\nsdkbox.PluginChartboost.show( Default );\n// To use customized location\nsdkbox.PluginChartboost.show( your_ad_name );  \u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Chartboost  \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c (\u7528logging\u6765\u663e\u793a\u8fd4\u56de\u5185\u5bb9):   sdkbox.PluginChartboost.setListener({\n    onChartboostCached : function (name) { cc.log( onChartboostCached   + name) },\n    onChartboostShouldDisplay : function (name) { cc.log( onChartboostShouldDisplay   + name) },\n    onChartboostDisplay : function (name) { cc.log( onChartboostDisplay   + name) },\n    onChartboostDismiss : function (name) { cc.log( onChartboostDismiss   + name) },\n    onChartboostClose : function (name) { cc.log( onChartboostClose   + name) },\n    onChartboostClick : function (name) { cc.log( onChartboostClick   + name) },\n    onChartboostReward : function (name, reward) { cc.log( onChartboostReward   + name +   reward   + reward) },\n    onChartboostFailedToLoad : function (name, e) { cc.log( onChartboostFailedToLoad   + name +   load error   + e) },\n    onChartboostFailToRecordClick : function (name, e) { cc.log( onChartboostFailToRecordClick   + name +   click error   + e) },\n    onChartboostConfirmation : function () { cc.log( onChartboostConfirmation ) },\n    onChartboostCompleteStore : function () { cc.log( onChartboostCompleteStore ) },\n})", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/chartboost/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginChartboost.init();   initialize the plugin instance.   sdkbox.PluginChartboost.show(name);   show ad by specifying ad name.   sdkbox.PluginChartboost.setListener(listener);   creates the an optional listener.   sdkbox.PluginChartboost.removeListener();   removed the listener.   sdkbox.PluginChartboost.isAnyViewVisible();   check to see if any views are visible.   sdkbox.PluginChartboost.isAvailable(name);   is the specified ad available?   sdkbox.PluginChartboost.setAutoCacheAds(shouldCache);   set to enable and disable the auto cache feature (Enabled by default).   sdkbox.PluginChartboost.getAutoCacheAds();   get the current auto cache behavior (Enabled by default).   sdkbox.PluginChartboost.closeImpression();   close any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).   sdkbox.PluginChartboost.setStatusBarBehavior(behavior);   set to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).   sdkbox.PluginChartboost.didPassAgeGate(pass);   confirm if an age gate passed or failed. When specified Chartboost will wait for\n this call before showing the IOS App Store.   sdkbox.PluginChartboost.setShouldPauseClickForConfirmation(shouldPause);   decide if Chartboost SDK should block for an age gate.   sdkbox.PluginChartboost.handleOpenURL(url, sourceApp);   opens a \"deep link\" URL for a Chartboost Custom Scheme.   sdkbox.PluginChartboost.setCustomID(customID);   set a custom identifier to send in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost.getCustomID();   get the current custom identifier being sent in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost.setShouldRequestInterstitialsInFirstSession(shouldRequest);   decide if Chartboost SDK should show interstitials in the first session.   sdkbox.PluginChartboost.setShouldDisplayLoadingViewForMoreApps(shouldDisplay);   decide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.   sdkbox.PluginChartboost.setShouldPrefetchVideoContent(shouldPrefetch);   decide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.   Listeners  onChartboostCached();   there is cached content   onChartboostShouldDisplay();   should Chartboost display   onChartboostDisplay();   Charboost ad has displayed   onChartboostDismiss();   Chartboost ad has been dismissed   onChartboostClose();   Chartboost is not running   onChartboostClick();   Chartboost ad was clicked on   onChartboostReward();   Chartboost reward was given   onChartboostFailedToLoad();   Chartboost failed to load   onChartboostFailToRecordClick();   Chartboost failed to record click   onChartboostConfirmation();   Chartboost confirmation   onChartboostCompleteStore();   Chartboost complete store", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/", 
            "text": "Chartboost\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import chartboost\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\nProguard (release, optional)\n\n\n\n\n\u4fee\u6539 \nproject.properties\n \u52a0\u5165\u4f60\u7684 \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:\n\n\n\n\n-keep class com.chartboost.** { *; }\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728\nChartboost\n\u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362 \nCHARTBOOST ID\n \u548c \nCHARTBOOST SIGNATURE\n.\n\n\nChartboost\n:{\n    \nid\n:\nCHARTBOOST ID\n,\n    \nsignature\n:\nCHARTBOOST SIGNATURE\n,\n    \nads\n:{\n        \nDefault\n:{\n            \ntype\n:\ninterstitial\n\n        },\n        \nLevel Complete\n:{\n            \ntype\n:\nrewarded_video\n\n        },\n        \nMoreApp\n:{\n            \ntype\n:\nmore_app\n\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginChartboostLua.hpp\n\n#include \nPluginChartboostLuaHelper.h\n\n\n\n\n\n\n\n\u7136\u540e,\u6211\u4eec\u9700\u8981\u8c03\u7528 \nregister_all_PluginChartboostLua(\nlua_State*\n);\n \u6765\u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.\n\n\n\n\n\u6ce8\u610f:\n \u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e, \u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u8c03\u7528\u4e0a\u9762\u7684\u6ce8\u518c\u51fd\u6570.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\n\n#include \nPluginChartboostLua.hpp\n\n#include \nPluginChartboostLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginChartboostLua(tolua_s);\n    register_all_PluginChartboostLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Chartboost\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginChartboost:init()\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:\n\n\n// To use the Chartboost predefined locations\nsdkbox.PluginChartboost:show(\nDefault\n)\n// To use customized location\nsdkbox.PluginChartboost:show(\nyour_ad_name\n)\n\n\n\n\n\u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nChartboost\n \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.\n\n\n\n\n\u6ce8\u518c\u56de\u8c03(\u901a\u8fc7log\u6f14\u793a\u7ed3\u679c):\n\n\n\n\nsdkbox.PluginChartboost:setListener(function(args)\n    if \nonChartboostCached\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostCached\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostShouldDisplay\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostShouldDisplay\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostDisplay\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostDisplay\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostDismiss\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostDismiss\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostClose\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostClose\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostClick\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostClick\n)\n        print(\nname:\n, args.name)\n    elseif \nonChartboostReward\n == args.func then\n        local name = args.name -- string\n        local reward = args.reward -- int\n        print(\nonChartboostReward\n)\n        print(\nname:\n, args.name)\n        print(\nreward:\n, reward)\n    elseif \nonChartboostFailedToLoad\n == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print(\nonChartboostFailedToLoad\n)\n        print(\nname:\n, args.name)\n        print(\nerror:\n, e)\n    elseif \nonChartboostFailToRecordClick\n == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print(\nonChartboostFailToRecordClick\n)\n        print(\nname:\n, args.name)\n        print(\nerror:\n, e)\n    elseif \nonChartboostConfirmation\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostConfirmation\n)\n    elseif \nonChartboostCompleteStore\n == args.func then\n        local name = args.name -- string\n        print(\nonChartboostCompleteStore\n)\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginChartboost:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginChartboost:show(name)\n\n\n\n\n\n\nshow ad by specifying ad name.\n\n\n\n\nsdkbox.PluginChartboost:setListener(listener)\n\n\n\n\n\n\ncreates the an optional listener.\n\n\n\n\nsdkbox.PluginChartboost:removeListener()\n\n\n\n\n\n\nremoved the listener.\n\n\n\n\nsdkbox.PluginChartboost:isAnyViewVisible()\n\n\n\n\n\n\ncheck to see if any views are visible.\n\n\n\n\nsdkbox.PluginChartboost:isAvailable(name)\n\n\n\n\n\n\nis the specified ad available?\n\n\n\n\nsdkbox.PluginChartboost:setAutoCacheAds(shouldCache)\n\n\n\n\n\n\nset to enable and disable the auto cache feature (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost:getAutoCacheAds()\n\n\n\n\n\n\nget the current auto cache behavior (Enabled by default).\n\n\n\n\nsdkbox.PluginChartboost:closeImpression()\n\n\n\n\n\n\nclose any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).\n\n\n\n\nsdkbox.PluginChartboost:setStatusBarBehavior(behavior)\n\n\n\n\n\n\nset to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).\n\n\n\n\nsdkbox.PluginChartboost:didPassAgeGate(pass)\n\n\n\n\n\n\nconfirm if an age gate passed or failed. When specified Chartboost will wait for this call before showing the IOS App Store.\n\n\n\n\nsdkbox.PluginChartboost:setShouldPauseClickForConfirmation(shouldPause)\n\n\n\n\n\n\ndecide if Chartboost SDK should block for an age gate.\n\n\n\n\nsdkbox.PluginChartboost:handleOpenURL(url, sourceApp)\n\n\n\n\n\n\nopens a \"deep link\" URL for a Chartboost Custom Scheme.\n\n\n\n\nsdkbox.PluginChartboost:setCustomID(customID)\n\n\n\n\n\n\nset a custom identifier to send in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost:getCustomID()\n\n\n\n\n\n\nget the current custom identifier being sent in the POST body for all Chartboost API server requests.\n\n\n\n\nsdkbox.PluginChartboost:setShouldRequestInterstitialsInFirstSession(shouldRequest)\n\n\n\n\n\n\ndecide if Chartboost SDK should show interstitials in the first session.\n\n\n\n\nsdkbox.PluginChartboost:setShouldDisplayLoadingViewForMoreApps(shouldDisplay)\n\n\n\n\n\n\ndecide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.\n\n\n\n\nsdkbox.PluginChartboost:setShouldPrefetchVideoContent(shouldPrefetch)\n\n\n\n\n\n\ndecide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.\n\n\n\n\nListeners\n\n\nonChartboostCached()\n\n\n\n\n\n\nthere is cached content\n\n\n\n\nonChartboostShouldDisplay()\n\n\n\n\n\n\nshould Chartboost display\n\n\n\n\nonChartboostDisplay()\n\n\n\n\n\n\nCharboost ad has displayed\n\n\n\n\nonChartboostDismiss()\n\n\n\n\n\n\nChartboost ad has been dismissed\n\n\n\n\nonChartboostClose()\n\n\n\n\n\n\nChartboost is not running\n\n\n\n\nonChartboostClick()\n\n\n\n\n\n\nChartboost ad was clicked on\n\n\n\n\nonChartboostReward()\n\n\n\n\n\n\nChartboost reward was given\n\n\n\n\nonChartboostFailedToLoad()\n\n\n\n\n\n\nChartboost failed to load\n\n\n\n\nonChartboostFailToRecordClick()\n\n\n\n\n\n\nChartboost failed to record click\n\n\n\n\nonChartboostConfirmation()\n\n\n\n\n\n\nChartboost confirmation\n\n\n\n\nonChartboostCompleteStore()\n\n\n\n\n\n\nChartboost complete store", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/#chartboost", 
            "text": "", 
            "title": "Chartboost"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Chartboost \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import chartboost", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  Proguard (release, optional)   \u4fee\u6539  project.properties  \u52a0\u5165\u4f60\u7684  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u4fee\u6539\u8fd9\u4e2a\u4f60\u7684\u914d\u7f6e\u6587\u4ef6,\u5e76\u5728\u5176\u4e2d\u52a0\u4e0b\u4ee5\u4e0b\u4ee3\u7801:   -keep class com.chartboost.** { *; }  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Chartboost \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u5728 Chartboost \u6ce8\u518c\u5e10\u53f7,\u7136\u540e\u7528\u5bf9\u5e94\u7684\u4fe1\u606f\u66ff\u6362  CHARTBOOST ID  \u548c  CHARTBOOST SIGNATURE .  Chartboost :{\n     id : CHARTBOOST ID ,\n     signature : CHARTBOOST SIGNATURE ,\n     ads :{\n         Default :{\n             type : interstitial \n        },\n         Level Complete :{\n             type : rewarded_video \n        },\n         MoreApp :{\n             type : more_app \n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:   #include  PluginChartboostLua.hpp \n#include  PluginChartboostLuaHelper.h    \u7136\u540e,\u6211\u4eec\u9700\u8981\u8c03\u7528  register_all_PluginChartboostLua( lua_State* );  \u6765\u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.   \u6ce8\u610f:  \u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e, \u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u8c03\u7528\u4e0a\u9762\u7684\u6ce8\u518c\u51fd\u6570.  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  #include  PluginChartboostLua.hpp \n#include  PluginChartboostLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginChartboostLua(tolua_s);\n    register_all_PluginChartboostLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Chartboost  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginChartboost:init()  \u663e\u793a\u5e7f\u544a  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u663e\u793a\u5e7f\u544a:  // To use the Chartboost predefined locations\nsdkbox.PluginChartboost:show( Default )\n// To use customized location\nsdkbox.PluginChartboost:show( your_ad_name )  \u63a5\u6536 Chartboost \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Chartboost  \u4e8b\u4ef6, \u5f53\u73a9\u5bb6\u89c2\u770b\u4e86\u5e7f\u544a\u8fc7,\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u505a\u67d0\u4e9b\u64cd\u4f5c,\u6bd4\u5982\u5956\u52b1\u73a9\u5bb6.   \u6ce8\u518c\u56de\u8c03(\u901a\u8fc7log\u6f14\u793a\u7ed3\u679c):   sdkbox.PluginChartboost:setListener(function(args)\n    if  onChartboostCached  == args.func then\n        local name = args.name -- string\n        print( onChartboostCached )\n        print( name: , args.name)\n    elseif  onChartboostShouldDisplay  == args.func then\n        local name = args.name -- string\n        print( onChartboostShouldDisplay )\n        print( name: , args.name)\n    elseif  onChartboostDisplay  == args.func then\n        local name = args.name -- string\n        print( onChartboostDisplay )\n        print( name: , args.name)\n    elseif  onChartboostDismiss  == args.func then\n        local name = args.name -- string\n        print( onChartboostDismiss )\n        print( name: , args.name)\n    elseif  onChartboostClose  == args.func then\n        local name = args.name -- string\n        print( onChartboostClose )\n        print( name: , args.name)\n    elseif  onChartboostClick  == args.func then\n        local name = args.name -- string\n        print( onChartboostClick )\n        print( name: , args.name)\n    elseif  onChartboostReward  == args.func then\n        local name = args.name -- string\n        local reward = args.reward -- int\n        print( onChartboostReward )\n        print( name: , args.name)\n        print( reward: , reward)\n    elseif  onChartboostFailedToLoad  == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print( onChartboostFailedToLoad )\n        print( name: , args.name)\n        print( error: , e)\n    elseif  onChartboostFailToRecordClick  == args.func then\n        local name = args.name -- string\n        local e = args.e -- int\n        print( onChartboostFailToRecordClick )\n        print( name: , args.name)\n        print( error: , e)\n    elseif  onChartboostConfirmation  == args.func then\n        local name = args.name -- string\n        print( onChartboostConfirmation )\n    elseif  onChartboostCompleteStore  == args.func then\n        local name = args.name -- string\n        print( onChartboostCompleteStore )\n    end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/chartboost/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginChartboost:init()   initialize the plugin instance.   sdkbox.PluginChartboost:show(name)   show ad by specifying ad name.   sdkbox.PluginChartboost:setListener(listener)   creates the an optional listener.   sdkbox.PluginChartboost:removeListener()   removed the listener.   sdkbox.PluginChartboost:isAnyViewVisible()   check to see if any views are visible.   sdkbox.PluginChartboost:isAvailable(name)   is the specified ad available?   sdkbox.PluginChartboost:setAutoCacheAds(shouldCache)   set to enable and disable the auto cache feature (Enabled by default).   sdkbox.PluginChartboost:getAutoCacheAds()   get the current auto cache behavior (Enabled by default).   sdkbox.PluginChartboost:closeImpression()   close any visible Chartboost impressions (interstitials, more apps, rewarded\nvideo, etc..) and the loading view (if visible).   sdkbox.PluginChartboost:setStatusBarBehavior(behavior)   set to control how the fullscreen ad units should interact with the status bar. (CBStatusBarBehaviorIgnore by default).   sdkbox.PluginChartboost:didPassAgeGate(pass)   confirm if an age gate passed or failed. When specified Chartboost will wait for this call before showing the IOS App Store.   sdkbox.PluginChartboost:setShouldPauseClickForConfirmation(shouldPause)   decide if Chartboost SDK should block for an age gate.   sdkbox.PluginChartboost:handleOpenURL(url, sourceApp)   opens a \"deep link\" URL for a Chartboost Custom Scheme.   sdkbox.PluginChartboost:setCustomID(customID)   set a custom identifier to send in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost:getCustomID()   get the current custom identifier being sent in the POST body for all Chartboost API server requests.   sdkbox.PluginChartboost:setShouldRequestInterstitialsInFirstSession(shouldRequest)   decide if Chartboost SDK should show interstitials in the first session.   sdkbox.PluginChartboost:setShouldDisplayLoadingViewForMoreApps(shouldDisplay)   decide if Chartboost SDK should show a loading view while preparing to display the \"more applications\" UI.   sdkbox.PluginChartboost:setShouldPrefetchVideoContent(shouldPrefetch)   decide if Chartboost SDK will attempt to fetch videos from the Chartboost API servers.   Listeners  onChartboostCached()   there is cached content   onChartboostShouldDisplay()   should Chartboost display   onChartboostDisplay()   Charboost ad has displayed   onChartboostDismiss()   Chartboost ad has been dismissed   onChartboostClose()   Chartboost is not running   onChartboostClick()   Chartboost ad was clicked on   onChartboostReward()   Chartboost reward was given   onChartboostFailedToLoad()   Chartboost failed to load   onChartboostFailToRecordClick()   Chartboost failed to record click   onChartboostConfirmation()   Chartboost confirmation   onChartboostCompleteStore()   Chartboost complete store", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/", 
            "text": "Facebook\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import facebook\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a \nAPP\n\n\niOS\u7684\u6b65\u9aa4\n\n\n\n\n\u4f9d\niOS\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nAppController.mm\n \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f \nAppDelegate.cpp\n \u4e2d\n\n\n\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}\n\n\n\n\nAndroid\u7684\u6b65\u9aa4\n\n\n\n\n\u786e\u4fdd\u4f60\u7684 \njava -version\n \n= 1.7\n\n\n\u4f9d\nAndroid\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nres/values/strings.xml\n \u4e2d\u7ed9 \nfacebook_app_id\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nAndroidManifest.xml\n \u4e2d\u7ed9 \n_replace_with_your_app_id_\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nproject.properties\n \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a \ntarget=android-15\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a \nProguard\n \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n-libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a \nsdkbox_config.json\n \u914d\u7f6e\u6587\u4ef6\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f\n\n\nFacebook\n:\n{\n    \ndebug\n:true\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Facebook\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n#include \nPluginFacebook/PluginFacebook.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFacebook::init();\n}\n\n\n\n\n\u4f7f\u7528 Facebook\n\n\n\u767b\u5f55\n\n\n\u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.\n\n\nsdkbox::PluginFacebook::login();\n\n\n\n\n\u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500.\n\n\nsdkbox::PluginFacebook::logout();\n\n\n\n\n\u4f60\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u767b\u5f55\n\n\nsdkbox::PluginFacebook::isLoggedIn();\n\n\n\n\n\n\n\u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500\n\n\n\n\n\u6743\u9650\n\n\nFacebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650, \nread\n and \npublish\n\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\n\u8fd9\u91cc\n\u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f\n\n\nSDKBOX \u63d0\u4f9b\u6700\u5e38\u7528\u7684\u51e0\u79cd\u6743\u9650:\n\n\n\n\nFB_PERM_READ_PUBLIC_PROFILE\n\n\nFB_PERM_READ_EMAIL\n\n\nFB_PERM_READ_USER_FRIENDS\n\n\nFB_PERM_PUBLISH_POST\n\n\n\n\n\u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:\n\n\nsdkbox::PluginFacebook::requestReadPermissions({FB_PERM_READ_PUBLIC_PROFILE, FB_PERM_READ_USER_FRIENDS});\nsdkbox::PluginFacebook::requestPublishPermissions({FB_PERM_PUBLISH_POST});\n\n\n\n\n\u5206\u4eab\n\n\n\u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u65b9\u5f0f.\n\n\n\n\n\u5206\u4eab\n \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u8054\u63a5:\n\n\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox::PluginFacebook::share(info);\n\n\n\n\n\u5206\u4eab\u56fe\u7247:\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::share(info);\n\n\n\n\n\n\ndialog\n \u4f1a\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u8ba9\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u60f3\u8bf4\u7684\u8bdd:\n\n\n\n\n\u663e\u4e00\u4e2a\u5206\u4eab\u5bf9\u8bdd\u6846:\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox::PluginFacebook::dialog(info);\n\n\n\n\n\u5206\u4eab\u4e00\u4e2a\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::dialog(info);\n\n\n\n\n\n\n\u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86 \nFacebook\n \u5e94\u7528.\n\n\n\n\n\u56fe\u8c31API\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7 \napi\n \u51fd\u6570 \u6267\u884c\n\u56fe\u8c31API\n\n\n\u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:\n\n\nsdkbox::PluginFacebook::FBAPIParam params;\nsdkbox::PluginFacebook::api(\n/me/friendlists\n, \nGET\n, params, \n/me/friendlists\n);\n\n\n\n\nFacebook \u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFacebook\n \u4e8b\u4ef6\uff0c\u4ee5\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::FacebookListener\n \u5e76\u91cd\u5199\u4e0b\u9762\u7684\u51fd\u6570:\n\n\n\n\n#include \nPluginFacebook/PluginFacebook.h\n\nclass MyClass : public sdkbox::FacebookListener\n{\nprivate:\n  void onLogin(bool isLogin, const std::string\n msg);\n  void onPermission(bool isLogin, const std::string\n msg);\n  void onAPI(const std::string\n tag, const std::string\n jsonData);\n  void onSharedSuccess(const std::string\n message);\n  void onSharedFailed(const std::string\n message);\n  void onSharedCancel();\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u76d1\u542c\u4e8b\u4ef6:\n\n\n\n\nsdkbox::PluginFacebook::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init ( ) ;\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void setListener ( FacebookListener * listener ) ;\n\n\n\n\n\n\nSet listener to listen for facebook events\n\n\n\n\nstatic FacebookListener * getListener ( ) ;\n\n\n\n\n\n\nGet the listener\n\n\n\n\nstatic void removeListener ( ) ;\n\n\n\n\n\n\nRemove the listener, and can't listen to events anymore\n\n\n\n\nstatic void login ( ) ;\n\n\n\n\n\n\nlog in\n\n\n\n\nstatic void requestReadPermissions ( const std::vector \nstd::string\n \n permissions ) ;\n\n\n\n\n\n\nlog in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nstatic void requestPublishPermissions ( const std::vector \nstd::string\n \n permissions ) ;\n\n\n\n\n\n\nlog in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nstatic void logout ( ) ;\n\n\n\n\n\n\nlog out\n\n\n\n\nstatic bool isLoggedIn ( ) ;\n\n\n\n\n\n\nCheck whether the user logined or not\n\n\n\n\nstatic std::string getUserID ( ) ;\n\n\n\n\n\n\nget UserID\n\n\n\n\nstatic std::string getAccessToken ( ) ;\n\n\n\n\n\n\nget AccessToken\n\n\n\n\nstatic std::vector \nstd::string\n getPermissionList ( ) ;\n\n\n\n\n\n\nget permissoin list\n\n\n\n\nstatic void share ( const FBShareInfo \n info ) ;\n\n\n\n\n\n\nshare\n\n\n\n\nstatic void dialog ( const FBShareInfo \n info ) ;\n\n\n\n\n\n\nopen a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)\n\n\n\n\nstatic std::string getSDKVersion ( ) ;\n\n\n\n\n\n\nreturn the version of Facebook SDK\n\n\n\n\nstatic void api ( const std::string \n path ,\n                  const std::string \n method ,\n                  const FBAPIParam \n params ,\n                  const std::string \n tag ) ;\n\n\n\n\n\n\nuse Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph\n\n\n\n\nListeners\n\n\nvoid onLogin ( bool isLogin , const std::string \n error );\n\n\n\n\nvoid onSharedSuccess ( const std::string \n message );\n\n\n\n\nvoid onSharedFailed ( const std::string \n message );\n\n\n\n\nvoid onSharedCancel ( );\n\n\n\n\nvoid onAPI ( const std::string \n key , const std::string \n jsonData );\n\n\n\n\nvoid onPermission ( bool isLogin , const std::string \n error );", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/#facebook", 
            "text": "", 
            "title": "Facebook"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import facebook", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/#_2", 
            "text": "\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a  APP  iOS\u7684\u6b65\u9aa4   \u4f9d iOS\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  AppController.mm  \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f  AppDelegate.cpp  \u4e2d   - (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}  Android\u7684\u6b65\u9aa4   \u786e\u4fdd\u4f60\u7684  java -version   = 1.7  \u4f9d Android\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  res/values/strings.xml  \u4e2d\u7ed9  facebook_app_id  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  AndroidManifest.xml  \u4e2d\u7ed9  _replace_with_your_app_id_  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  project.properties  \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a  target=android-15   \u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)   \u7f16\u8f91  project.properties  \u6307\u5b9a  Proguard  \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   -libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a  sdkbox_config.json  \u914d\u7f6e\u6587\u4ef6  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f  Facebook :\n{\n     debug :true\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Facebook  \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:  #include  PluginFacebook/PluginFacebook.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFacebook::init();\n}  \u4f7f\u7528 Facebook  \u767b\u5f55  \u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.  sdkbox::PluginFacebook::login();  \u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500.  sdkbox::PluginFacebook::logout();  \u4f60\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u767b\u5f55  sdkbox::PluginFacebook::isLoggedIn();   \u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500   \u6743\u9650  Facebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650,  read  and  publish \n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u8fd9\u91cc \u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f  SDKBOX \u63d0\u4f9b\u6700\u5e38\u7528\u7684\u51e0\u79cd\u6743\u9650:   FB_PERM_READ_PUBLIC_PROFILE  FB_PERM_READ_EMAIL  FB_PERM_READ_USER_FRIENDS  FB_PERM_PUBLISH_POST   \u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:  sdkbox::PluginFacebook::requestReadPermissions({FB_PERM_READ_PUBLIC_PROFILE, FB_PERM_READ_USER_FRIENDS});\nsdkbox::PluginFacebook::requestPublishPermissions({FB_PERM_PUBLISH_POST});  \u5206\u4eab  \u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u65b9\u5f0f.   \u5206\u4eab  \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u8054\u63a5:   sdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox::PluginFacebook::share(info);  \u5206\u4eab\u56fe\u7247:  sdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::share(info);   dialog  \u4f1a\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u8ba9\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u60f3\u8bf4\u7684\u8bdd:   \u663e\u4e00\u4e2a\u5206\u4eab\u5bf9\u8bdd\u6846:  sdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox::PluginFacebook::dialog(info);  \u5206\u4eab\u4e00\u4e2a\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:  sdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::dialog(info);   \u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86  Facebook  \u5e94\u7528.   \u56fe\u8c31API  \u4f60\u53ef\u4ee5\u901a\u8fc7  api  \u51fd\u6570 \u6267\u884c \u56fe\u8c31API  \u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:  sdkbox::PluginFacebook::FBAPIParam params;\nsdkbox::PluginFacebook::api( /me/friendlists ,  GET , params,  /me/friendlists );  Facebook \u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536  Facebook  \u4e8b\u4ef6\uff0c\u4ee5\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u5904\u7406.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::FacebookListener  \u5e76\u91cd\u5199\u4e0b\u9762\u7684\u51fd\u6570:   #include  PluginFacebook/PluginFacebook.h \nclass MyClass : public sdkbox::FacebookListener\n{\nprivate:\n  void onLogin(bool isLogin, const std::string  msg);\n  void onPermission(bool isLogin, const std::string  msg);\n  void onAPI(const std::string  tag, const std::string  jsonData);\n  void onSharedSuccess(const std::string  message);\n  void onSharedFailed(const std::string  message);\n  void onSharedCancel();\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u76d1\u542c\u4e8b\u4ef6:   sdkbox::PluginFacebook::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/facebook/v3-cpp/#api-reference", 
            "text": "Methods  static void init ( ) ;   initialize the plugin instance.   static void setListener ( FacebookListener * listener ) ;   Set listener to listen for facebook events   static FacebookListener * getListener ( ) ;   Get the listener   static void removeListener ( ) ;   Remove the listener, and can't listen to events anymore   static void login ( ) ;   log in   static void requestReadPermissions ( const std::vector  std::string    permissions ) ;   log in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   static void requestPublishPermissions ( const std::vector  std::string    permissions ) ;   log in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   static void logout ( ) ;   log out   static bool isLoggedIn ( ) ;   Check whether the user logined or not   static std::string getUserID ( ) ;   get UserID   static std::string getAccessToken ( ) ;   get AccessToken   static std::vector  std::string  getPermissionList ( ) ;   get permissoin list   static void share ( const FBShareInfo   info ) ;   share   static void dialog ( const FBShareInfo   info ) ;   open a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)   static std::string getSDKVersion ( ) ;   return the version of Facebook SDK   static void api ( const std::string   path ,\n                  const std::string   method ,\n                  const FBAPIParam   params ,\n                  const std::string   tag ) ;   use Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph   Listeners  void onLogin ( bool isLogin , const std::string   error );  void onSharedSuccess ( const std::string   message );  void onSharedFailed ( const std::string   message );  void onSharedCancel ( );  void onAPI ( const std::string   key , const std::string   jsonData );  void onPermission ( bool isLogin , const std::string   error );", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/facebook/v3-js/", 
            "text": "Facebook\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import facebook\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a \nAPP\n\n\niOS\u7684\u6b65\u9aa4\n\n\n\n\n\u4f9d\niOS\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nAppController.mm\n \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f \nAppDelegate.cpp\n \u4e2d\n\n\n\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}\n\n\n\n\nAndroid\u7684\u6b65\u9aa4\n\n\n\n\n\u786e\u4fdd\u4f60\u7684 \njava -version\n \n= 1.7\n\n\n\u4f9d\nAndroid\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nres/values/strings.xml\n \u4e2d\u7ed9 \nfacebook_app_id\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nAndroidManifest.xml\n \u4e2d\u7ed9 \n_replace_with_your_app_id_\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nproject.properties\n \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a \ntarget=android-15\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a \nProguard\n \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n-libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a \nsdkbox_config.json\n \u914d\u7f6e\u6587\u4ef6\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f\n\n\nFacebook\n:\n{\n    \ndebug\n:true\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u6ce8\u518c javascript \u51fd\u6570\n\n\n\u5728\u4f7f\u7528 Fackbook JS \u51fd\u6570\u4e4b\u524d\uff0c\u4f60\u8981\u628a\u5b83\u4eec\u6ce8\u518c\u5230 cocos2d-x\u4e2d.\n\n\n\u8fd9\u6837\u505a:\n* \u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n#include \nPluginFacebookJS.hpp\n\n#include \nPluginFacebookJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginFacebookJS);\nsc-\naddRegisterCallback(register_PluginFacebookJS_helper);\n\n\n\n\n\u521d\u59cb\u5316 Facebook\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginFacebook.init();\n\n\n\n\n\u4f7f\u7528 Facebook\n\n\n\u767b\u5f55\n\n\n\u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.\n\n\nsdkbox.PluginFacebook.login();\n\n\n\n\n\u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500\n\n\nsdkbox.PluginFacebook.logout();\n\n\n\n\n\u4f60\u53ef\u4ee5\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55\n\n\nsdkbox.PluginFacebook.isLoggedIn();\n\n\n\n\n\n\n\u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500\n\n\n\n\n\u6743\u9650\n\n\nFacebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650, \nread\n and \npublish\n\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\n\u8fd9\u91cc\n\u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f\n\n\n\u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:\n\n\nsdkbox.PluginFacebook.requestReadPermissions([\npublic_profile\n, \nemail\n]);\nsdkbox.PluginFacebook.requestPublishPermissions([\npublish_actions\n]);\n\n\n\n\n\u5206\u4eab\n\n\n\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5206\u4eab\u529f\u80fd\n\n\n\n\n\u5206\u4eab\n \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u94fe\u63a5:\n\n\n\n\nvar info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\u5206\u4eab\u56fe\u7247:\n\n\nvar info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\n\n\u5bf9\u8bdd\u6846\n \u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u7684\u6587\u5b57:\n\n\n\n\n\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846:\n\n\nvar info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:\n\n\nvar info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\n\n\u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86 \nFacebook\n \u5e94\u7528.\n\n\n\n\n\u56fe\u8c31API\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7 \napi\n \u51fd\u6570 \u6267\u884c\n\u56fe\u8c31API\n\n\n\u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:\n\n\nvar params = new Object();\nsdkbox.PluginFacebook.api(\n/me/friendlists\n, \nGET\n, params, \n/me/friendlists\n);\n\n\n\n\nFacebook \u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFacebook\n \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u76f8\u5e94\u7684\u5904\u7406.\n\n\nsdkbox.PluginFacebook.setListener({\n    onLogin: function(isLogin, msg) {},\n    onAPI: function(tag, data) {},\n    onSharedSuccess: function(data) {},\n    onSharedFailed: function(data) {},\n    onSharedCancel: function() {},\n    onPermission: function(isLogin, msg) {}\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFacebook.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginFacebook.login();\n\n\n\n\n\n\nlog in\n\n\n\n\nsdkbox.PluginFacebook.requestReadPermissions(permissions);\n\n\n\n\n\n\nlog in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook.requestPublishPermissions(permissions);\n\n\n\n\n\n\nlog in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook.logout();\n\n\n\n\n\n\nlog out\n\n\n\n\nsdkbox.PluginFacebook.isLoggedIn();\n\n\n\n\n\n\nCheck whether the user logined or not\n\n\n\n\nsdkbox.PluginFacebook.getUserID();\n\n\n\n\n\n\nget UserID\n\n\n\n\nsdkbox.PluginFacebook.getAccessToken();\n\n\n\n\n\n\nget AccessToken\n\n\n\n\nsdkbox.PluginFacebook.getPermissionList();\n\n\n\n\n\n\nget permissoin list\n\n\n\n\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\n\nshare\n\n\n\n\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\n\nopen a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)\n\n\n\n\nsdkbox.PluginFacebook.getSDKVersion();\n\n\n\n\n\n\nreturn the version of Facebook SDK\n\n\n\n\nsdkbox.PluginFacebook.api(path, method, params, tag);\n\n\n\n\n\n\nuse Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph\n\n\n\n\nListeners\n\n\nonLogin(isLogin, error);\n\n\n\n\nonSharedSuccess(message);\n\n\n\n\nonSharedFailed(message);\n\n\n\n\nonSharedCancel();\n\n\n\n\nonAPI(key, jsonData);\n\n\n\n\nonPermission(isLogin, error);", 
            "title": "js"
        }, 
        {
            "location": "/plugins/facebook/v3-js/#facebook", 
            "text": "", 
            "title": "Facebook"
        }, 
        {
            "location": "/plugins/facebook/v3-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import facebook", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/facebook/v3-js/#_2", 
            "text": "\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a  APP  iOS\u7684\u6b65\u9aa4   \u4f9d iOS\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  AppController.mm  \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f  AppDelegate.cpp  \u4e2d   - (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}  Android\u7684\u6b65\u9aa4   \u786e\u4fdd\u4f60\u7684  java -version   = 1.7  \u4f9d Android\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  res/values/strings.xml  \u4e2d\u7ed9  facebook_app_id  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  AndroidManifest.xml  \u4e2d\u7ed9  _replace_with_your_app_id_  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  project.properties  \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a  target=android-15   \u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)   \u7f16\u8f91  project.properties  \u6307\u5b9a  Proguard  \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   -libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/facebook/v3-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a  sdkbox_config.json  \u914d\u7f6e\u6587\u4ef6  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f  Facebook :\n{\n     debug :true\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/facebook/v3-js/#_4", 
            "text": "\u6ce8\u518c javascript \u51fd\u6570  \u5728\u4f7f\u7528 Fackbook JS \u51fd\u6570\u4e4b\u524d\uff0c\u4f60\u8981\u628a\u5b83\u4eec\u6ce8\u518c\u5230 cocos2d-x\u4e2d.  \u8fd9\u6837\u505a:\n* \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:  #include  PluginFacebookJS.hpp \n#include  PluginFacebookJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:   sc- addRegisterCallback(register_all_PluginFacebookJS);\nsc- addRegisterCallback(register_PluginFacebookJS_helper);  \u521d\u59cb\u5316 Facebook   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginFacebook.init();  \u4f7f\u7528 Facebook  \u767b\u5f55  \u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.  sdkbox.PluginFacebook.login();  \u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500  sdkbox.PluginFacebook.logout();  \u4f60\u53ef\u4ee5\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55  sdkbox.PluginFacebook.isLoggedIn();   \u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500   \u6743\u9650  Facebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650,  read  and  publish \n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u8fd9\u91cc \u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f  \u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:  sdkbox.PluginFacebook.requestReadPermissions([ public_profile ,  email ]);\nsdkbox.PluginFacebook.requestPublishPermissions([ publish_actions ]);  \u5206\u4eab  \u63d0\u4f9b\u4e86\u4e24\u4e2a\u5206\u4eab\u529f\u80fd   \u5206\u4eab  \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u94fe\u63a5:   var info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook.share(info);  \u5206\u4eab\u56fe\u7247:  var info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.share(info);   \u5bf9\u8bdd\u6846  \u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u7684\u6587\u5b57:   \u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846:  var info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook.dialog(info);  \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:  var info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.dialog(info);   \u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86  Facebook  \u5e94\u7528.   \u56fe\u8c31API  \u4f60\u53ef\u4ee5\u901a\u8fc7  api  \u51fd\u6570 \u6267\u884c \u56fe\u8c31API  \u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:  var params = new Object();\nsdkbox.PluginFacebook.api( /me/friendlists ,  GET , params,  /me/friendlists );  Facebook \u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536  Facebook  \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u76f8\u5e94\u7684\u5904\u7406.  sdkbox.PluginFacebook.setListener({\n    onLogin: function(isLogin, msg) {},\n    onAPI: function(tag, data) {},\n    onSharedSuccess: function(data) {},\n    onSharedFailed: function(data) {},\n    onSharedCancel: function() {},\n    onPermission: function(isLogin, msg) {}\n});", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/facebook/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginFacebook.init();   initialize the plugin instance.   sdkbox.PluginFacebook.login();   log in   sdkbox.PluginFacebook.requestReadPermissions(permissions);   log in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook.requestPublishPermissions(permissions);   log in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook.logout();   log out   sdkbox.PluginFacebook.isLoggedIn();   Check whether the user logined or not   sdkbox.PluginFacebook.getUserID();   get UserID   sdkbox.PluginFacebook.getAccessToken();   get AccessToken   sdkbox.PluginFacebook.getPermissionList();   get permissoin list   sdkbox.PluginFacebook.share(info);   share   sdkbox.PluginFacebook.dialog(info);   open a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)   sdkbox.PluginFacebook.getSDKVersion();   return the version of Facebook SDK   sdkbox.PluginFacebook.api(path, method, params, tag);   use Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph   Listeners  onLogin(isLogin, error);  onSharedSuccess(message);  onSharedFailed(message);  onSharedCancel();  onAPI(key, jsonData);  onPermission(isLogin, error);", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/", 
            "text": "Facebook\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import facebook\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a \nAPP\n\n\niOS\u7684\u6b65\u9aa4\n\n\n\n\n\u4f9d\niOS\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nAppController.mm\n \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f \nAppDelegate.cpp\n \u4e2d\n\n\n\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}\n\n\n\n\nAndroid\u7684\u6b65\u9aa4\n\n\n\n\n\u786e\u4fdd\u4f60\u7684 \njava -version\n \n= 1.7\n\n\n\u4f9d\nAndroid\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nres/values/strings.xml\n \u4e2d\u7ed9 \nfacebook_app_id\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nAndroidManifest.xml\n \u4e2d\u7ed9 \n_replace_with_your_app_id_\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nproject.properties\n \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a \ntarget=android-15\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a \nProguard\n \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n-libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a \nsdkbox_config.json\n \u914d\u7f6e\u6587\u4ef6\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f\n\n\nFacebook\n:\n{\n    \ndebug\n:true\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c \nAgeCheq\n \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570 \nlua_State*\n:\n\n\n#include \nPluginFacebookLua.hpp\n\n#include \nPluginFacebookLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginFacebookLua(L);\n  register_PluginFacebookLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 Facebook\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginFacebook:init();\n\n\n\n\n\u4f7f\u7528 Facebook\n\n\n\u767b\u5f55\n\n\n\u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.\n\n\nsdkbox.PluginFacebook:login();\n\n\n\n\n\u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500.\n\n\nsdkbox.PluginFacebook:logout();\n\n\n\n\n\u4f60\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u767b\u5f55\n\n\nsdkbox.PluginFacebook:isLoggedIn();\n\n\n\n\n\n\n\u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500\n\n\n\n\n\u6743\u9650\n\n\nFacebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650, \nread\n and \npublish\n\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\n\u8fd9\u91cc\n\u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f\n\n\nSDKBOX \u63d0\u4f9b\u6700\u5e38\u7528\u7684\u51e0\u79cd\u6743\u9650:\n\n\n\n\nFB_PERM_READ_PUBLIC_PROFILE\n\n\nFB_PERM_READ_EMAIL\n\n\nFB_PERM_READ_USER_FRIENDS\n\n\nFB_PERM_PUBLISH_POST\n\n\n\n\n\u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:\n\n\nsdkbox.PluginFacebook:requestReadPermissions({FB_PERM_READ_PUBLIC_PROFILE, FB_PERM_READ_USER_FRIENDS});\nsdkbox.PluginFacebook:requestPublishPermissions({FB_PERM_PUBLISH_POST});\n\n\n\n\n\u5206\u4eab\n\n\n\u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u65b9\u5f0f.\n\n\n\n\n\u5206\u4eab\n \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u8054\u63a5:\n\n\n\n\nlocal info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook:share(info);\n\n\n\n\n\u5206\u4eab\u56fe\u7247:\n\n\nlocal info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook:share(info);\n\n\n\n\n\n\ndialog\n \u4f1a\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u63d0\u793a\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u4e00\u6bb5\u4ed6\u4eec\u81ea\u5df1\u7684\u6587\u5b57\u6ce8\u89e3:\n\n\n\n\n\u663e\u793a\u4e00\u4e2a\u5206\u4eab\u5bf9\u8bdd\u6846:\n\n\nlocal info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook:dialog(info);\n\n\n\n\n\u5206\u4eab\u4e00\u4e2a\u5e26\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:\n\n\nlocal info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook:dialog(info);\n\n\n\n\n\n\n\u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86 \nFacebook\n \u5e94\u7528.\n\n\n\n\n\u56fe\u8c31API\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7 \napi\n \u51fd\u6570 \u6267\u884c\n\u56fe\u8c31API\n\n\n\u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:\n\n\nlocal params;\nsdkbox.PluginFacebook:api(\n/me/friendlists\n, \nGET\n, params, \n/me/friendlists\n);\n\n\n\n\nFacebook \u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 Facebook \u4e8b\u4ef6,\u5e76\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\nsdkbox.PluginFacebook:setListener(function(args)\n    if \nonLogin\n == args.name then\n        local isLogin = args.isLogin;\n        local msg = args.msg;\n    elseif \nonPermission\n ==  args.name then\n        local isLogin = args.isLogin;\n        local msg = args.msg;\n    elseif \nonAPI\n ==  args.name then\n        local tag = args.tag;\n        local jsonData = args.jsonData;\n    elseif \nonSharedSuccess\n ==  args.name then\n        local msg = args.message\n    elseif \nonSharedFailed\n ==  args.name then\n        local msg = args.message\n    elseif \nonSharedCancel\n ==  args.name then\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFacebook:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginFacebook:login()\n\n\n\n\n\n\nlog in\n\n\n\n\nsdkbox.PluginFacebook:requestReadPermissions(permissions)\n\n\n\n\n\n\nlog in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook:requestPublishPermissions(permissions)\n\n\n\n\n\n\nlog in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook:logout()\n\n\n\n\n\n\nlog out\n\n\n\n\nsdkbox.PluginFacebook:isLoggedIn()\n\n\n\n\n\n\nCheck whether the user logined or not\n\n\n\n\nsdkbox.PluginFacebook:getUserID()\n\n\n\n\n\n\nget UserID\n\n\n\n\nsdkbox.PluginFacebook:getAccessToken()\n\n\n\n\n\n\nget AccessToken\n\n\n\n\nsdkbox.PluginFacebook:getPermissionList()\n\n\n\n\n\n\nget permissoin list\n\n\n\n\nsdkbox.PluginFacebook:share(info)\n\n\n\n\n\n\nshare\n\n\n\n\nsdkbox.PluginFacebook:dialog(info)\n\n\n\n\n\n\nopen a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)\n\n\n\n\nsdkbox.PluginFacebook:getSDKVersion()\n\n\n\n\n\n\nreturn the version of Facebook SDK\n\n\n\n\nsdkbox.PluginFacebook:api(path, method, params, tag)\n\n\n\n\n\n\nuse Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph\n\n\n\n\nListeners\n\n\nonLogin(isLogin, error)\n\n\n\n\nonSharedSuccess(message)\n\n\n\n\nonSharedFailed(message)\n\n\n\n\nonSharedCancel()\n\n\n\n\nonAPI(key, jsonData)\n\n\n\n\nonPermission(isLogin, error)", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/#facebook", 
            "text": "", 
            "title": "Facebook"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import facebook", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/#_2", 
            "text": "\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a  APP  iOS\u7684\u6b65\u9aa4   \u4f9d iOS\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  AppController.mm  \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f  AppDelegate.cpp  \u4e2d   - (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}  Android\u7684\u6b65\u9aa4   \u786e\u4fdd\u4f60\u7684  java -version   = 1.7  \u4f9d Android\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  res/values/strings.xml  \u4e2d\u7ed9  facebook_app_id  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  AndroidManifest.xml  \u4e2d\u7ed9  _replace_with_your_app_id_  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  project.properties  \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a  target=android-15   \u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)   \u7f16\u8f91  project.properties  \u6307\u5b9a  Proguard  \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   -libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a  sdkbox_config.json  \u914d\u7f6e\u6587\u4ef6  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f  Facebook :\n{\n     debug :true\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c  AgeCheq  \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570  lua_State* :  #include  PluginFacebookLua.hpp \n#include  PluginFacebookLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginFacebookLua(L);\n  register_PluginFacebookLua_helper(L);\n}  \u521d\u59cb\u5316 Facebook  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginFacebook:init();  \u4f7f\u7528 Facebook  \u767b\u5f55  \u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.  sdkbox.PluginFacebook:login();  \u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500.  sdkbox.PluginFacebook:logout();  \u4f60\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u767b\u5f55  sdkbox.PluginFacebook:isLoggedIn();   \u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500   \u6743\u9650  Facebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650,  read  and  publish \n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u8fd9\u91cc \u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f  SDKBOX \u63d0\u4f9b\u6700\u5e38\u7528\u7684\u51e0\u79cd\u6743\u9650:   FB_PERM_READ_PUBLIC_PROFILE  FB_PERM_READ_EMAIL  FB_PERM_READ_USER_FRIENDS  FB_PERM_PUBLISH_POST   \u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:  sdkbox.PluginFacebook:requestReadPermissions({FB_PERM_READ_PUBLIC_PROFILE, FB_PERM_READ_USER_FRIENDS});\nsdkbox.PluginFacebook:requestPublishPermissions({FB_PERM_PUBLISH_POST});  \u5206\u4eab  \u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u65b9\u5f0f.   \u5206\u4eab  \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u8054\u63a5:   local info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook:share(info);  \u5206\u4eab\u56fe\u7247:  local info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook:share(info);   dialog  \u4f1a\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u63d0\u793a\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u4e00\u6bb5\u4ed6\u4eec\u81ea\u5df1\u7684\u6587\u5b57\u6ce8\u89e3:   \u663e\u793a\u4e00\u4e2a\u5206\u4eab\u5bf9\u8bdd\u6846:  local info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook:dialog(info);  \u5206\u4eab\u4e00\u4e2a\u5e26\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:  local info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook:dialog(info);   \u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86  Facebook  \u5e94\u7528.   \u56fe\u8c31API  \u4f60\u53ef\u4ee5\u901a\u8fc7  api  \u51fd\u6570 \u6267\u884c \u56fe\u8c31API  \u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:  local params;\nsdkbox.PluginFacebook:api( /me/friendlists ,  GET , params,  /me/friendlists );  Facebook \u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536 Facebook \u4e8b\u4ef6,\u5e76\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u5904\u7406.  sdkbox.PluginFacebook:setListener(function(args)\n    if  onLogin  == args.name then\n        local isLogin = args.isLogin;\n        local msg = args.msg;\n    elseif  onPermission  ==  args.name then\n        local isLogin = args.isLogin;\n        local msg = args.msg;\n    elseif  onAPI  ==  args.name then\n        local tag = args.tag;\n        local jsonData = args.jsonData;\n    elseif  onSharedSuccess  ==  args.name then\n        local msg = args.message\n    elseif  onSharedFailed  ==  args.name then\n        local msg = args.message\n    elseif  onSharedCancel  ==  args.name then\n    end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/facebook/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginFacebook:init()   initialize the plugin instance.   sdkbox.PluginFacebook:login()   log in   sdkbox.PluginFacebook:requestReadPermissions(permissions)   log in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook:requestPublishPermissions(permissions)   log in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook:logout()   log out   sdkbox.PluginFacebook:isLoggedIn()   Check whether the user logined or not   sdkbox.PluginFacebook:getUserID()   get UserID   sdkbox.PluginFacebook:getAccessToken()   get AccessToken   sdkbox.PluginFacebook:getPermissionList()   get permissoin list   sdkbox.PluginFacebook:share(info)   share   sdkbox.PluginFacebook:dialog(info)   open a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)   sdkbox.PluginFacebook:getSDKVersion()   return the version of Facebook SDK   sdkbox.PluginFacebook:api(path, method, params, tag)   use Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph   Listeners  onLogin(isLogin, error)  onSharedSuccess(message)  onSharedFailed(message)  onSharedCancel()  onAPI(key, jsonData)  onPermission(isLogin, error)", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/", 
            "text": "Facebook\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import facebook\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a \nAPP\n\n\niOS\u7684\u6b65\u9aa4\n\n\n\n\n\u4f9d\niOS\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nAppController.mm\n \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f \nAppDelegate.cpp\n \u4e2d\n\n\n\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}\n\n\n\n\nAndroid\u7684\u6b65\u9aa4\n\n\n\n\n\u786e\u4fdd\u4f60\u7684 \njava -version\n \n= 1.7\n\n\n\u4f9d\nAndroid\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nres/values/strings.xml\n \u4e2d\u7ed9 \nfacebook_app_id\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nAndroidManifest.xml\n \u4e2d\u7ed9 \n_replace_with_your_app_id_\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nproject.properties\n \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a \ntarget=android-15\n\n\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a \nProguard\n \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n-libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a \nsdkbox_config.json\n \u914d\u7f6e\u6587\u4ef6\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f\n\n\nFacebook\n:\n{\n    \ndebug\n:true\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Facebook\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n#include \nPluginFacebook/PluginFacebook.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFacebook::init();\n}\n\n\n\n\n\u4f7f\u7528 Facebook\n\n\n\u767b\u5f55\n\n\n\u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.\n\n\nsdkbox::PluginFacebook::login();\n\n\n\n\n\u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500.\n\n\nsdkbox::PluginFacebook::logout();\n\n\n\n\n\u4f60\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u767b\u5f55\n\n\nsdkbox::PluginFacebook::isLoggedIn();\n\n\n\n\n\n\n\u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500\n\n\n\n\n\u6743\u9650\n\n\nFacebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650, \nread\n and \npublish\n\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\n\u8fd9\u91cc\n\u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f\n\n\nSDKBOX \u63d0\u4f9b\u6700\u5e38\u7528\u7684\u51e0\u79cd\u6743\u9650:\n\n\n\n\nFB_PERM_READ_PUBLIC_PROFILE\n\n\nFB_PERM_READ_EMAIL\n\n\nFB_PERM_READ_USER_FRIENDS\n\n\nFB_PERM_PUBLISH_POST\n\n\n\n\n\u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:\n\n\nsdkbox::PluginFacebook::requestReadPermissions({FB_PERM_READ_PUBLIC_PROFILE, FB_PERM_READ_USER_FRIENDS});\nsdkbox::PluginFacebook::requestPublishPermissions({FB_PERM_PUBLISH_POST});\n\n\n\n\n\u5206\u4eab\n\n\n\u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u65b9\u5f0f.\n\n\n\n\n\u5206\u4eab\n \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u8054\u63a5:\n\n\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox::PluginFacebook::share(info);\n\n\n\n\n\u5206\u4eab\u56fe\u7247:\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::share(info);\n\n\n\n\n\n\ndialog\n \u4f1a\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u8ba9\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u60f3\u8bf4\u7684\u8bdd:\n\n\n\n\n\u663e\u4e00\u4e2a\u5206\u4eab\u5bf9\u8bdd\u6846:\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox::PluginFacebook::dialog(info);\n\n\n\n\n\u5206\u4eab\u4e00\u4e2a\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:\n\n\nsdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::dialog(info);\n\n\n\n\n\n\n\u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86 \nFacebook\n \u5e94\u7528.\n\n\n\n\n\u56fe\u8c31API\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7 \napi\n \u51fd\u6570 \u6267\u884c\n\u56fe\u8c31API\n\n\n\u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:\n\n\nsdkbox::PluginFacebook::FBAPIParam params;\nsdkbox::PluginFacebook::api(\n/me/friendlists\n, \nGET\n, params, \n/me/friendlists\n);\n\n\n\n\nFacebook \u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFacebook\n \u4e8b\u4ef6\uff0c\u4ee5\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::FacebookListener\n \u5e76\u91cd\u5199\u4e0b\u9762\u7684\u51fd\u6570:\n\n\n\n\n#include \nPluginFacebook/PluginFacebook.h\n\nclass MyClass : public sdkbox::FacebookListener\n{\nprivate:\n  void onLogin(bool isLogin, const std::string\n msg);\n  void onPermission(bool isLogin, const std::string\n msg);\n  void onAPI(const std::string\n tag, const std::string\n jsonData);\n  void onSharedSuccess(const std::string\n message);\n  void onSharedFailed(const std::string\n message);\n  void onSharedCancel();\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u76d1\u542c\u4e8b\u4ef6:\n\n\n\n\nsdkbox::PluginFacebook::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init ( ) ;\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void setListener ( FacebookListener * listener ) ;\n\n\n\n\n\n\nSet listener to listen for facebook events\n\n\n\n\nstatic FacebookListener * getListener ( ) ;\n\n\n\n\n\n\nGet the listener\n\n\n\n\nstatic void removeListener ( ) ;\n\n\n\n\n\n\nRemove the listener, and can't listen to events anymore\n\n\n\n\nstatic void login ( ) ;\n\n\n\n\n\n\nlog in\n\n\n\n\nstatic void requestReadPermissions ( const std::vector \nstd::string\n \n permissions ) ;\n\n\n\n\n\n\nlog in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nstatic void requestPublishPermissions ( const std::vector \nstd::string\n \n permissions ) ;\n\n\n\n\n\n\nlog in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nstatic void logout ( ) ;\n\n\n\n\n\n\nlog out\n\n\n\n\nstatic bool isLoggedIn ( ) ;\n\n\n\n\n\n\nCheck whether the user logined or not\n\n\n\n\nstatic std::string getUserID ( ) ;\n\n\n\n\n\n\nget UserID\n\n\n\n\nstatic std::string getAccessToken ( ) ;\n\n\n\n\n\n\nget AccessToken\n\n\n\n\nstatic std::vector \nstd::string\n getPermissionList ( ) ;\n\n\n\n\n\n\nget permissoin list\n\n\n\n\nstatic void share ( const FBShareInfo \n info ) ;\n\n\n\n\n\n\nshare\n\n\n\n\nstatic void dialog ( const FBShareInfo \n info ) ;\n\n\n\n\n\n\nopen a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)\n\n\n\n\nstatic std::string getSDKVersion ( ) ;\n\n\n\n\n\n\nreturn the version of Facebook SDK\n\n\n\n\nstatic void api ( const std::string \n path ,\n                  const std::string \n method ,\n                  const FBAPIParam \n params ,\n                  const std::string \n tag ) ;\n\n\n\n\n\n\nuse Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph\n\n\n\n\nListeners\n\n\nvoid onLogin ( bool isLogin , const std::string \n error );\n\n\n\n\nvoid onSharedSuccess ( const std::string \n message );\n\n\n\n\nvoid onSharedFailed ( const std::string \n message );\n\n\n\n\nvoid onSharedCancel ( );\n\n\n\n\nvoid onAPI ( const std::string \n key , const std::string \n jsonData );\n\n\n\n\nvoid onPermission ( bool isLogin , const std::string \n error );", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/#facebook", 
            "text": "", 
            "title": "Facebook"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import facebook", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/#_2", 
            "text": "\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a  APP  iOS\u7684\u6b65\u9aa4   \u4f9d iOS\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  AppController.mm  \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f  AppDelegate.cpp  \u4e2d   - (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}  Android\u7684\u6b65\u9aa4   \u786e\u4fdd\u4f60\u7684  java -version   = 1.7  \u4f9d Android\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  res/values/strings.xml  \u4e2d\u7ed9  facebook_app_id  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  AndroidManifest.xml  \u4e2d\u7ed9  _replace_with_your_app_id_  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  project.properties  \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a  target=android-15   \u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)   \u7f16\u8f91  project.properties  \u6307\u5b9a  Proguard  \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   -libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a  sdkbox_config.json  \u914d\u7f6e\u6587\u4ef6  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f  Facebook :\n{\n     debug :true\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Facebook  \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:  #include  PluginFacebook/PluginFacebook.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFacebook::init();\n}  \u4f7f\u7528 Facebook  \u767b\u5f55  \u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.  sdkbox::PluginFacebook::login();  \u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500.  sdkbox::PluginFacebook::logout();  \u4f60\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u767b\u5f55  sdkbox::PluginFacebook::isLoggedIn();   \u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500   \u6743\u9650  Facebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650,  read  and  publish \n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u8fd9\u91cc \u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f  SDKBOX \u63d0\u4f9b\u6700\u5e38\u7528\u7684\u51e0\u79cd\u6743\u9650:   FB_PERM_READ_PUBLIC_PROFILE  FB_PERM_READ_EMAIL  FB_PERM_READ_USER_FRIENDS  FB_PERM_PUBLISH_POST   \u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:  sdkbox::PluginFacebook::requestReadPermissions({FB_PERM_READ_PUBLIC_PROFILE, FB_PERM_READ_USER_FRIENDS});\nsdkbox::PluginFacebook::requestPublishPermissions({FB_PERM_PUBLISH_POST});  \u5206\u4eab  \u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u65b9\u5f0f.   \u5206\u4eab  \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u8054\u63a5:   sdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox::PluginFacebook::share(info);  \u5206\u4eab\u56fe\u7247:  sdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::share(info);   dialog  \u4f1a\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u8ba9\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u60f3\u8bf4\u7684\u8bdd:   \u663e\u4e00\u4e2a\u5206\u4eab\u5bf9\u8bdd\u6846:  sdkbox::FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox::PluginFacebook::dialog(info);  \u5206\u4eab\u4e00\u4e2a\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:  sdkbox::FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox::PluginFacebook::dialog(info);   \u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86  Facebook  \u5e94\u7528.   \u56fe\u8c31API  \u4f60\u53ef\u4ee5\u901a\u8fc7  api  \u51fd\u6570 \u6267\u884c \u56fe\u8c31API  \u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:  sdkbox::PluginFacebook::FBAPIParam params;\nsdkbox::PluginFacebook::api( /me/friendlists ,  GET , params,  /me/friendlists );  Facebook \u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536  Facebook  \u4e8b\u4ef6\uff0c\u4ee5\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u5904\u7406.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::FacebookListener  \u5e76\u91cd\u5199\u4e0b\u9762\u7684\u51fd\u6570:   #include  PluginFacebook/PluginFacebook.h \nclass MyClass : public sdkbox::FacebookListener\n{\nprivate:\n  void onLogin(bool isLogin, const std::string  msg);\n  void onPermission(bool isLogin, const std::string  msg);\n  void onAPI(const std::string  tag, const std::string  jsonData);\n  void onSharedSuccess(const std::string  message);\n  void onSharedFailed(const std::string  message);\n  void onSharedCancel();\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u76d1\u542c\u4e8b\u4ef6:   sdkbox::PluginFacebook::setListener(this);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/facebook/v2-cpp/#api-reference", 
            "text": "Methods  static void init ( ) ;   initialize the plugin instance.   static void setListener ( FacebookListener * listener ) ;   Set listener to listen for facebook events   static FacebookListener * getListener ( ) ;   Get the listener   static void removeListener ( ) ;   Remove the listener, and can't listen to events anymore   static void login ( ) ;   log in   static void requestReadPermissions ( const std::vector  std::string    permissions ) ;   log in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   static void requestPublishPermissions ( const std::vector  std::string    permissions ) ;   log in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   static void logout ( ) ;   log out   static bool isLoggedIn ( ) ;   Check whether the user logined or not   static std::string getUserID ( ) ;   get UserID   static std::string getAccessToken ( ) ;   get AccessToken   static std::vector  std::string  getPermissionList ( ) ;   get permissoin list   static void share ( const FBShareInfo   info ) ;   share   static void dialog ( const FBShareInfo   info ) ;   open a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)   static std::string getSDKVersion ( ) ;   return the version of Facebook SDK   static void api ( const std::string   path ,\n                  const std::string   method ,\n                  const FBAPIParam   params ,\n                  const std::string   tag ) ;   use Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph   Listeners  void onLogin ( bool isLogin , const std::string   error );  void onSharedSuccess ( const std::string   message );  void onSharedFailed ( const std::string   message );  void onSharedCancel ( );  void onAPI ( const std::string   key , const std::string   jsonData );  void onPermission ( bool isLogin , const std::string   error );", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/facebook/v2-js/", 
            "text": "Facebook\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import facebook\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a \nAPP\n\n\niOS\u7684\u6b65\u9aa4\n\n\n\n\n\u4f9d\niOS\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nAppController.mm\n \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f \nAppDelegate.cpp\n \u4e2d\n\n\n\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}\n\n\n\n\nAndroid\u7684\u6b65\u9aa4\n\n\n\n\n\u786e\u4fdd\u4f60\u7684 \njava -version\n \n= 1.7\n\n\n\u4f9d\nAndroid\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nres/values/strings.xml\n \u4e2d\u7ed9 \nfacebook_app_id\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nAndroidManifest.xml\n \u4e2d\u7ed9 \n_replace_with_your_app_id_\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nproject.properties\n \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a \ntarget=android-15\n\n\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a \nProguard\n \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n-libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a \nsdkbox_config.json\n \u914d\u7f6e\u6587\u4ef6\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f\n\n\nFacebook\n:\n{\n    \ndebug\n:true\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u6ce8\u518c javascript \u51fd\u6570\n\n\n\u5728\u4f7f\u7528 Fackbook JS \u51fd\u6570\u4e4b\u524d\uff0c\u4f60\u8981\u628a\u5b83\u4eec\u6ce8\u518c\u5230 cocos2d-x\u4e2d.\n\n\n\u8fd9\u6837\u505a:\n* \u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n#include \nPluginFacebookJS.hpp\n\n#include \nPluginFacebookJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginFacebookJS);\nsc-\naddRegisterCallback(register_PluginFacebookJS_helper);\n\n\n\n\n\u521d\u59cb\u5316 Facebook\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginFacebook.init();\n\n\n\n\n\u4f7f\u7528 Facebook\n\n\n\u767b\u5f55\n\n\n\u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.\n\n\nsdkbox.PluginFacebook.login();\n\n\n\n\n\u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500\n\n\nsdkbox.PluginFacebook.logout();\n\n\n\n\n\u4f60\u53ef\u4ee5\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55\n\n\nsdkbox.PluginFacebook.isLoggedIn();\n\n\n\n\n\n\n\u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500\n\n\n\n\n\u6743\u9650\n\n\nFacebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650, \nread\n and \npublish\n\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\n\u8fd9\u91cc\n\u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f\n\n\n\u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:\n\n\nsdkbox.PluginFacebook.requestReadPermissions([\npublic_profile\n, \nemail\n]);\nsdkbox.PluginFacebook.requestPublishPermissions([\npublish_actions\n]);\n\n\n\n\n\u5206\u4eab\n\n\n\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5206\u4eab\u529f\u80fd\n\n\n\n\n\u5206\u4eab\n \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u94fe\u63a5:\n\n\n\n\nvar info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\u5206\u4eab\u56fe\u7247:\n\n\nvar info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\n\n\u5bf9\u8bdd\u6846\n \u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u7684\u6587\u5b57:\n\n\n\n\n\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846:\n\n\nvar info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:\n\n\nvar info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\n\n\u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86 \nFacebook\n \u5e94\u7528.\n\n\n\n\n\u56fe\u8c31API\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7 \napi\n \u51fd\u6570 \u6267\u884c\n\u56fe\u8c31API\n\n\n\u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:\n\n\nvar params = new Object();\nsdkbox.PluginFacebook.api(\n/me/friendlists\n, \nGET\n, params, \n/me/friendlists\n);\n\n\n\n\nFacebook \u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFacebook\n \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u76f8\u5e94\u7684\u5904\u7406.\n\n\nsdkbox.PluginFacebook.setListener({\n    onLogin: function(isLogin, msg) {},\n    onAPI: function(tag, data) {},\n    onSharedSuccess: function(data) {},\n    onSharedFailed: function(data) {},\n    onSharedCancel: function() {},\n    onPermission: function(isLogin, msg) {}\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFacebook.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginFacebook.login();\n\n\n\n\n\n\nlog in\n\n\n\n\nsdkbox.PluginFacebook.requestReadPermissions(permissions);\n\n\n\n\n\n\nlog in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook.requestPublishPermissions(permissions);\n\n\n\n\n\n\nlog in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook.logout();\n\n\n\n\n\n\nlog out\n\n\n\n\nsdkbox.PluginFacebook.isLoggedIn();\n\n\n\n\n\n\nCheck whether the user logined or not\n\n\n\n\nsdkbox.PluginFacebook.getUserID();\n\n\n\n\n\n\nget UserID\n\n\n\n\nsdkbox.PluginFacebook.getAccessToken();\n\n\n\n\n\n\nget AccessToken\n\n\n\n\nsdkbox.PluginFacebook.getPermissionList();\n\n\n\n\n\n\nget permissoin list\n\n\n\n\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\n\nshare\n\n\n\n\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\n\nopen a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)\n\n\n\n\nsdkbox.PluginFacebook.getSDKVersion();\n\n\n\n\n\n\nreturn the version of Facebook SDK\n\n\n\n\nsdkbox.PluginFacebook.api(path, method, params, tag);\n\n\n\n\n\n\nuse Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph\n\n\n\n\nListeners\n\n\nonLogin(isLogin, error);\n\n\n\n\nonSharedSuccess(message);\n\n\n\n\nonSharedFailed(message);\n\n\n\n\nonSharedCancel();\n\n\n\n\nonAPI(key, jsonData);\n\n\n\n\nonPermission(isLogin, error);", 
            "title": "js"
        }, 
        {
            "location": "/plugins/facebook/v2-js/#facebook", 
            "text": "", 
            "title": "Facebook"
        }, 
        {
            "location": "/plugins/facebook/v2-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import facebook", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/facebook/v2-js/#_2", 
            "text": "\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a  APP  iOS\u7684\u6b65\u9aa4   \u4f9d iOS\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  AppController.mm  \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f  AppDelegate.cpp  \u4e2d   - (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}  Android\u7684\u6b65\u9aa4   \u786e\u4fdd\u4f60\u7684  java -version   = 1.7  \u4f9d Android\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  res/values/strings.xml  \u4e2d\u7ed9  facebook_app_id  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  AndroidManifest.xml  \u4e2d\u7ed9  _replace_with_your_app_id_  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  project.properties  \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a  target=android-15   \u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)   \u7f16\u8f91  project.properties  \u6307\u5b9a  Proguard  \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   -libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/facebook/v2-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a  sdkbox_config.json  \u914d\u7f6e\u6587\u4ef6  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f  Facebook :\n{\n     debug :true\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/facebook/v2-js/#_4", 
            "text": "\u6ce8\u518c javascript \u51fd\u6570  \u5728\u4f7f\u7528 Fackbook JS \u51fd\u6570\u4e4b\u524d\uff0c\u4f60\u8981\u628a\u5b83\u4eec\u6ce8\u518c\u5230 cocos2d-x\u4e2d.  \u8fd9\u6837\u505a:\n* \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:  #include  PluginFacebookJS.hpp \n#include  PluginFacebookJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u786e\u4fdd\u6709\u5982\u4e0b\u8c03\u7528:   sc- addRegisterCallback(register_all_PluginFacebookJS);\nsc- addRegisterCallback(register_PluginFacebookJS_helper);  \u521d\u59cb\u5316 Facebook   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginFacebook.init();  \u4f7f\u7528 Facebook  \u767b\u5f55  \u7528\u6237\u5728\u4f7f\u7528\u524d\u9700\u8981\u767b\u5f55\u5230 Facebook.  sdkbox.PluginFacebook.login();  \u7528\u6237\u4e0d\u60f3\u4f7f\u7528 Facebook \u65f6\uff0c\u53ef\u4ee5\u6ce8\u9500  sdkbox.PluginFacebook.logout();  \u4f60\u53ef\u4ee5\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55  sdkbox.PluginFacebook.isLoggedIn();   \u6ce8\u610f: \u7528\u6237\u53ea\u9700\u8981\u767b\u5f55\u4e00\u6b21, \u9664\u975e\u4ed6\u4eec\u6ce8\u9500   \u6743\u9650  Facebook \u8981\u6c42\u4f60\u5728\u4f7f\u7528\u524d\u53bb\u8be2\u95ee\u7528\u6237\u8981\u76f8\u5e94\u7684\u6743\u9650,\u6bd4\u5982 posting \u76f8\u5173\u7684\u6743\u76ca\n\u5c31\u6709\u4e24\u7c7b\u6743\u9650,  read  and  publish \n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u8fd9\u91cc \u5f97\u5230\u5b8c\u6574\u7684\u4fe1\u606f  \u8981\u83b7\u53d6\u6743\u9650,\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f60\u60f3\u8981\u6743\u9650,\u6bd4\u5982:  sdkbox.PluginFacebook.requestReadPermissions([ public_profile ,  email ]);\nsdkbox.PluginFacebook.requestPublishPermissions([ publish_actions ]);  \u5206\u4eab  \u63d0\u4f9b\u4e86\u4e24\u4e2a\u5206\u4eab\u529f\u80fd   \u5206\u4eab  \u4f1a\u81ea\u52a8\u53d1\u5e03\u5230\u7528\u6237\u7684\u4fe1\u606f\u6d41\u4e2d\n\u5206\u4eab\u94fe\u63a5:   var info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook.share(info);  \u5206\u4eab\u56fe\u7247:  var info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.share(info);   \u5bf9\u8bdd\u6846  \u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846,\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u6dfb\u52a0\u4ed6\u4eec\u81ea\u5df1\u7684\u6587\u5b57:   \u663e\u793a\u4e00\u4e2a\u5bf9\u8bdd\u6846:  var info = new Object();\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook.dialog(info);  \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247:  var info = new Object();\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.dialog(info);   \u6ce8\u610f: \u5206\u4eab\u5e26\u6709\u6587\u5b57\u6ce8\u89e3\u7684\u56fe\u7247\u9700\u8981\u7528\u6237\u7684\u624b\u673a\u4e0a\u5df2\u5b89\u88c5\u4e86  Facebook  \u5e94\u7528.   \u56fe\u8c31API  \u4f60\u53ef\u4ee5\u901a\u8fc7  api  \u51fd\u6570 \u6267\u884c \u56fe\u8c31API  \u6bd4\u5982,\u53d6\u597d\u53cb\u5217\u8868:  var params = new Object();\nsdkbox.PluginFacebook.api( /me/friendlists ,  GET , params,  /me/friendlists );  Facebook \u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536  Facebook  \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u76f8\u5e94\u7684\u5904\u7406.  sdkbox.PluginFacebook.setListener({\n    onLogin: function(isLogin, msg) {},\n    onAPI: function(tag, data) {},\n    onSharedSuccess: function(data) {},\n    onSharedFailed: function(data) {},\n    onSharedCancel: function() {},\n    onPermission: function(isLogin, msg) {}\n});", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/facebook/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginFacebook.init();   initialize the plugin instance.   sdkbox.PluginFacebook.login();   log in   sdkbox.PluginFacebook.requestReadPermissions(permissions);   log in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook.requestPublishPermissions(permissions);   log in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook.logout();   log out   sdkbox.PluginFacebook.isLoggedIn();   Check whether the user logined or not   sdkbox.PluginFacebook.getUserID();   get UserID   sdkbox.PluginFacebook.getAccessToken();   get AccessToken   sdkbox.PluginFacebook.getPermissionList();   get permissoin list   sdkbox.PluginFacebook.share(info);   share   sdkbox.PluginFacebook.dialog(info);   open a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)   sdkbox.PluginFacebook.getSDKVersion();   return the version of Facebook SDK   sdkbox.PluginFacebook.api(path, method, params, tag);   use Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph   Listeners  onLogin(isLogin, error);  onSharedSuccess(message);  onSharedFailed(message);  onSharedCancel();  onAPI(key, jsonData);  onPermission(isLogin, error);", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/", 
            "text": "Facebook\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import facebook\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a \nAPP\n\n\niOS\u7684\u6b65\u9aa4\n\n\n\n\n\u4f9d\niOS\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nAppController.mm\n \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f \nAppDelegate.cpp\n \u4e2d\n\n\n\n\n- (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}\n\n\n\n\nAndroid\u7684\u6b65\u9aa4\n\n\n\n\n\u786e\u4fdd\u4f60\u7684 \njava -version\n \n= 1.7\n\n\n\u4f9d\nAndroid\u5feb\u901f\u6307\u5bfc\n \u6765\u914d\u7f6e\u4f60\u7684 \nAPP\n\n\n\u5728 \nres/values/strings.xml\n \u4e2d\u7ed9 \nfacebook_app_id\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nAndroidManifest.xml\n \u4e2d\u7ed9 \n_replace_with_your_app_id_\n \u8d4b\u503c\u4e3a\u4f60\u7684 \nFacebook App ID\n\n\n\u5728 \nproject.properties\n \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a \ntarget=android-15\n\n\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a \nProguard\n \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:\n\n\n\n\n-libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982 \ncocos run -m release\n), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a \nsdkbox_config.json\n \u914d\u7f6e\u6587\u4ef6\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f\n\n\nFacebook\n:\n{\n    \ndebug\n:true\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginFacebookLua.hpp\n\n#include \nPluginFacebookLuaHelper.hpp\n\n\n\n\n\n\n\n\u7136\u540e,\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\nregister_all_PluginFacebookLua(\nlua_State*\n);\n \u628a\u8fd9\u4e2a\u63d2\u4ef6\u6ce8\u518c\u5230 Lua \u4e2d.\n\n\n\n\n\u6ce8\u610f:\n \u8fd9\u4e2a\u8c03\u7528\u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e, \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\n\n#include \nPluginFacebookLua.hpp\n\n#include \nPluginFacebookLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginFacebookLua(tolua_s);\n    register_all_PluginFacebookLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Facebook\n\n\n\n\n\u4fee\u6539\u4f60\u7684\u5e94\u7528\u7684 \nInfo.plist\n \u9879,\u589e\u52a0\u4e0b\u9762\u8fd9\u4e9b\u9879,\u7528\u4f60\u81ea\u5df1\u7684 \n \u66ff\u6362\u91cc\u9762\u5bf9\u5e94\u7684\u9879:\n\n\n\n\nkey\nCFBundleURLTypes\n/key\n\n\narray\n\n\ndict\n    \nkey\nCFBundleURLName\n/key\n\n    \nstring\n/string\n\n    \nkey\nCFBundleURLSchemes\n/key\n\n    \narray\n\n        \nstring\nfb\nAPP ID\n/string\n\n    \n/array\n\n\n/dict\n\n\n/array\n\n\nkey\nFacebookAppID\n/key\n\n\nstring\nAPP ID\n/string\n\n\nkey\nFacebookDisplayName\n/key\n\n\nstring\nMyTestApp\n/string\n\n\n\n\n\n\u5047\u5b9a\u4f60\u7684Facebook \nAPP ID\n \u662f \n655158077954837\n, \u90a3\u4e48\u4e00\u4e2a\u5b8c\u6574\u7684\u4f8b\u5b50\u53ef\u80fd\u50cf\u8fd9\u6837:\n\n\nkey\nCFBundleURLTypes\n/key\n\n\narray\n\n\ndict\n\n    \nkey\nCFBundleURLName\n/key\n\n    \nstring\n/string\n\n    \nkey\nCFBundleURLSchemes\n/key\n\n    \narray\n\n        \nstring\nfb655158077954837\n/string\n\n    \n/array\n\n\n/dict\n\n\n/array\n\n\nkey\nFacebookAppID\n/key\n\n\nstring\n655158077954837\n/string\n\n\nkey\nFacebookDisplayName\n/key\n\n\nstring\nMyTestApp\n/string\n\n\n\n\n\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\n\n\nsdkbox.PluginFacebook:init()\n\n\n\n\n\u4f7f\u7528 Facebook\n\n\nFacebook\u4e2d\u6709\u5f88\u591a\u64cd\u4f5c\uff0c\u4f60\u90fd\u53ef\u4ee5\u7528\u5230.\u4f46\u662f\u5728\u4f7f\u7528\u524d\uff0c\u4f60\u8981\u5148\u767b\u9646\uff0c\u6bd4\u5982:\n\n\nsdkbox.PluginFacebook:login();\n\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u5206\u4eab\u94fe\u63a5\uff0c\u6bd4\u5982\uff1a\n\n\n\n\nFBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\n\n\u4f60\u8fd8\u53ef\u4ee5\u5206\u4eab\u94fe\u63a5\uff0c\u540c\u65f6\u6587\u5b57\u6ce8\u89e3\u5b83\uff0c\u4f46\u9700\u8981\u5f53\u524d\u7684\u8bbe\u5907\u4e0a\u5df2\u5b89\u88c5\u4e86 \nFacebook\n \u8fd9\u4e2a\u5e94\u7528\uff0c\u6bd4\u5982:\n\n\n\n\nFBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  = \nhttp://www.cocos2d-x.org\n;\ninfo.title = \ncocos2d-x\n;\ninfo.text  = \nBest Game Engine\n;\ninfo.image = \nhttp://cocos2d-x.org/images/logo.png\n;\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u5206\u4eab\u4e00\u4e2a\u56fe\u7247:\n\n\n\n\nFBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.share(info);\n\n\n\n\n\n\n\u4f60\u8fd8\u53ef\u4ee5\u5206\u4eab\u56fe\u7247\uff0c\u540c\u65f6\u6587\u5b57\u6ce8\u89e3\u5b83\uff0c\u6bd4\u5982\uff1a\n\n\n\n\nFBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title = \nMy Photo\n;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.dialog(info);\n\n\n\n\n\n\n\u867d\u7136\u767b\u9646\u4e86\uff0c\u4f60\u8fd8\u662f\u9700\u8981\u83b7\u53d6 \nread()\n \u548c \npublish()\n \u6743\u9650\u624d\u80fd\u53d1\u5e03\u3002\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginFacebook.requestReadPermissions({FB_PERM_READ_USER_FRIENDS});\nsdkbox.PluginFacebook.requestPublishPermissions({FB_PERM_PUBLISH_POST});\n\n\n\n\n\n\n\u5f53\u6240\u6709\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u6ce8\u9500\uff0c\u6bd4\u5982\uff1a\n\n\n\n\nsdkbox.PluginFacebook.logout();\n\n\n\n\n\u63a5\u6536 Facebook \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 Facebook \u4e8b\u4ef6\uff0c\u5f53 Facebook \u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u4f60\u53ef\u4ee5\u505a\u76f8\u5e94\u7684\u5904\u7406\n\n\n\n\n\u8bbe\u7f6e Facebook \u7684 \u76d1\u542c:\n\n\n\n\nsdkbox.PluginFacebook:setListener(function(event)\n    print(\nPluginFacebook callback\n)\n    dump(event)\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFacebook:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginFacebook:login()\n\n\n\n\n\n\nlog in\n\n\n\n\nsdkbox.PluginFacebook:requestReadPermissions(permissions)\n\n\n\n\n\n\nlog in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook:requestPublishPermissions(permissions)\n\n\n\n\n\n\nlog in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions\n\n\n\n\nsdkbox.PluginFacebook:logout()\n\n\n\n\n\n\nlog out\n\n\n\n\nsdkbox.PluginFacebook:isLoggedIn()\n\n\n\n\n\n\nCheck whether the user logined or not\n\n\n\n\nsdkbox.PluginFacebook:getUserID()\n\n\n\n\n\n\nget UserID\n\n\n\n\nsdkbox.PluginFacebook:getAccessToken()\n\n\n\n\n\n\nget AccessToken\n\n\n\n\nsdkbox.PluginFacebook:getPermissionList()\n\n\n\n\n\n\nget permissoin list\n\n\n\n\nsdkbox.PluginFacebook:share(info)\n\n\n\n\n\n\nshare\n\n\n\n\nsdkbox.PluginFacebook:dialog(info)\n\n\n\n\n\n\nopen a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)\n\n\n\n\nsdkbox.PluginFacebook:getSDKVersion()\n\n\n\n\n\n\nreturn the version of Facebook SDK\n\n\n\n\nsdkbox.PluginFacebook:api(path, method, params, tag)\n\n\n\n\n\n\nuse Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph\n\n\n\n\nListeners\n\n\nonLogin(isLogin, error)\n\n\n\n\nonSharedSuccess(message)\n\n\n\n\nonSharedFailed(message)\n\n\n\n\nonSharedCancel()\n\n\n\n\nonAPI(key, jsonData)\n\n\n\n\nonPermission(isLogin, error)", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/#facebook", 
            "text": "", 
            "title": "Facebook"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Facebook \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import facebook", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/#_2", 
            "text": "\u4e0b\u9762\u7684\u6b65\u9aa4\u5047\u5b9a\u4f60\u5df2\u7ecf\u6ce8\u518c\u4e3a Facbbook \u5f00\u53d1\u8005\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a  APP  iOS\u7684\u6b65\u9aa4   \u4f9d iOS\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  AppController.mm  \u4e2d\u4fee\u6539\u5982\u4e0b\u4ee3\u7801\uff0c\u4e0d\u662f  AppDelegate.cpp  \u4e2d   - (void)applicationDidBecomeActive:(UIApplication *)application {\n  [FBSDKAppEvents activateApp];\n}\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                    didFinishLaunchingWithOptions:launchOptions];\n}\n\n- (BOOL)application:(UIApplication *)application\n            openURL:(NSURL *)url\n  sourceApplication:(NSString *)sourceApplication\n         annotation:(id)annotation {\n  return [[FBSDKApplicationDelegate sharedInstance] application:application\n                                                         openURL:url\n                                               sourceApplication:sourceApplication\n                                                      annotation:annotation];\n}  Android\u7684\u6b65\u9aa4   \u786e\u4fdd\u4f60\u7684  java -version   = 1.7  \u4f9d Android\u5feb\u901f\u6307\u5bfc  \u6765\u914d\u7f6e\u4f60\u7684  APP  \u5728  res/values/strings.xml  \u4e2d\u7ed9  facebook_app_id  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  AndroidManifest.xml  \u4e2d\u7ed9  _replace_with_your_app_id_  \u8d4b\u503c\u4e3a\u4f60\u7684  Facebook App ID  \u5728  project.properties  \u4e2d\u7ed9 target \u8d4b\u503c\u4e3a  target=android-15   \u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release\u6a21\u5f0f\u4e0b\u53ef\u9009)   \u7f16\u8f91  project.properties  \u6307\u5b9a  Proguard  \u5230\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6,\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9:   -libraryjars libs/facebook_lib/libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u6a21\u5f0f\u4e0b\u6709\u6548 (\u6bd4\u5982  cocos run -m release ), \u5728 debug \u6a21\u5f0f\u4e0b,\u4e0d\u4f1a\u8c03\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e2a  sdkbox_config.json  \u914d\u7f6e\u6587\u4ef6  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50,\u4f60\u53ef\u4ee5\u6253\u5f00/\u5173\u95edFacebook\u7684\u8c03\u8bd5\u6a21\u5f0f  Facebook :\n{\n     debug :true\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginFacebookLua.hpp \n#include  PluginFacebookLuaHelper.hpp    \u7136\u540e,\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 register_all_PluginFacebookLua( lua_State* );  \u628a\u8fd9\u4e2a\u63d2\u4ef6\u6ce8\u518c\u5230 Lua \u4e2d.   \u6ce8\u610f:  \u8fd9\u4e2a\u8c03\u7528\u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e,  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d.  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  #include  PluginFacebookLua.hpp \n#include  PluginFacebookLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginFacebookLua(tolua_s);\n    register_all_PluginFacebookLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Facebook   \u4fee\u6539\u4f60\u7684\u5e94\u7528\u7684  Info.plist  \u9879,\u589e\u52a0\u4e0b\u9762\u8fd9\u4e9b\u9879,\u7528\u4f60\u81ea\u5df1\u7684   \u66ff\u6362\u91cc\u9762\u5bf9\u5e94\u7684\u9879:   key CFBundleURLTypes /key  array  dict\n     key CFBundleURLName /key \n     string /string \n     key CFBundleURLSchemes /key \n     array \n         string fb APP ID /string \n     /array  /dict  /array  key FacebookAppID /key  string APP ID /string  key FacebookDisplayName /key  string MyTestApp /string   \u5047\u5b9a\u4f60\u7684Facebook  APP ID  \u662f  655158077954837 , \u90a3\u4e48\u4e00\u4e2a\u5b8c\u6574\u7684\u4f8b\u5b50\u53ef\u80fd\u50cf\u8fd9\u6837:  key CFBundleURLTypes /key  array  dict \n     key CFBundleURLName /key \n     string /string \n     key CFBundleURLSchemes /key \n     array \n         string fb655158077954837 /string \n     /array  /dict  /array  key FacebookAppID /key  string 655158077954837 /string  key FacebookDisplayName /key  string MyTestApp /string    \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.   sdkbox.PluginFacebook:init()  \u4f7f\u7528 Facebook  Facebook\u4e2d\u6709\u5f88\u591a\u64cd\u4f5c\uff0c\u4f60\u90fd\u53ef\u4ee5\u7528\u5230.\u4f46\u662f\u5728\u4f7f\u7528\u524d\uff0c\u4f60\u8981\u5148\u767b\u9646\uff0c\u6bd4\u5982:  sdkbox.PluginFacebook:login();   \u4f60\u53ef\u4ee5\u5206\u4eab\u94fe\u63a5\uff0c\u6bd4\u5982\uff1a   FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook.share(info);   \u4f60\u8fd8\u53ef\u4ee5\u5206\u4eab\u94fe\u63a5\uff0c\u540c\u65f6\u6587\u5b57\u6ce8\u89e3\u5b83\uff0c\u4f46\u9700\u8981\u5f53\u524d\u7684\u8bbe\u5907\u4e0a\u5df2\u5b89\u88c5\u4e86  Facebook  \u8fd9\u4e2a\u5e94\u7528\uff0c\u6bd4\u5982:   FBShareInfo info;\ninfo.type  = FB_LINK;\ninfo.link  =  http://www.cocos2d-x.org ;\ninfo.title =  cocos2d-x ;\ninfo.text  =  Best Game Engine ;\ninfo.image =  http://cocos2d-x.org/images/logo.png ;\nsdkbox.PluginFacebook.dialog(info);   \u4f60\u53ef\u4ee5\u5206\u4eab\u4e00\u4e2a\u56fe\u7247:   FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.share(info);   \u4f60\u8fd8\u53ef\u4ee5\u5206\u4eab\u56fe\u7247\uff0c\u540c\u65f6\u6587\u5b57\u6ce8\u89e3\u5b83\uff0c\u6bd4\u5982\uff1a   FBShareInfo info;\ninfo.type  = FB_PHOTO;\ninfo.title =  My Photo ;\ninfo.image = __path to image__;\nsdkbox.PluginFacebook.dialog(info);   \u867d\u7136\u767b\u9646\u4e86\uff0c\u4f60\u8fd8\u662f\u9700\u8981\u83b7\u53d6  read()  \u548c  publish()  \u6743\u9650\u624d\u80fd\u53d1\u5e03\u3002\u6bd4\u5982:   sdkbox.PluginFacebook.requestReadPermissions({FB_PERM_READ_USER_FRIENDS});\nsdkbox.PluginFacebook.requestPublishPermissions({FB_PERM_PUBLISH_POST});   \u5f53\u6240\u6709\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u6ce8\u9500\uff0c\u6bd4\u5982\uff1a   sdkbox.PluginFacebook.logout();  \u63a5\u6536 Facebook \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536 Facebook \u4e8b\u4ef6\uff0c\u5f53 Facebook \u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u4f60\u53ef\u4ee5\u505a\u76f8\u5e94\u7684\u5904\u7406   \u8bbe\u7f6e Facebook \u7684 \u76d1\u542c:   sdkbox.PluginFacebook:setListener(function(event)\n    print( PluginFacebook callback )\n    dump(event)\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/facebook/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginFacebook:init()   initialize the plugin instance.   sdkbox.PluginFacebook:login()   log in   sdkbox.PluginFacebook:requestReadPermissions(permissions)   log in with specific read permissions, conflict with publish permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook:requestPublishPermissions(permissions)   log in with specific public permissions\nhttps://developers.facebook.com/docs/facebook-login/permissions   sdkbox.PluginFacebook:logout()   log out   sdkbox.PluginFacebook:isLoggedIn()   Check whether the user logined or not   sdkbox.PluginFacebook:getUserID()   get UserID   sdkbox.PluginFacebook:getAccessToken()   get AccessToken   sdkbox.PluginFacebook:getPermissionList()   get permissoin list   sdkbox.PluginFacebook:share(info)   share   sdkbox.PluginFacebook:dialog(info)   open a dialog of Facebook app or WebDialog (dialog with photo only avaible with native Facebook app)   sdkbox.PluginFacebook:getSDKVersion()   return the version of Facebook SDK   sdkbox.PluginFacebook:api(path, method, params, tag)   use Facebook Open Graph api\nhttps://developers.facebook.com/docs/ios/graph   Listeners  onLogin(isLogin, error)  onSharedSuccess(message)  onSharedFailed(message)  onSharedCancel()  onAPI(key, jsonData)  onPermission(isLogin, error)", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/", 
            "text": "Flurry Analytics\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import flurryanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, optional)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728 \nFlurry Analytics ID\n\u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362 \nAPI KEY\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true\n}\n\n\n\n\nAndroid\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86 \nlocations\n, \npulse\n and \norigin\n \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLogEvent\n:true,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true,\n            \nLocationReport\n:true,\n            \nDefLocationLat\n:104.06,\n            \nDefLocationLon\n:30.67,\n            \nPulse\n:true,\n            \nOrigin\n:[\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n,\n                    \nOriginParams\n:{\n                        \nKey1\n:\nVal1\n,\n                        \nKey2\n:\nVal2\n,\n                        \nKey3\n:\nVal3\n\n                    }\n                },\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n\n                }\n            ]\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Flurry Analytics\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginFlurryAnalytics/PluginFlurryAnalytics.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFlurryAnalytics::init();\n     // start session\n     sdkbox::PluginFlurryAnalytics::startSession();\n}\n\n\n\n\n\u4f7f\u7528 Flurry Analytics\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528 \nlogevent\n:\n\n\nstd::string eventName = \ntest event1\n;\nsdkbox::PluginFlurryAnalytics::logEvent(eventName);\n\n\n\n\n\u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFlurry Analytics\n \u4e8b\u4ef6, \u786e\u5b9a Flurry \u4f1a\u8bdd\u662f\u5426\u521b\u5efa\u6210\u529f.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::FlurryAnalyticsListener\n\n\n\n\n#include \nPluginFlurryAnalytics/PluginFlurryAnalytics.h\n\nclass MyClass : public sdkbox::FlurryAnalyticsListener\n{\npublic:\n      void flurrySessionDidCreateWithInfo(std::map\nstd::string, std::string\n info);\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u6765\u5904\u7406\u56de\u8c03:\n\n\n\n\nsdkbox::PluginFlurryAnalytics::setListener(this);\n\n\n\n\n\u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)\n\n\n\u5f53\u4f60\u4e0d\u518d\u4f7f\u7528 \nFlurryAnalytics\n \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a \nFlurryAnalytics\n \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:\n\n\n// \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox::PluginFlurryAnalytics::endSession();\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic bool init ( ) ;\n\n\n\n\n\n\ninit plugin, must be first invoke\n\n\n\n\nstatic void setAppVersion ( const std::string \n version ) ;\n\n\n\n\n\n\nExplicitly specifies the App Version that Flurry will use to group Analytics data.\n\n\n\n\nstatic std::string getFlurryAgentVersion ( ) ;\n\n\n\n\n\n\nRetrieves the Flurry Agent Build Version.\n\n\n\n\nstatic void setShowErrorInLogEnabled ( bool value ) ;\n\n\n\n\n\n\nDisplays an exception in the debug log if thrown during a Session.\n\n\n\n\nstatic void setDebugLogEnabled ( bool value ) ;\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nstatic void setLogLevel ( FA_FlurryLogLevel value ) ;\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nstatic void setSessionContinueSeconds ( float seconds ) ;\n\n\n\n\n\n\nSet the timeout for expiring a Flurry session.\n\n\n\n\nstatic void setCrashReportingEnabled ( bool value ) ;\n\n\n\n\n\n\nEnable automatic collection of crash reports.\n\n\n\n\nstatic void startSession ( ) ;\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nstatic void endSession ( ) ;\n\n\n\n\n\n\nend session, just valid on android\n\n\n\n\nstatic bool activeSessionExists ( ) ;\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nstatic std::string getSessionID ( ) ;\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nstatic void pauseBackgroundSession ( ) ;\n\n\n\n\n\n\nPauses a Flurry session left running in background. on valid on ios\n\n\n\n\nstatic void addOrigin ( const std::string \n originName ,\n                        const std::string \n originVersion ) ;\n\n\n\n\n\n\nAdds an SDK origin specified by @c originName and @c originVersion.\n\n\n\n\nstatic void addOrigin ( const std::string \n originName ,\n                        const std::string \n originVersion ,\n                        std::map \nstd::string ,\n                        std::string\n \n parameters ) ;\n\n\n\n\n\n\nAdds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.\n\n\n\n\nstatic void addOrigin ( const std::string \n originName ,\n                        const std::string \n originVersion ,\n                        const std::string \n parameters ) ;\n\n\n\n\n\n\njust for lua, js binding, have the same function with addOrigin(string, string, map)\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ) ;\n\n\n\n\n\n\nRecords a custom event specified by @c eventName.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      std::map \nstd::string ,\n                      std::string\n \n parameters ) ;\n\n\n\n\n\n\nRecords a custom parameterized event specified by @c eventName with @c parameters.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      const std::string \n parameters ) ;\n\n\n\n\n\n\njust for lua, js binding, have same function with logEvent(string, map)\n\n\n\n\nstatic int logEvent ( const std::string \n eventName , bool timed ) ;\n\n\n\n\n\n\nRecords a timed event specified by @c eventName.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      std::map \nstd::string ,\n                      std::string\n \n parameters ,\n                      bool timed ) ;\n\n\n\n\n\n\nRecords a custom parameterized timed event specified by @c eventName with @c parameters.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      const std::string \n parameters ,\n                      bool timed ) ;\n\n\n\n\n\n\njust for lua, js binding, have the same function with logEvent(string, map, bool)\n\n\n\n\nstatic void endTimedEvent ( const std::string \n eventId ) ;\n\n\n\n\n\n\nEnd a timed event\n\n\n\n\nstatic void endTimedEvent ( const std::string \n eventName ,\n                            std::map \nstd::string ,\n                            std::string\n \n parameters ) ;\n\n\n\n\n\n\nEnds a timed event specified by @c eventName and optionally updates parameters with @c parameters.\n\n\n\n\nstatic void endTimedEvent ( const std::string \n eventName ,\n                            const std::string \n parameters ) ;\n\n\n\n\n\n\njust for lua, js binding, have same function with endTimeEvent(string, map)\n\n\n\n\nstatic void logError ( const std::string \n errorID ,\n                       const std::string \n message ,\n                       const std::string \n info ) ;\n\n\n\n\n\n\nRecords an app exception. Commonly used to catch unhandled exceptions.\n\n\n\n\nstatic void logPageView ( ) ;\n\n\n\n\n\n\nExplicitly track a page view during a session.\n\n\n\n\nstatic void setUserID ( const std::string \n userID ) ;\n\n\n\n\n\n\nAssign a unique id for a user in your app.\n\n\n\n\nstatic void setAge ( int age ) ;\n\n\n\n\n\n\nSet your user's age in years.\n\n\n\n\nstatic void setGender ( const std::string \n gender ) ;\n\n\n\n\n\n\nSet your user's gender.\n\n\n\n\n     static void setReportLocation ( bool reportLocation ) ;\n\n\n\n\n\n\nSet whether Flurry should record location via GPS. Defaults to true. valid on android\n\n\n\n\nstatic void setLatitude ( double latitude ,\n                          double longitude ,\n                          float horizontalAccuracy ,\n                          float verticalAccuracy ) ;\n\n\n\n\n\n\nSet the location of the session.\n\n\n\n\nstatic void clearLocation ( ) ;\n\n\n\n\n\n\nclear the default location.valid on andriod\n\n\n\n\nstatic void setSessionReportsOnCloseEnabled ( bool sendSessionReportsOnClose ) ;\n\n\n\n\n\n\nSet session to report when app closes.valid on ios\n\n\n\n\nstatic void setSessionReportsOnPauseEnabled ( bool setSessionReportsOnPauseEnabled ) ;\n\n\n\n\n\n\nSet session to report when app is sent to the background.valid on ios\n\n\n\n\nstatic void setBackgroundSessionEnabled ( bool setBackgroundSessionEnabled ) ;\n\n\n\n\n\n\nSet session to support background execution.valid on ios\n\n\n\n\nstatic void setEventLoggingEnabled ( bool value ) ;\n\n\n\n\n\n\nEnable custom event logging.\n\n\n\n\nstatic void setPulseEnabled ( bool value ) ;\n\n\n\n\n\n\nEnables Flurry Pulse\n\n\n\n\nstatic void setListener ( FlurryAnalyticsListener * listener ) ;\n\n\n\n\n\n\nset listener for session callback\n\n\n\n\nstatic FlurryAnalyticsListener * getListener ( ) ;\n\n\n\n\n\n\nget listener\n\n\n\n\nstatic void removeListener ( ) ;\n\n\n\n\n\n\nremove listener, just set null, will not delete it\n        the user should delete listener self\n\n\n\n\nListeners\n\n\nvoid flurrySessionDidCreateWithInfo ( std::map \nstd::string ,\n                                      std::string\n \n info );\n\n\n\n\n\n\nInvoked when analytics session is created,", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/#flurry-analytics", 
            "text": "", 
            "title": "Flurry Analytics"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import flurryanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, optional)   \u7f16\u8f91  project.properties  \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728  Flurry Analytics ID \u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362  API KEY .  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true\n}  Android\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86  locations ,  pulse  and  origin  \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             LogEvent :true,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true,\n             LocationReport :true,\n             DefLocationLat :104.06,\n             DefLocationLon :30.67,\n             Pulse :true,\n             Origin :[\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 ,\n                     OriginParams :{\n                         Key1 : Val1 ,\n                         Key2 : Val2 ,\n                         Key3 : Val3 \n                    }\n                },\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 \n                }\n            ]\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Flurry Analytics   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginFlurryAnalytics/PluginFlurryAnalytics.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFlurryAnalytics::init();\n     // start session\n     sdkbox::PluginFlurryAnalytics::startSession();\n}  \u4f7f\u7528 Flurry Analytics  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528  logevent :  std::string eventName =  test event1 ;\nsdkbox::PluginFlurryAnalytics::logEvent(eventName);  \u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Flurry Analytics  \u4e8b\u4ef6, \u786e\u5b9a Flurry \u4f1a\u8bdd\u662f\u5426\u521b\u5efa\u6210\u529f.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::FlurryAnalyticsListener   #include  PluginFlurryAnalytics/PluginFlurryAnalytics.h \nclass MyClass : public sdkbox::FlurryAnalyticsListener\n{\npublic:\n      void flurrySessionDidCreateWithInfo(std::map std::string, std::string  info);\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u6765\u5904\u7406\u56de\u8c03:   sdkbox::PluginFlurryAnalytics::setListener(this);  \u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)  \u5f53\u4f60\u4e0d\u518d\u4f7f\u7528  FlurryAnalytics  \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a  FlurryAnalytics  \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:  // \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox::PluginFlurryAnalytics::endSession();", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-cpp/#api-reference", 
            "text": "Methods  static bool init ( ) ;   init plugin, must be first invoke   static void setAppVersion ( const std::string   version ) ;   Explicitly specifies the App Version that Flurry will use to group Analytics data.   static std::string getFlurryAgentVersion ( ) ;   Retrieves the Flurry Agent Build Version.   static void setShowErrorInLogEnabled ( bool value ) ;   Displays an exception in the debug log if thrown during a Session.   static void setDebugLogEnabled ( bool value ) ;   Generates debug logs to console.   static void setLogLevel ( FA_FlurryLogLevel value ) ;   Generates debug logs to console.   static void setSessionContinueSeconds ( float seconds ) ;   Set the timeout for expiring a Flurry session.   static void setCrashReportingEnabled ( bool value ) ;   Enable automatic collection of crash reports.   static void startSession ( ) ;   Start a Flurry session for the project denoted by @c apiKey.   static void endSession ( ) ;   end session, just valid on android   static bool activeSessionExists ( ) ;   Start a Flurry session for the project denoted by @c apiKey.   static std::string getSessionID ( ) ;   Start a Flurry session for the project denoted by @c apiKey.   static void pauseBackgroundSession ( ) ;   Pauses a Flurry session left running in background. on valid on ios   static void addOrigin ( const std::string   originName ,\n                        const std::string   originVersion ) ;   Adds an SDK origin specified by @c originName and @c originVersion.   static void addOrigin ( const std::string   originName ,\n                        const std::string   originVersion ,\n                        std::map  std::string ,\n                        std::string    parameters ) ;   Adds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.   static void addOrigin ( const std::string   originName ,\n                        const std::string   originVersion ,\n                        const std::string   parameters ) ;   just for lua, js binding, have the same function with addOrigin(string, string, map)   static int logEvent ( const std::string   eventName ) ;   Records a custom event specified by @c eventName.   static int logEvent ( const std::string   eventName ,\n                      std::map  std::string ,\n                      std::string    parameters ) ;   Records a custom parameterized event specified by @c eventName with @c parameters.   static int logEvent ( const std::string   eventName ,\n                      const std::string   parameters ) ;   just for lua, js binding, have same function with logEvent(string, map)   static int logEvent ( const std::string   eventName , bool timed ) ;   Records a timed event specified by @c eventName.   static int logEvent ( const std::string   eventName ,\n                      std::map  std::string ,\n                      std::string    parameters ,\n                      bool timed ) ;   Records a custom parameterized timed event specified by @c eventName with @c parameters.   static int logEvent ( const std::string   eventName ,\n                      const std::string   parameters ,\n                      bool timed ) ;   just for lua, js binding, have the same function with logEvent(string, map, bool)   static void endTimedEvent ( const std::string   eventId ) ;   End a timed event   static void endTimedEvent ( const std::string   eventName ,\n                            std::map  std::string ,\n                            std::string    parameters ) ;   Ends a timed event specified by @c eventName and optionally updates parameters with @c parameters.   static void endTimedEvent ( const std::string   eventName ,\n                            const std::string   parameters ) ;   just for lua, js binding, have same function with endTimeEvent(string, map)   static void logError ( const std::string   errorID ,\n                       const std::string   message ,\n                       const std::string   info ) ;   Records an app exception. Commonly used to catch unhandled exceptions.   static void logPageView ( ) ;   Explicitly track a page view during a session.   static void setUserID ( const std::string   userID ) ;   Assign a unique id for a user in your app.   static void setAge ( int age ) ;   Set your user's age in years.   static void setGender ( const std::string   gender ) ;   Set your user's gender.        static void setReportLocation ( bool reportLocation ) ;   Set whether Flurry should record location via GPS. Defaults to true. valid on android   static void setLatitude ( double latitude ,\n                          double longitude ,\n                          float horizontalAccuracy ,\n                          float verticalAccuracy ) ;   Set the location of the session.   static void clearLocation ( ) ;   clear the default location.valid on andriod   static void setSessionReportsOnCloseEnabled ( bool sendSessionReportsOnClose ) ;   Set session to report when app closes.valid on ios   static void setSessionReportsOnPauseEnabled ( bool setSessionReportsOnPauseEnabled ) ;   Set session to report when app is sent to the background.valid on ios   static void setBackgroundSessionEnabled ( bool setBackgroundSessionEnabled ) ;   Set session to support background execution.valid on ios   static void setEventLoggingEnabled ( bool value ) ;   Enable custom event logging.   static void setPulseEnabled ( bool value ) ;   Enables Flurry Pulse   static void setListener ( FlurryAnalyticsListener * listener ) ;   set listener for session callback   static FlurryAnalyticsListener * getListener ( ) ;   get listener   static void removeListener ( ) ;   remove listener, just set null, will not delete it\n        the user should delete listener self   Listeners  void flurrySessionDidCreateWithInfo ( std::map  std::string ,\n                                      std::string    info );   Invoked when analytics session is created,", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/", 
            "text": "Flurry Analytics\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import flurryanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, optional)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728 \nFlurry Analytics ID\n\u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362 \nAPI KEY\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true\n}\n\n\n\n\nAndroid\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86 \nlocations\n, \npulse\n and \norigin\n \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLogEvent\n:true,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true,\n            \nLocationReport\n:true,\n            \nDefLocationLat\n:104.06,\n            \nDefLocationLon\n:30.67,\n            \nPulse\n:true,\n            \nOrigin\n:[\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n,\n                    \nOriginParams\n:{\n                        \nKey1\n:\nVal1\n,\n                        \nKey2\n:\nVal2\n,\n                        \nKey3\n:\nVal3\n\n                    }\n                },\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n\n                }\n            ]\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Flurry Analytics\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginFlurryAnalytics.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginFlurryAnalyticsJS.hpp\n\n#include \nPluginFlurryAnalyticsJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginFlurryAnalyticsJS);\nsc-\naddRegisterCallback(register_PluginFlurryAnalyticsJs_helper);\n\n\n\n\n\u4f7f\u7528 Flurry Analytics\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528 \nlogevent\n:\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(\ntest event2 js\n, JSON.stringify({\neKey1\n:\neVal1\n, \neKey2\n:\neVal2\n}));\n\n\n\n\n\u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFlurryAnalytics\n \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:\n\n\nsdkbox.PluginFlurryAnalytics.init();\nsdkbox.PluginFlurryAnalytics.setListener({\n    flurrySessionDidCreateWithInfo:function(info) {\n        var jsonInfo = JSON.parse(info)\n        console.log(\nsession started\n)\n        console.log(\nAPIKey :\n + jsonInfo.apiKey + \n session id :\n + jsonInfo.sessionId);\n        sdkbox.PluginFlurryAnalytics.logEvent(\ntest event2 js\n, JSON.stringify({\neKey1\n:\neVal1\n, \neKey2\n:\neVal2\n}));\n    }\n});\nsdkbox.PluginFlurryAnalytics.startSession();\n\n\n\n\n\u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)\n\n\n\u5f53\u4f60\u4e0d\u518d\u4f7f\u7528 \nFlurryAnalytics\n \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a \nFlurryAnalytics\n \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:\n\n\n// \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics.endSession();\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFlurryAnalytics.init();\n\n\n\n\n\n\ninit plugin, must be first invoke\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setAppVersion(version);\n\n\n\n\n\n\nExplicitly specifies the App Version that Flurry will use to group Analytics data.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.getFlurryAgentVersion();\n\n\n\n\n\n\nRetrieves the Flurry Agent Build Version.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setShowErrorInLogEnabled(value);\n\n\n\n\n\n\nDisplays an exception in the debug log if thrown during a Session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setDebugLogEnabled(value);\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setLogLevel(value);\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setSessionContinueSeconds(seconds);\n\n\n\n\n\n\nSet the timeout for expiring a Flurry session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setCrashReportingEnabled(value);\n\n\n\n\n\n\nEnable automatic collection of crash reports.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.startSession();\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endSession();\n\n\n\n\n\n\nend session, just valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics.activeSessionExists();\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.getSessionID();\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.pauseBackgroundSession();\n\n\n\n\n\n\nPauses a Flurry session left running in background. on valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion);\n\n\n\n\n\n\nAdds an SDK origin specified by @c originName and @c originVersion.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);\n\n\n\n\n\n\nAdds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);\n\n\n\n\n\n\njust for lua, js binding, have the same function with addOrigin(string, string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName);\n\n\n\n\n\n\nRecords a custom event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);\n\n\n\n\n\n\nRecords a custom parameterized event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);\n\n\n\n\n\n\njust for lua, js binding, have same function with logEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, timed);\n\n\n\n\n\n\nRecords a timed event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);\n\n\n\n\n\n\nRecords a custom parameterized timed event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);\n\n\n\n\n\n\njust for lua, js binding, have the same function with logEvent(string, map, bool)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endTimedEvent(eventId);\n\n\n\n\n\n\nEnd a timed event\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);\n\n\n\n\n\n\nEnds a timed event specified by @c eventName and optionally updates parameters with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);\n\n\n\n\n\n\njust for lua, js binding, have same function with endTimeEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logError(errorID, message, info);\n\n\n\n\n\n\nRecords an app exception. Commonly used to catch unhandled exceptions.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logPageView();\n\n\n\n\n\n\nExplicitly track a page view during a session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setUserID(userID);\n\n\n\n\n\n\nAssign a unique id for a user in your app.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setAge(age);\n\n\n\n\n\n\nSet your user's age in years.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setGender(gender);\n\n\n\n\n\n\nSet your user's gender.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setReportLocation(reportLocation);\n\n\n\n\n\n\nSet whether Flurry should record location via GPS. Defaults to true. valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy);\n\n\n\n\n\n\nSet the location of the session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.clearLocation();\n\n\n\n\n\n\nclear the default location.valid on andriod\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setSessionReportsOnCloseEnabled(sendSessionReportsOnClose);\n\n\n\n\n\n\nSet session to report when app closes.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled);\n\n\n\n\n\n\nSet session to report when app is sent to the background.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setBackgroundSessionEnabled(setBackgroundSessionEnabled);\n\n\n\n\n\n\nSet session to support background execution.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setEventLoggingEnabled(value);\n\n\n\n\n\n\nEnable custom event logging.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setPulseEnabled(value);\n\n\n\n\n\n\nEnables Flurry Pulse\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setListener(listener);\n\n\n\n\n\n\nset listener for session callback\n\n\n\n\nListeners\n\n\nflurrySessionDidCreateWithInfo(info);\n\n\n\n\n\n\nInvoked when analytics session is created,", 
            "title": "js"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/#flurry-analytics", 
            "text": "", 
            "title": "Flurry Analytics"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import flurryanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, optional)   \u7f16\u8f91  project.properties  \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728  Flurry Analytics ID \u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362  API KEY .  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true\n}  Android\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86  locations ,  pulse  and  origin  \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             LogEvent :true,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true,\n             LocationReport :true,\n             DefLocationLat :104.06,\n             DefLocationLon :30.67,\n             Pulse :true,\n             Origin :[\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 ,\n                     OriginParams :{\n                         Key1 : Val1 ,\n                         Key2 : Val2 ,\n                         Key3 : Val3 \n                    }\n                },\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 \n                }\n            ]\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 Flurry Analytics   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginFlurryAnalytics.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:   #include  PluginFlurryAnalyticsJS.hpp \n#include  PluginFlurryAnalyticsJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:   sc- addRegisterCallback(register_all_PluginFlurryAnalyticsJS);\nsc- addRegisterCallback(register_PluginFlurryAnalyticsJs_helper);  \u4f7f\u7528 Flurry Analytics  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528  logevent :  sdkbox.PluginFlurryAnalytics.logEvent( test event2 js , JSON.stringify({ eKey1 : eVal1 ,  eKey2 : eVal2 }));  \u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  FlurryAnalytics  \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:  sdkbox.PluginFlurryAnalytics.init();\nsdkbox.PluginFlurryAnalytics.setListener({\n    flurrySessionDidCreateWithInfo:function(info) {\n        var jsonInfo = JSON.parse(info)\n        console.log( session started )\n        console.log( APIKey :  + jsonInfo.apiKey +   session id :  + jsonInfo.sessionId);\n        sdkbox.PluginFlurryAnalytics.logEvent( test event2 js , JSON.stringify({ eKey1 : eVal1 ,  eKey2 : eVal2 }));\n    }\n});\nsdkbox.PluginFlurryAnalytics.startSession();  \u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)  \u5f53\u4f60\u4e0d\u518d\u4f7f\u7528  FlurryAnalytics  \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a  FlurryAnalytics  \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:  // \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics.endSession();", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginFlurryAnalytics.init();   init plugin, must be first invoke   sdkbox.PluginFlurryAnalytics.setAppVersion(version);   Explicitly specifies the App Version that Flurry will use to group Analytics data.   sdkbox.PluginFlurryAnalytics.getFlurryAgentVersion();   Retrieves the Flurry Agent Build Version.   sdkbox.PluginFlurryAnalytics.setShowErrorInLogEnabled(value);   Displays an exception in the debug log if thrown during a Session.   sdkbox.PluginFlurryAnalytics.setDebugLogEnabled(value);   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics.setLogLevel(value);   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics.setSessionContinueSeconds(seconds);   Set the timeout for expiring a Flurry session.   sdkbox.PluginFlurryAnalytics.setCrashReportingEnabled(value);   Enable automatic collection of crash reports.   sdkbox.PluginFlurryAnalytics.startSession();   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics.endSession();   end session, just valid on android   sdkbox.PluginFlurryAnalytics.activeSessionExists();   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics.getSessionID();   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics.pauseBackgroundSession();   Pauses a Flurry session left running in background. on valid on ios   sdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion);   Adds an SDK origin specified by @c originName and @c originVersion.   sdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);   Adds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.   sdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);   just for lua, js binding, have the same function with addOrigin(string, string, map)   sdkbox.PluginFlurryAnalytics.logEvent(eventName);   Records a custom event specified by @c eventName.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);   Records a custom parameterized event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);   just for lua, js binding, have same function with logEvent(string, map)   sdkbox.PluginFlurryAnalytics.logEvent(eventName, timed);   Records a timed event specified by @c eventName.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);   Records a custom parameterized timed event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);   just for lua, js binding, have the same function with logEvent(string, map, bool)   sdkbox.PluginFlurryAnalytics.endTimedEvent(eventId);   End a timed event   sdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);   Ends a timed event specified by @c eventName and optionally updates parameters with @c parameters.   sdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);   just for lua, js binding, have same function with endTimeEvent(string, map)   sdkbox.PluginFlurryAnalytics.logError(errorID, message, info);   Records an app exception. Commonly used to catch unhandled exceptions.   sdkbox.PluginFlurryAnalytics.logPageView();   Explicitly track a page view during a session.   sdkbox.PluginFlurryAnalytics.setUserID(userID);   Assign a unique id for a user in your app.   sdkbox.PluginFlurryAnalytics.setAge(age);   Set your user's age in years.   sdkbox.PluginFlurryAnalytics.setGender(gender);   Set your user's gender.   sdkbox.PluginFlurryAnalytics.setReportLocation(reportLocation);   Set whether Flurry should record location via GPS. Defaults to true. valid on android   sdkbox.PluginFlurryAnalytics.setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy);   Set the location of the session.   sdkbox.PluginFlurryAnalytics.clearLocation();   clear the default location.valid on andriod   sdkbox.PluginFlurryAnalytics.setSessionReportsOnCloseEnabled(sendSessionReportsOnClose);   Set session to report when app closes.valid on ios   sdkbox.PluginFlurryAnalytics.setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled);   Set session to report when app is sent to the background.valid on ios   sdkbox.PluginFlurryAnalytics.setBackgroundSessionEnabled(setBackgroundSessionEnabled);   Set session to support background execution.valid on ios   sdkbox.PluginFlurryAnalytics.setEventLoggingEnabled(value);   Enable custom event logging.   sdkbox.PluginFlurryAnalytics.setPulseEnabled(value);   Enables Flurry Pulse   sdkbox.PluginFlurryAnalytics.setListener(listener);   set listener for session callback   Listeners  flurrySessionDidCreateWithInfo(info);   Invoked when analytics session is created,", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/", 
            "text": "Flurry Analytics\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import flurryanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, optional)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728 \nFlurry Analytics ID\n\u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362 \nAPI KEY\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true\n}\n\n\n\n\nAndroid\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86 \nlocations\n, \npulse\n and \norigin\n \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLogEvent\n:true,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true,\n            \nLocationReport\n:true,\n            \nDefLocationLat\n:104.06,\n            \nDefLocationLon\n:30.67,\n            \nPulse\n:true,\n            \nOrigin\n:[\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n,\n                    \nOriginParams\n:{\n                        \nKey1\n:\nVal1\n,\n                        \nKey2\n:\nVal2\n,\n                        \nKey3\n:\nVal3\n\n                    }\n                },\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n\n                }\n            ]\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c \nFlurryAnalytics\n \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570 \nlua_State*\n:\n\n\n#include \nPluginFlurryAnalyticsLua.hpp\n\n#include \nPluginFlurryAnalyticsLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginFlurryAnalyticsLua(L);\n  register_PluginFlurryAnalyticsLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 Flurry Analytics\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginFlurryAnalytics:init()\n\n\n\n\n\u4f7f\u7528 Flurry Analytics\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528 \nlogevent\n:\n\n\nlocal eventName = \ntest event1\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName)\n\n\n\n\n\u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFlurryAnalytics\n \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:\n\n\nsdkbox.PluginFlurryAnalytics:init()\nsdkbox.PluginFlurryAnalytics:setListener(function(data)\n        local ret = json.decode(data)\n        print(\napiKey:\n, ret.apiKey, \nsessionId:\n, ret.sessionId)\n        -- check session state\n        print(\nFlurry analytics session exist: \n, f:activeSessionExists())\n        print(\nFlurry analytics session: \n, f:getSessionID())\n        local eventName = \ntest event1\n\n        sdkbox.PluginFlurryAnalytics:logEvent(eventName)\n    end)\nsdkbox.PluginFlurryAnalytics:startSession()\n\n\n\n\n\u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)\n\n\n\u5f53\u4f60\u4e0d\u518d\u4f7f\u7528 \nFlurryAnalytics\n \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a \nFlurryAnalytics\n \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:\n\n\n// \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics:endSession()\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFlurryAnalytics:init()\n\n\n\n\n\n\ninit plugin, must be first invoke\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setAppVersion(version)\n\n\n\n\n\n\nExplicitly specifies the App Version that Flurry will use to group Analytics data.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:getFlurryAgentVersion()\n\n\n\n\n\n\nRetrieves the Flurry Agent Build Version.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setShowErrorInLogEnabled(value)\n\n\n\n\n\n\nDisplays an exception in the debug log if thrown during a Session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setDebugLogEnabled(value)\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setLogLevel(value)\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setSessionContinueSeconds(seconds)\n\n\n\n\n\n\nSet the timeout for expiring a Flurry session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setCrashReportingEnabled(value)\n\n\n\n\n\n\nEnable automatic collection of crash reports.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:startSession()\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endSession()\n\n\n\n\n\n\nend session, just valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics:activeSessionExists()\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:getSessionID()\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:pauseBackgroundSession()\n\n\n\n\n\n\nPauses a Flurry session left running in background. on valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion)\n\n\n\n\n\n\nAdds an SDK origin specified by @c originName and @c originVersion.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)\n\n\n\n\n\n\nAdds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)\n\n\n\n\n\n\njust for lua, js binding, have the same function with addOrigin(string, string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName)\n\n\n\n\n\n\nRecords a custom event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)\n\n\n\n\n\n\nRecords a custom parameterized event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)\n\n\n\n\n\n\njust for lua, js binding, have same function with logEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, timed)\n\n\n\n\n\n\nRecords a timed event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)\n\n\n\n\n\n\nRecords a custom parameterized timed event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)\n\n\n\n\n\n\njust for lua, js binding, have the same function with logEvent(string, map, bool)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endTimedEvent(eventId)\n\n\n\n\n\n\nEnd a timed event\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)\n\n\n\n\n\n\nEnds a timed event specified by @c eventName and optionally updates parameters with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)\n\n\n\n\n\n\njust for lua, js binding, have same function with endTimeEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logError(errorID, message, info)\n\n\n\n\n\n\nRecords an app exception. Commonly used to catch unhandled exceptions.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logPageView()\n\n\n\n\n\n\nExplicitly track a page view during a session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setUserID(userID)\n\n\n\n\n\n\nAssign a unique id for a user in your app.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setAge(age)\n\n\n\n\n\n\nSet your user's age in years.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setGender(gender)\n\n\n\n\n\n\nSet your user's gender.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setReportLocation(reportLocation)\n\n\n\n\n\n\nSet whether Flurry should record location via GPS. Defaults to true. valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy)\n\n\n\n\n\n\nSet the location of the session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:clearLocation()\n\n\n\n\n\n\nclear the default location.valid on andriod\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setSessionReportsOnCloseEnabled(sendSessionReportsOnClose)\n\n\n\n\n\n\nSet session to report when app closes.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled)\n\n\n\n\n\n\nSet session to report when app is sent to the background.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setBackgroundSessionEnabled(setBackgroundSessionEnabled)\n\n\n\n\n\n\nSet session to support background execution.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setEventLoggingEnabled(value)\n\n\n\n\n\n\nEnable custom event logging.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setPulseEnabled(value)\n\n\n\n\n\n\nEnables Flurry Pulse\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setListener(listener)\n\n\n\n\n\n\nset listener for session callback\n\n\n\n\nListeners\n\n\nflurrySessionDidCreateWithInfo(info)\n\n\n\n\n\n\nInvoked when analytics session is created,", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/#flurry-analytics", 
            "text": "", 
            "title": "Flurry Analytics"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import flurryanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, optional)   \u7f16\u8f91  project.properties  \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728  Flurry Analytics ID \u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362  API KEY .  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true\n}  Android\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86  locations ,  pulse  and  origin  \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             LogEvent :true,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true,\n             LocationReport :true,\n             DefLocationLat :104.06,\n             DefLocationLon :30.67,\n             Pulse :true,\n             Origin :[\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 ,\n                     OriginParams :{\n                         Key1 : Val1 ,\n                         Key2 : Val2 ,\n                         Key3 : Val3 \n                    }\n                },\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 \n                }\n            ]\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u5305\u542b\u4e0b\u9762\u8fd9\u51e0\u4e2a\u5fc5\u8981\u7684\u5934\u6587\u4ef6,\u5e76\u6ce8\u518c  FlurryAnalytics  \u5230lua\u4e2d.\u6ce8\u610f\u4ed6\u4eec\u7684\u53c2\u6570  lua_State* :  #include  PluginFlurryAnalyticsLua.hpp \n#include  PluginFlurryAnalyticsLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginFlurryAnalyticsLua(L);\n  register_PluginFlurryAnalyticsLua_helper(L);\n}  \u521d\u59cb\u5316 Flurry Analytics  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginFlurryAnalytics:init()  \u4f7f\u7528 Flurry Analytics  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528  logevent :  local eventName =  test event1 \nsdkbox.PluginFlurryAnalytics:logEvent(eventName)  \u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  FlurryAnalytics  \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:  sdkbox.PluginFlurryAnalytics:init()\nsdkbox.PluginFlurryAnalytics:setListener(function(data)\n        local ret = json.decode(data)\n        print( apiKey: , ret.apiKey,  sessionId: , ret.sessionId)\n        -- check session state\n        print( Flurry analytics session exist:  , f:activeSessionExists())\n        print( Flurry analytics session:  , f:getSessionID())\n        local eventName =  test event1 \n        sdkbox.PluginFlurryAnalytics:logEvent(eventName)\n    end)\nsdkbox.PluginFlurryAnalytics:startSession()  \u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)  \u5f53\u4f60\u4e0d\u518d\u4f7f\u7528  FlurryAnalytics  \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a  FlurryAnalytics  \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:  // \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics:endSession()", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/flurryanalytics/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginFlurryAnalytics:init()   init plugin, must be first invoke   sdkbox.PluginFlurryAnalytics:setAppVersion(version)   Explicitly specifies the App Version that Flurry will use to group Analytics data.   sdkbox.PluginFlurryAnalytics:getFlurryAgentVersion()   Retrieves the Flurry Agent Build Version.   sdkbox.PluginFlurryAnalytics:setShowErrorInLogEnabled(value)   Displays an exception in the debug log if thrown during a Session.   sdkbox.PluginFlurryAnalytics:setDebugLogEnabled(value)   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics:setLogLevel(value)   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics:setSessionContinueSeconds(seconds)   Set the timeout for expiring a Flurry session.   sdkbox.PluginFlurryAnalytics:setCrashReportingEnabled(value)   Enable automatic collection of crash reports.   sdkbox.PluginFlurryAnalytics:startSession()   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics:endSession()   end session, just valid on android   sdkbox.PluginFlurryAnalytics:activeSessionExists()   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics:getSessionID()   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics:pauseBackgroundSession()   Pauses a Flurry session left running in background. on valid on ios   sdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion)   Adds an SDK origin specified by @c originName and @c originVersion.   sdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)   Adds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.   sdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)   just for lua, js binding, have the same function with addOrigin(string, string, map)   sdkbox.PluginFlurryAnalytics:logEvent(eventName)   Records a custom event specified by @c eventName.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)   Records a custom parameterized event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)   just for lua, js binding, have same function with logEvent(string, map)   sdkbox.PluginFlurryAnalytics:logEvent(eventName, timed)   Records a timed event specified by @c eventName.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)   Records a custom parameterized timed event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)   just for lua, js binding, have the same function with logEvent(string, map, bool)   sdkbox.PluginFlurryAnalytics:endTimedEvent(eventId)   End a timed event   sdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)   Ends a timed event specified by @c eventName and optionally updates parameters with @c parameters.   sdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)   just for lua, js binding, have same function with endTimeEvent(string, map)   sdkbox.PluginFlurryAnalytics:logError(errorID, message, info)   Records an app exception. Commonly used to catch unhandled exceptions.   sdkbox.PluginFlurryAnalytics:logPageView()   Explicitly track a page view during a session.   sdkbox.PluginFlurryAnalytics:setUserID(userID)   Assign a unique id for a user in your app.   sdkbox.PluginFlurryAnalytics:setAge(age)   Set your user's age in years.   sdkbox.PluginFlurryAnalytics:setGender(gender)   Set your user's gender.   sdkbox.PluginFlurryAnalytics:setReportLocation(reportLocation)   Set whether Flurry should record location via GPS. Defaults to true. valid on android   sdkbox.PluginFlurryAnalytics:setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy)   Set the location of the session.   sdkbox.PluginFlurryAnalytics:clearLocation()   clear the default location.valid on andriod   sdkbox.PluginFlurryAnalytics:setSessionReportsOnCloseEnabled(sendSessionReportsOnClose)   Set session to report when app closes.valid on ios   sdkbox.PluginFlurryAnalytics:setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled)   Set session to report when app is sent to the background.valid on ios   sdkbox.PluginFlurryAnalytics:setBackgroundSessionEnabled(setBackgroundSessionEnabled)   Set session to support background execution.valid on ios   sdkbox.PluginFlurryAnalytics:setEventLoggingEnabled(value)   Enable custom event logging.   sdkbox.PluginFlurryAnalytics:setPulseEnabled(value)   Enables Flurry Pulse   sdkbox.PluginFlurryAnalytics:setListener(listener)   set listener for session callback   Listeners  flurrySessionDidCreateWithInfo(info)   Invoked when analytics session is created,", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/", 
            "text": "Flurry Analytics\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import flurryanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, optional)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728 \nFlurry Analytics ID\n\u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362 \nAPI KEY\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true\n}\n\n\n\n\nAndroid\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86 \nlocations\n, \npulse\n and \norigin\n \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLogEvent\n:true,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true,\n            \nLocationReport\n:true,\n            \nDefLocationLat\n:104.06,\n            \nDefLocationLon\n:30.67,\n            \nPulse\n:true,\n            \nOrigin\n:[\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n,\n                    \nOriginParams\n:{\n                        \nKey1\n:\nVal1\n,\n                        \nKey2\n:\nVal2\n,\n                        \nKey3\n:\nVal3\n\n                    }\n                },\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n\n                }\n            ]\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Flurry Analytics\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728 \nAppDelegate::applicationDidFinishLaunching()\n \u6216 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginFlurryAnalytics/PluginFlurryAnalytics.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFlurryAnalytics::init();\n     // start session\n     sdkbox::PluginFlurryAnalytics::startSession();\n}\n\n\n\n\n\u4f7f\u7528 Flurry Analytics\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528 \nlogevent\n:\n\n\nstd::string eventName = \ntest event1\n;\nsdkbox::PluginFlurryAnalytics::logEvent(eventName);\n\n\n\n\n\u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFlurry Analytics\n \u4e8b\u4ef6, \u786e\u5b9a Flurry \u4f1a\u8bdd\u662f\u5426\u521b\u5efa\u6210\u529f.\n\n\n\n\n\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f \nsdkbox::FlurryAnalyticsListener\n\n\n\n\n#include \nPluginFlurryAnalytics/PluginFlurryAnalytics.h\n\nclass MyClass : public sdkbox::FlurryAnalyticsListener\n{\npublic:\n      void flurrySessionDidCreateWithInfo(std::map\nstd::string, std::string\n info);\n};\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u6765\u5904\u7406\u56de\u8c03:\n\n\n\n\nsdkbox::PluginFlurryAnalytics::setListener(this);\n\n\n\n\n\u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)\n\n\n\u5f53\u4f60\u4e0d\u518d\u4f7f\u7528 \nFlurryAnalytics\n \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a \nFlurryAnalytics\n \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:\n\n\n// \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox::PluginFlurryAnalytics::endSession();\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic bool init ( ) ;\n\n\n\n\n\n\ninit plugin, must be first invoke\n\n\n\n\nstatic void setAppVersion ( const std::string \n version ) ;\n\n\n\n\n\n\nExplicitly specifies the App Version that Flurry will use to group Analytics data.\n\n\n\n\nstatic std::string getFlurryAgentVersion ( ) ;\n\n\n\n\n\n\nRetrieves the Flurry Agent Build Version.\n\n\n\n\nstatic void setShowErrorInLogEnabled ( bool value ) ;\n\n\n\n\n\n\nDisplays an exception in the debug log if thrown during a Session.\n\n\n\n\nstatic void setDebugLogEnabled ( bool value ) ;\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nstatic void setLogLevel ( FA_FlurryLogLevel value ) ;\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nstatic void setSessionContinueSeconds ( float seconds ) ;\n\n\n\n\n\n\nSet the timeout for expiring a Flurry session.\n\n\n\n\nstatic void setCrashReportingEnabled ( bool value ) ;\n\n\n\n\n\n\nEnable automatic collection of crash reports.\n\n\n\n\nstatic void startSession ( ) ;\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nstatic void endSession ( ) ;\n\n\n\n\n\n\nend session, just valid on android\n\n\n\n\nstatic bool activeSessionExists ( ) ;\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nstatic std::string getSessionID ( ) ;\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nstatic void pauseBackgroundSession ( ) ;\n\n\n\n\n\n\nPauses a Flurry session left running in background. on valid on ios\n\n\n\n\nstatic void addOrigin ( const std::string \n originName ,\n                        const std::string \n originVersion ) ;\n\n\n\n\n\n\nAdds an SDK origin specified by @c originName and @c originVersion.\n\n\n\n\nstatic void addOrigin ( const std::string \n originName ,\n                        const std::string \n originVersion ,\n                        std::map \nstd::string ,\n                        std::string\n \n parameters ) ;\n\n\n\n\n\n\nAdds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.\n\n\n\n\nstatic void addOrigin ( const std::string \n originName ,\n                        const std::string \n originVersion ,\n                        const std::string \n parameters ) ;\n\n\n\n\n\n\njust for lua, js binding, have the same function with addOrigin(string, string, map)\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ) ;\n\n\n\n\n\n\nRecords a custom event specified by @c eventName.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      std::map \nstd::string ,\n                      std::string\n \n parameters ) ;\n\n\n\n\n\n\nRecords a custom parameterized event specified by @c eventName with @c parameters.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      const std::string \n parameters ) ;\n\n\n\n\n\n\njust for lua, js binding, have same function with logEvent(string, map)\n\n\n\n\nstatic int logEvent ( const std::string \n eventName , bool timed ) ;\n\n\n\n\n\n\nRecords a timed event specified by @c eventName.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      std::map \nstd::string ,\n                      std::string\n \n parameters ,\n                      bool timed ) ;\n\n\n\n\n\n\nRecords a custom parameterized timed event specified by @c eventName with @c parameters.\n\n\n\n\nstatic int logEvent ( const std::string \n eventName ,\n                      const std::string \n parameters ,\n                      bool timed ) ;\n\n\n\n\n\n\njust for lua, js binding, have the same function with logEvent(string, map, bool)\n\n\n\n\nstatic void endTimedEvent ( const std::string \n eventId ) ;\n\n\n\n\n\n\nEnd a timed event\n\n\n\n\nstatic void endTimedEvent ( const std::string \n eventName ,\n                            std::map \nstd::string ,\n                            std::string\n \n parameters ) ;\n\n\n\n\n\n\nEnds a timed event specified by @c eventName and optionally updates parameters with @c parameters.\n\n\n\n\nstatic void endTimedEvent ( const std::string \n eventName ,\n                            const std::string \n parameters ) ;\n\n\n\n\n\n\njust for lua, js binding, have same function with endTimeEvent(string, map)\n\n\n\n\nstatic void logError ( const std::string \n errorID ,\n                       const std::string \n message ,\n                       const std::string \n info ) ;\n\n\n\n\n\n\nRecords an app exception. Commonly used to catch unhandled exceptions.\n\n\n\n\nstatic void logPageView ( ) ;\n\n\n\n\n\n\nExplicitly track a page view during a session.\n\n\n\n\nstatic void setUserID ( const std::string \n userID ) ;\n\n\n\n\n\n\nAssign a unique id for a user in your app.\n\n\n\n\nstatic void setAge ( int age ) ;\n\n\n\n\n\n\nSet your user's age in years.\n\n\n\n\nstatic void setGender ( const std::string \n gender ) ;\n\n\n\n\n\n\nSet your user's gender.\n\n\n\n\n     static void setReportLocation ( bool reportLocation ) ;\n\n\n\n\n\n\nSet whether Flurry should record location via GPS. Defaults to true. valid on android\n\n\n\n\nstatic void setLatitude ( double latitude ,\n                          double longitude ,\n                          float horizontalAccuracy ,\n                          float verticalAccuracy ) ;\n\n\n\n\n\n\nSet the location of the session.\n\n\n\n\nstatic void clearLocation ( ) ;\n\n\n\n\n\n\nclear the default location.valid on andriod\n\n\n\n\nstatic void setSessionReportsOnCloseEnabled ( bool sendSessionReportsOnClose ) ;\n\n\n\n\n\n\nSet session to report when app closes.valid on ios\n\n\n\n\nstatic void setSessionReportsOnPauseEnabled ( bool setSessionReportsOnPauseEnabled ) ;\n\n\n\n\n\n\nSet session to report when app is sent to the background.valid on ios\n\n\n\n\nstatic void setBackgroundSessionEnabled ( bool setBackgroundSessionEnabled ) ;\n\n\n\n\n\n\nSet session to support background execution.valid on ios\n\n\n\n\nstatic void setEventLoggingEnabled ( bool value ) ;\n\n\n\n\n\n\nEnable custom event logging.\n\n\n\n\nstatic void setPulseEnabled ( bool value ) ;\n\n\n\n\n\n\nEnables Flurry Pulse\n\n\n\n\nstatic void setListener ( FlurryAnalyticsListener * listener ) ;\n\n\n\n\n\n\nset listener for session callback\n\n\n\n\nstatic FlurryAnalyticsListener * getListener ( ) ;\n\n\n\n\n\n\nget listener\n\n\n\n\nstatic void removeListener ( ) ;\n\n\n\n\n\n\nremove listener, just set null, will not delete it\n        the user should delete listener self\n\n\n\n\nListeners\n\n\nvoid flurrySessionDidCreateWithInfo ( std::map \nstd::string ,\n                                      std::string\n \n info );\n\n\n\n\n\n\nInvoked when analytics session is created,", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/#flurry-analytics", 
            "text": "", 
            "title": "Flurry Analytics"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import flurryanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, optional)   \u7f16\u8f91  project.properties  \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728  Flurry Analytics ID \u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362  API KEY .  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true\n}  Android\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86  locations ,  pulse  and  origin  \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             LogEvent :true,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true,\n             LocationReport :true,\n             DefLocationLat :104.06,\n             DefLocationLon :30.67,\n             Pulse :true,\n             Origin :[\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 ,\n                     OriginParams :{\n                         Key1 : Val1 ,\n                         Key2 : Val2 ,\n                         Key3 : Val3 \n                    }\n                },\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 \n                }\n            ]\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Flurry Analytics   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6, \u6211\u4eec\u5efa\u8bae\u4f60\u5728  AppDelegate::applicationDidFinishLaunching()  \u6216  AppController:didFinishLaunchingWithOptions()  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316. \u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u5bf9\u5e94\u7684\u5934\u6587\u4ef6:   #include  PluginFlurryAnalytics/PluginFlurryAnalytics.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginFlurryAnalytics::init();\n     // start session\n     sdkbox::PluginFlurryAnalytics::startSession();\n}  \u4f7f\u7528 Flurry Analytics  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528  logevent :  std::string eventName =  test event1 ;\nsdkbox::PluginFlurryAnalytics::logEvent(eventName);  \u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  Flurry Analytics  \u4e8b\u4ef6, \u786e\u5b9a Flurry \u4f1a\u8bdd\u662f\u5426\u521b\u5efa\u6210\u529f.   \u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f  sdkbox::FlurryAnalyticsListener   #include  PluginFlurryAnalytics/PluginFlurryAnalytics.h \nclass MyClass : public sdkbox::FlurryAnalyticsListener\n{\npublic:\n      void flurrySessionDidCreateWithInfo(std::map std::string, std::string  info);\n};   \u521b\u5efa\u4e00\u4e2a  listener  \u6765\u5904\u7406\u56de\u8c03:   sdkbox::PluginFlurryAnalytics::setListener(this);  \u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)  \u5f53\u4f60\u4e0d\u518d\u4f7f\u7528  FlurryAnalytics  \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a  FlurryAnalytics  \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:  // \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox::PluginFlurryAnalytics::endSession();", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-cpp/#api-reference", 
            "text": "Methods  static bool init ( ) ;   init plugin, must be first invoke   static void setAppVersion ( const std::string   version ) ;   Explicitly specifies the App Version that Flurry will use to group Analytics data.   static std::string getFlurryAgentVersion ( ) ;   Retrieves the Flurry Agent Build Version.   static void setShowErrorInLogEnabled ( bool value ) ;   Displays an exception in the debug log if thrown during a Session.   static void setDebugLogEnabled ( bool value ) ;   Generates debug logs to console.   static void setLogLevel ( FA_FlurryLogLevel value ) ;   Generates debug logs to console.   static void setSessionContinueSeconds ( float seconds ) ;   Set the timeout for expiring a Flurry session.   static void setCrashReportingEnabled ( bool value ) ;   Enable automatic collection of crash reports.   static void startSession ( ) ;   Start a Flurry session for the project denoted by @c apiKey.   static void endSession ( ) ;   end session, just valid on android   static bool activeSessionExists ( ) ;   Start a Flurry session for the project denoted by @c apiKey.   static std::string getSessionID ( ) ;   Start a Flurry session for the project denoted by @c apiKey.   static void pauseBackgroundSession ( ) ;   Pauses a Flurry session left running in background. on valid on ios   static void addOrigin ( const std::string   originName ,\n                        const std::string   originVersion ) ;   Adds an SDK origin specified by @c originName and @c originVersion.   static void addOrigin ( const std::string   originName ,\n                        const std::string   originVersion ,\n                        std::map  std::string ,\n                        std::string    parameters ) ;   Adds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.   static void addOrigin ( const std::string   originName ,\n                        const std::string   originVersion ,\n                        const std::string   parameters ) ;   just for lua, js binding, have the same function with addOrigin(string, string, map)   static int logEvent ( const std::string   eventName ) ;   Records a custom event specified by @c eventName.   static int logEvent ( const std::string   eventName ,\n                      std::map  std::string ,\n                      std::string    parameters ) ;   Records a custom parameterized event specified by @c eventName with @c parameters.   static int logEvent ( const std::string   eventName ,\n                      const std::string   parameters ) ;   just for lua, js binding, have same function with logEvent(string, map)   static int logEvent ( const std::string   eventName , bool timed ) ;   Records a timed event specified by @c eventName.   static int logEvent ( const std::string   eventName ,\n                      std::map  std::string ,\n                      std::string    parameters ,\n                      bool timed ) ;   Records a custom parameterized timed event specified by @c eventName with @c parameters.   static int logEvent ( const std::string   eventName ,\n                      const std::string   parameters ,\n                      bool timed ) ;   just for lua, js binding, have the same function with logEvent(string, map, bool)   static void endTimedEvent ( const std::string   eventId ) ;   End a timed event   static void endTimedEvent ( const std::string   eventName ,\n                            std::map  std::string ,\n                            std::string    parameters ) ;   Ends a timed event specified by @c eventName and optionally updates parameters with @c parameters.   static void endTimedEvent ( const std::string   eventName ,\n                            const std::string   parameters ) ;   just for lua, js binding, have same function with endTimeEvent(string, map)   static void logError ( const std::string   errorID ,\n                       const std::string   message ,\n                       const std::string   info ) ;   Records an app exception. Commonly used to catch unhandled exceptions.   static void logPageView ( ) ;   Explicitly track a page view during a session.   static void setUserID ( const std::string   userID ) ;   Assign a unique id for a user in your app.   static void setAge ( int age ) ;   Set your user's age in years.   static void setGender ( const std::string   gender ) ;   Set your user's gender.        static void setReportLocation ( bool reportLocation ) ;   Set whether Flurry should record location via GPS. Defaults to true. valid on android   static void setLatitude ( double latitude ,\n                          double longitude ,\n                          float horizontalAccuracy ,\n                          float verticalAccuracy ) ;   Set the location of the session.   static void clearLocation ( ) ;   clear the default location.valid on andriod   static void setSessionReportsOnCloseEnabled ( bool sendSessionReportsOnClose ) ;   Set session to report when app closes.valid on ios   static void setSessionReportsOnPauseEnabled ( bool setSessionReportsOnPauseEnabled ) ;   Set session to report when app is sent to the background.valid on ios   static void setBackgroundSessionEnabled ( bool setBackgroundSessionEnabled ) ;   Set session to support background execution.valid on ios   static void setEventLoggingEnabled ( bool value ) ;   Enable custom event logging.   static void setPulseEnabled ( bool value ) ;   Enables Flurry Pulse   static void setListener ( FlurryAnalyticsListener * listener ) ;   set listener for session callback   static FlurryAnalyticsListener * getListener ( ) ;   get listener   static void removeListener ( ) ;   remove listener, just set null, will not delete it\n        the user should delete listener self   Listeners  void flurrySessionDidCreateWithInfo ( std::map  std::string ,\n                                      std::string    info );   Invoked when analytics session is created,", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/", 
            "text": "Flurry Analytics\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import flurryanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, optional)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728 \nFlurry Analytics ID\n\u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362 \nAPI KEY\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true\n}\n\n\n\n\nAndroid\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86 \nlocations\n, \npulse\n and \norigin\n \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLogEvent\n:true,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true,\n            \nLocationReport\n:true,\n            \nDefLocationLat\n:104.06,\n            \nDefLocationLon\n:30.67,\n            \nPulse\n:true,\n            \nOrigin\n:[\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n,\n                    \nOriginParams\n:{\n                        \nKey1\n:\nVal1\n,\n                        \nKey2\n:\nVal2\n,\n                        \nKey3\n:\nVal3\n\n                    }\n                },\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n\n                }\n            ]\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 Flurry Analytics\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n, \u6211\u4eec\u5efa\u8bae\u5728 \napp.js\n \u521d\u59cb\u5316,\u6bd4\u5982:\n\n\n\n\nsdkbox.PluginFlurryAnalytics.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginFlurryAnalyticsJS.hpp\n\n#include \nPluginFlurryAnalyticsJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginFlurryAnalyticsJS);\nsc-\naddRegisterCallback(register_PluginFlurryAnalyticsJs_helper);\n\n\n\n\n\u4f7f\u7528 Flurry Analytics\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528 \nlogevent\n:\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(\ntest event2 js\n, JSON.stringify({\neKey1\n:\neVal1\n, \neKey2\n:\neVal2\n}));\n\n\n\n\n\u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFlurryAnalytics\n \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:\n\n\nsdkbox.PluginFlurryAnalytics.init();\nsdkbox.PluginFlurryAnalytics.setListener({\n    flurrySessionDidCreateWithInfo:function(info) {\n        var jsonInfo = JSON.parse(info)\n        console.log(\nsession started\n)\n        console.log(\nAPIKey :\n + jsonInfo.apiKey + \n session id :\n + jsonInfo.sessionId);\n        sdkbox.PluginFlurryAnalytics.logEvent(\ntest event2 js\n, JSON.stringify({\neKey1\n:\neVal1\n, \neKey2\n:\neVal2\n}));\n    }\n});\nsdkbox.PluginFlurryAnalytics.startSession();\n\n\n\n\n\u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)\n\n\n\u5f53\u4f60\u4e0d\u518d\u4f7f\u7528 \nFlurryAnalytics\n \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a \nFlurryAnalytics\n \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:\n\n\n// \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics.endSession();\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFlurryAnalytics.init();\n\n\n\n\n\n\ninit plugin, must be first invoke\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setAppVersion(version);\n\n\n\n\n\n\nExplicitly specifies the App Version that Flurry will use to group Analytics data.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.getFlurryAgentVersion();\n\n\n\n\n\n\nRetrieves the Flurry Agent Build Version.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setShowErrorInLogEnabled(value);\n\n\n\n\n\n\nDisplays an exception in the debug log if thrown during a Session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setDebugLogEnabled(value);\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setLogLevel(value);\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setSessionContinueSeconds(seconds);\n\n\n\n\n\n\nSet the timeout for expiring a Flurry session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setCrashReportingEnabled(value);\n\n\n\n\n\n\nEnable automatic collection of crash reports.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.startSession();\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endSession();\n\n\n\n\n\n\nend session, just valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics.activeSessionExists();\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.getSessionID();\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.pauseBackgroundSession();\n\n\n\n\n\n\nPauses a Flurry session left running in background. on valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion);\n\n\n\n\n\n\nAdds an SDK origin specified by @c originName and @c originVersion.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);\n\n\n\n\n\n\nAdds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);\n\n\n\n\n\n\njust for lua, js binding, have the same function with addOrigin(string, string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName);\n\n\n\n\n\n\nRecords a custom event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);\n\n\n\n\n\n\nRecords a custom parameterized event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);\n\n\n\n\n\n\njust for lua, js binding, have same function with logEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, timed);\n\n\n\n\n\n\nRecords a timed event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);\n\n\n\n\n\n\nRecords a custom parameterized timed event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);\n\n\n\n\n\n\njust for lua, js binding, have the same function with logEvent(string, map, bool)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endTimedEvent(eventId);\n\n\n\n\n\n\nEnd a timed event\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);\n\n\n\n\n\n\nEnds a timed event specified by @c eventName and optionally updates parameters with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);\n\n\n\n\n\n\njust for lua, js binding, have same function with endTimeEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logError(errorID, message, info);\n\n\n\n\n\n\nRecords an app exception. Commonly used to catch unhandled exceptions.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.logPageView();\n\n\n\n\n\n\nExplicitly track a page view during a session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setUserID(userID);\n\n\n\n\n\n\nAssign a unique id for a user in your app.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setAge(age);\n\n\n\n\n\n\nSet your user's age in years.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setGender(gender);\n\n\n\n\n\n\nSet your user's gender.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setReportLocation(reportLocation);\n\n\n\n\n\n\nSet whether Flurry should record location via GPS. Defaults to true. valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy);\n\n\n\n\n\n\nSet the location of the session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.clearLocation();\n\n\n\n\n\n\nclear the default location.valid on andriod\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setSessionReportsOnCloseEnabled(sendSessionReportsOnClose);\n\n\n\n\n\n\nSet session to report when app closes.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled);\n\n\n\n\n\n\nSet session to report when app is sent to the background.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setBackgroundSessionEnabled(setBackgroundSessionEnabled);\n\n\n\n\n\n\nSet session to support background execution.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setEventLoggingEnabled(value);\n\n\n\n\n\n\nEnable custom event logging.\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setPulseEnabled(value);\n\n\n\n\n\n\nEnables Flurry Pulse\n\n\n\n\nsdkbox.PluginFlurryAnalytics.setListener(listener);\n\n\n\n\n\n\nset listener for session callback\n\n\n\n\nListeners\n\n\nflurrySessionDidCreateWithInfo(info);\n\n\n\n\n\n\nInvoked when analytics session is created,", 
            "title": "js"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/#flurry-analytics", 
            "text": "", 
            "title": "Flurry Analytics"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import flurryanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, optional)   \u7f16\u8f91  project.properties  \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728  Flurry Analytics ID \u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362  API KEY .  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true\n}  Android\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86  locations ,  pulse  and  origin  \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             LogEvent :true,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true,\n             LocationReport :true,\n             DefLocationLat :104.06,\n             DefLocationLon :30.67,\n             Pulse :true,\n             Origin :[\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 ,\n                     OriginParams :{\n                         Key1 : Val1 ,\n                         Key2 : Val2 ,\n                         Key3 : Val3 \n                    }\n                },\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 \n                }\n            ]\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 Flurry Analytics   \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init() , \u6211\u4eec\u5efa\u8bae\u5728  app.js  \u521d\u59cb\u5316,\u6bd4\u5982:   sdkbox.PluginFlurryAnalytics.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:   #include  PluginFlurryAnalyticsJS.hpp \n#include  PluginFlurryAnalyticsJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u8c03\u7528\u4ee5\u4e0b\u51fd\u6570:   sc- addRegisterCallback(register_all_PluginFlurryAnalyticsJS);\nsc- addRegisterCallback(register_PluginFlurryAnalyticsJs_helper);  \u4f7f\u7528 Flurry Analytics  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528  logevent :  sdkbox.PluginFlurryAnalytics.logEvent( test event2 js , JSON.stringify({ eKey1 : eVal1 ,  eKey2 : eVal2 }));  \u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  FlurryAnalytics  \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:  sdkbox.PluginFlurryAnalytics.init();\nsdkbox.PluginFlurryAnalytics.setListener({\n    flurrySessionDidCreateWithInfo:function(info) {\n        var jsonInfo = JSON.parse(info)\n        console.log( session started )\n        console.log( APIKey :  + jsonInfo.apiKey +   session id :  + jsonInfo.sessionId);\n        sdkbox.PluginFlurryAnalytics.logEvent( test event2 js , JSON.stringify({ eKey1 : eVal1 ,  eKey2 : eVal2 }));\n    }\n});\nsdkbox.PluginFlurryAnalytics.startSession();  \u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)  \u5f53\u4f60\u4e0d\u518d\u4f7f\u7528  FlurryAnalytics  \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a  FlurryAnalytics  \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:  // \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics.endSession();", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginFlurryAnalytics.init();   init plugin, must be first invoke   sdkbox.PluginFlurryAnalytics.setAppVersion(version);   Explicitly specifies the App Version that Flurry will use to group Analytics data.   sdkbox.PluginFlurryAnalytics.getFlurryAgentVersion();   Retrieves the Flurry Agent Build Version.   sdkbox.PluginFlurryAnalytics.setShowErrorInLogEnabled(value);   Displays an exception in the debug log if thrown during a Session.   sdkbox.PluginFlurryAnalytics.setDebugLogEnabled(value);   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics.setLogLevel(value);   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics.setSessionContinueSeconds(seconds);   Set the timeout for expiring a Flurry session.   sdkbox.PluginFlurryAnalytics.setCrashReportingEnabled(value);   Enable automatic collection of crash reports.   sdkbox.PluginFlurryAnalytics.startSession();   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics.endSession();   end session, just valid on android   sdkbox.PluginFlurryAnalytics.activeSessionExists();   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics.getSessionID();   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics.pauseBackgroundSession();   Pauses a Flurry session left running in background. on valid on ios   sdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion);   Adds an SDK origin specified by @c originName and @c originVersion.   sdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);   Adds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.   sdkbox.PluginFlurryAnalytics.addOrigin(originName, originVersion, parameters);   just for lua, js binding, have the same function with addOrigin(string, string, map)   sdkbox.PluginFlurryAnalytics.logEvent(eventName);   Records a custom event specified by @c eventName.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);   Records a custom parameterized event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters);   just for lua, js binding, have same function with logEvent(string, map)   sdkbox.PluginFlurryAnalytics.logEvent(eventName, timed);   Records a timed event specified by @c eventName.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);   Records a custom parameterized timed event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics.logEvent(eventName, parameters, timed);   just for lua, js binding, have the same function with logEvent(string, map, bool)   sdkbox.PluginFlurryAnalytics.endTimedEvent(eventId);   End a timed event   sdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);   Ends a timed event specified by @c eventName and optionally updates parameters with @c parameters.   sdkbox.PluginFlurryAnalytics.endTimedEvent(eventName, parameters);   just for lua, js binding, have same function with endTimeEvent(string, map)   sdkbox.PluginFlurryAnalytics.logError(errorID, message, info);   Records an app exception. Commonly used to catch unhandled exceptions.   sdkbox.PluginFlurryAnalytics.logPageView();   Explicitly track a page view during a session.   sdkbox.PluginFlurryAnalytics.setUserID(userID);   Assign a unique id for a user in your app.   sdkbox.PluginFlurryAnalytics.setAge(age);   Set your user's age in years.   sdkbox.PluginFlurryAnalytics.setGender(gender);   Set your user's gender.   sdkbox.PluginFlurryAnalytics.setReportLocation(reportLocation);   Set whether Flurry should record location via GPS. Defaults to true. valid on android   sdkbox.PluginFlurryAnalytics.setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy);   Set the location of the session.   sdkbox.PluginFlurryAnalytics.clearLocation();   clear the default location.valid on andriod   sdkbox.PluginFlurryAnalytics.setSessionReportsOnCloseEnabled(sendSessionReportsOnClose);   Set session to report when app closes.valid on ios   sdkbox.PluginFlurryAnalytics.setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled);   Set session to report when app is sent to the background.valid on ios   sdkbox.PluginFlurryAnalytics.setBackgroundSessionEnabled(setBackgroundSessionEnabled);   Set session to support background execution.valid on ios   sdkbox.PluginFlurryAnalytics.setEventLoggingEnabled(value);   Enable custom event logging.   sdkbox.PluginFlurryAnalytics.setPulseEnabled(value);   Enables Flurry Pulse   sdkbox.PluginFlurryAnalytics.setListener(listener);   set listener for session callback   Listeners  flurrySessionDidCreateWithInfo(info);   Invoked when analytics session is created,", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/", 
            "text": "Flurry Analytics\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import flurryanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u6df7\u6dc6 (release, optional)\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:\n\n\n\n\n-dontwarn android.webkit.**\n\n\n\n\n\u6ce8\u610f:\n \u6df7\u6dc6\u53ea\u5728 \nRelease\n \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e \ncocos run -m release\n) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 \nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728 \nFlurry Analytics ID\n\u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362 \nAPI KEY\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true\n}\n\n\n\n\nAndroid\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86 \nlocations\n, \npulse\n and \norigin\n \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\nFlurryAnalytics\n:{\n            \nAPIKey\n:\nAPI KEY\n,\n            \nAppVersion\n:\nV0.1\n,\n            \nDebug\n:false,\n            \nLogEvent\n:true,\n            \nLevel\n:2,\n            \nSessionTimeout\n:10,\n            \nCrashReport\n:true,\n            \nLocationReport\n:true,\n            \nDefLocationLat\n:104.06,\n            \nDefLocationLon\n:30.67,\n            \nPulse\n:true,\n            \nOrigin\n:[\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n,\n                    \nOriginParams\n:{\n                        \nKey1\n:\nVal1\n,\n                        \nKey2\n:\nVal2\n,\n                        \nKey3\n:\nVal3\n\n                    }\n                },\n                {\n                    \nOriginName\n:\nsdkbox\n,\n                    \nOriginVersion\n:\nv0.1\n\n                }\n            ]\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginFlurryAnalyticsLua.hpp\n\n#include \nPluginFlurryAnalyticsLuaHelper.h\n\n\n\n\n\n\n\n\u7136\u540e,\u6211\u4eec\u9700\u8981\u8c03\u7528 \nregister_all_PluginFlurryAnalyticsLua(\nlua_State*\n);\n \u6765\u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.\n\n\n\n\n\u6ce8\u610f:\n \u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e, \u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u8c03\u7528\u4e0a\u9762\u7684\u6ce8\u518c\u51fd\u6570.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:\n\n\n\n#include \nPluginFlurryAnalyticsLua.hpp\n\n#include \nPluginFlurryAnalyticsLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginFlurryAnalyticsLua(tolua_s);\n    register_all_PluginFlurryAnalyticsLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Flurry Analytics\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.\n\n\nsdkbox.PluginFlurryAnalytics:init()\n\n\n\n\n\u4f7f\u7528 Flurry Analytics\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528 \nlogevent\n:\n\n\nlocal eventName = \ntest event1\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName)\n\n\n\n\n\u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nFlurryAnalytics\n \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:\n\n\nsdkbox.PluginFlurryAnalytics:init()\nsdkbox.PluginFlurryAnalytics:setListener(function(data)\n        local ret = json.decode(data)\n        print(\napiKey:\n, ret.apiKey, \nsessionId:\n, ret.sessionId)\n        -- check session state\n        print(\nFlurry analytics session exist: \n, f:activeSessionExists())\n        print(\nFlurry analytics session: \n, f:getSessionID())\n        local eventName = \ntest event1\n\n        sdkbox.PluginFlurryAnalytics:logEvent(eventName);\n    end)\nsdkbox.PluginFlurryAnalytics:startSession()\n\n\n\n\n\u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)\n\n\n\u5f53\u4f60\u4e0d\u518d\u4f7f\u7528 \nFlurryAnalytics\n \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a \nFlurryAnalytics\n \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:\n\n\n// \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics:endSession()\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginFlurryAnalytics:init()\n\n\n\n\n\n\ninit plugin, must be first invoke\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setAppVersion(version)\n\n\n\n\n\n\nExplicitly specifies the App Version that Flurry will use to group Analytics data.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:getFlurryAgentVersion()\n\n\n\n\n\n\nRetrieves the Flurry Agent Build Version.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setShowErrorInLogEnabled(value)\n\n\n\n\n\n\nDisplays an exception in the debug log if thrown during a Session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setDebugLogEnabled(value)\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setLogLevel(value)\n\n\n\n\n\n\nGenerates debug logs to console.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setSessionContinueSeconds(seconds)\n\n\n\n\n\n\nSet the timeout for expiring a Flurry session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setCrashReportingEnabled(value)\n\n\n\n\n\n\nEnable automatic collection of crash reports.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:startSession()\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endSession()\n\n\n\n\n\n\nend session, just valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics:activeSessionExists()\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:getSessionID()\n\n\n\n\n\n\nStart a Flurry session for the project denoted by @c apiKey.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:pauseBackgroundSession()\n\n\n\n\n\n\nPauses a Flurry session left running in background. on valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion)\n\n\n\n\n\n\nAdds an SDK origin specified by @c originName and @c originVersion.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)\n\n\n\n\n\n\nAdds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)\n\n\n\n\n\n\njust for lua, js binding, have the same function with addOrigin(string, string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName)\n\n\n\n\n\n\nRecords a custom event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)\n\n\n\n\n\n\nRecords a custom parameterized event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)\n\n\n\n\n\n\njust for lua, js binding, have same function with logEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, timed)\n\n\n\n\n\n\nRecords a timed event specified by @c eventName.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)\n\n\n\n\n\n\nRecords a custom parameterized timed event specified by @c eventName with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)\n\n\n\n\n\n\njust for lua, js binding, have the same function with logEvent(string, map, bool)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endTimedEvent(eventId)\n\n\n\n\n\n\nEnd a timed event\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)\n\n\n\n\n\n\nEnds a timed event specified by @c eventName and optionally updates parameters with @c parameters.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)\n\n\n\n\n\n\njust for lua, js binding, have same function with endTimeEvent(string, map)\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logError(errorID, message, info)\n\n\n\n\n\n\nRecords an app exception. Commonly used to catch unhandled exceptions.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:logPageView()\n\n\n\n\n\n\nExplicitly track a page view during a session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setUserID(userID)\n\n\n\n\n\n\nAssign a unique id for a user in your app.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setAge(age)\n\n\n\n\n\n\nSet your user's age in years.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setGender(gender)\n\n\n\n\n\n\nSet your user's gender.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setReportLocation(reportLocation)\n\n\n\n\n\n\nSet whether Flurry should record location via GPS. Defaults to true. valid on android\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy)\n\n\n\n\n\n\nSet the location of the session.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:clearLocation()\n\n\n\n\n\n\nclear the default location.valid on andriod\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setSessionReportsOnCloseEnabled(sendSessionReportsOnClose)\n\n\n\n\n\n\nSet session to report when app closes.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled)\n\n\n\n\n\n\nSet session to report when app is sent to the background.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setBackgroundSessionEnabled(setBackgroundSessionEnabled)\n\n\n\n\n\n\nSet session to support background execution.valid on ios\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setEventLoggingEnabled(value)\n\n\n\n\n\n\nEnable custom event logging.\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setPulseEnabled(value)\n\n\n\n\n\n\nEnables Flurry Pulse\n\n\n\n\nsdkbox.PluginFlurryAnalytics:setListener(listener)\n\n\n\n\n\n\nset listener for session callback\n\n\n\n\nListeners\n\n\nflurrySessionDidCreateWithInfo(info)\n\n\n\n\n\n\nInvoked when analytics session is created,", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/#flurry-analytics", 
            "text": "", 
            "title": "Flurry Analytics"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/#_1", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Flurry Analytics \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import flurryanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u6df7\u6dc6 (release, optional)   \u7f16\u8f91  project.properties  \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6. \u6bd4\u5982:   proguard.config=proguard.cfg   \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u5982\u4e0b:   -dontwarn android.webkit.**  \u6ce8\u610f:  \u6df7\u6dc6\u53ea\u5728  Release  \u7f16\u8bd1\u6a21\u5f0f\u4e0b\u6709\u6548 (i.e  cocos run -m release ) debug \u7f16\u8bd1\u4e0b\u4e0d\u4f1a\u8c03\u7528\u5230\u6df7\u6dc6\u89c4\u5219.", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/#_3", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6  sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570\u503c  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a Flurry Analytics \u7684\u914d\u7f6e\u6837\u4f8b,\u4f60\u9700\u8981\u7528\u5728  Flurry Analytics ID \u6ce8\u518c\u7684\u5e10\u53f7\u4fe1\u606f,\u66ff\u6362  API KEY .  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a iOS \u4e0b\u7684\u914d\u7f6e\u4f8b\u5b50  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true\n}  Android\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u8981\u590d\u6742\u4e00\u70b9\uff0c\u91cc\u9762\u5305\u542b\u4e86  locations ,  pulse  and  origin  \u7684\u4e00\u4e9b\u8bbe\u7f6e,\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  FlurryAnalytics :{\n             APIKey : API KEY ,\n             AppVersion : V0.1 ,\n             Debug :false,\n             LogEvent :true,\n             Level :2,\n             SessionTimeout :10,\n             CrashReport :true,\n             LocationReport :true,\n             DefLocationLat :104.06,\n             DefLocationLon :30.67,\n             Pulse :true,\n             Origin :[\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 ,\n                     OriginParams :{\n                         Key1 : Val1 ,\n                         Key2 : Val2 ,\n                         Key3 : Val3 \n                    }\n                },\n                {\n                     OriginName : sdkbox ,\n                     OriginVersion : v0.1 \n                }\n            ]\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801   \u4fee\u6539  Classes/AppDelegate.cpp  \u5305\u542b\u4ee5\u4e0b\u5934\u6587\u4ef6:   #include  PluginFlurryAnalyticsLua.hpp \n#include  PluginFlurryAnalyticsLuaHelper.h    \u7136\u540e,\u6211\u4eec\u9700\u8981\u8c03\u7528  register_all_PluginFlurryAnalyticsLua( lua_State* );  \u6765\u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.   \u6ce8\u610f:  \u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e, \u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u8c03\u7528\u4e0a\u9762\u7684\u6ce8\u518c\u51fd\u6570.  \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u5b50:  #include  PluginFlurryAnalyticsLua.hpp \n#include  PluginFlurryAnalyticsLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginFlurryAnalyticsLua(tolua_s);\n    register_all_PluginFlurryAnalyticsLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Flurry Analytics  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6. \u8fd9\u4e2a\u521d\u59cb\u5316,\u53ef\u4ee5\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f46\u662f\u5fc5\u987b\u5728\u4f60\u8c03\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u63a5\u53e3\u4e4b\u524d.  sdkbox.PluginFlurryAnalytics:init()  \u4f7f\u7528 Flurry Analytics  \u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e,\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 Flurry Analytics \u63d0\u4f9b\u7684\u529f\u80fd\u4e86. \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4efb\u610f\u5730\u65b9,\u4f7f\u7528  logevent :  local eventName =  test event1 \nsdkbox.PluginFlurryAnalytics:logEvent(eventName)  \u63a5\u6536 Flurry Analytics \u4e8b\u4ef6 (\u53ef\u9009)  \u4f60\u53ef\u4ee5\u63a5\u6536  FlurryAnalytics  \u4e8b\u4ef6, \u7136\u540e\u5bf9\u4e0d\u540c\u4e8b\u4ef6\u505a\u4e0d\u540c\u7684\u7a0b\u5e8f\u54cd\u5e94,\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u4f1a\u50cf\u8fd9\u6837:  sdkbox.PluginFlurryAnalytics:init()\nsdkbox.PluginFlurryAnalytics:setListener(function(data)\n        local ret = json.decode(data)\n        print( apiKey: , ret.apiKey,  sessionId: , ret.sessionId)\n        -- check session state\n        print( Flurry analytics session exist:  , f:activeSessionExists())\n        print( Flurry analytics session:  , f:getSessionID())\n        local eventName =  test event1 \n        sdkbox.PluginFlurryAnalytics:logEvent(eventName);\n    end)\nsdkbox.PluginFlurryAnalytics:startSession()  \u7ed3\u675f Flurry Analytics (\u53ea\u5728 Android \u4e0a\u6709\u6548)  \u5f53\u4f60\u4e0d\u518d\u4f7f\u7528  FlurryAnalytics  \u6216\u4f60\u7684\u6e38\u620f\u7ed3\u675f\u65f6, \u5fc5\u987b\u8981\u628a  FlurryAnalytics  \u4f1a\u8bdd\u7ed3\u675f. \u8fd9\u4e2a\u5728 Android \u4e0a\u5fc5\u987b\u8c03\u7528,\u4f46\u662f\u5728 iOS \u4e0a\u662f\u53ef\u9009\u7684. \u6bd4\u5982:  // \u8fd9\u4e2a\u53ea\u5728 android \u4e0a\u6709\u6548, \u4f46\u662f\u4f60\u5728 iOS \u8c03\u7528,\u4e5f\u6ca1\u6709\u5173\u7cfb\nsdkbox.PluginFlurryAnalytics:endSession()", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/flurryanalytics/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginFlurryAnalytics:init()   init plugin, must be first invoke   sdkbox.PluginFlurryAnalytics:setAppVersion(version)   Explicitly specifies the App Version that Flurry will use to group Analytics data.   sdkbox.PluginFlurryAnalytics:getFlurryAgentVersion()   Retrieves the Flurry Agent Build Version.   sdkbox.PluginFlurryAnalytics:setShowErrorInLogEnabled(value)   Displays an exception in the debug log if thrown during a Session.   sdkbox.PluginFlurryAnalytics:setDebugLogEnabled(value)   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics:setLogLevel(value)   Generates debug logs to console.   sdkbox.PluginFlurryAnalytics:setSessionContinueSeconds(seconds)   Set the timeout for expiring a Flurry session.   sdkbox.PluginFlurryAnalytics:setCrashReportingEnabled(value)   Enable automatic collection of crash reports.   sdkbox.PluginFlurryAnalytics:startSession()   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics:endSession()   end session, just valid on android   sdkbox.PluginFlurryAnalytics:activeSessionExists()   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics:getSessionID()   Start a Flurry session for the project denoted by @c apiKey.   sdkbox.PluginFlurryAnalytics:pauseBackgroundSession()   Pauses a Flurry session left running in background. on valid on ios   sdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion)   Adds an SDK origin specified by @c originName and @c originVersion.   sdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)   Adds a custom parameterized origin specified by @c originName with @c originVersion and @c parameters.   sdkbox.PluginFlurryAnalytics:addOrigin(originName, originVersion, parameters)   just for lua, js binding, have the same function with addOrigin(string, string, map)   sdkbox.PluginFlurryAnalytics:logEvent(eventName)   Records a custom event specified by @c eventName.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)   Records a custom parameterized event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters)   just for lua, js binding, have same function with logEvent(string, map)   sdkbox.PluginFlurryAnalytics:logEvent(eventName, timed)   Records a timed event specified by @c eventName.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)   Records a custom parameterized timed event specified by @c eventName with @c parameters.   sdkbox.PluginFlurryAnalytics:logEvent(eventName, parameters, timed)   just for lua, js binding, have the same function with logEvent(string, map, bool)   sdkbox.PluginFlurryAnalytics:endTimedEvent(eventId)   End a timed event   sdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)   Ends a timed event specified by @c eventName and optionally updates parameters with @c parameters.   sdkbox.PluginFlurryAnalytics:endTimedEvent(eventName, parameters)   just for lua, js binding, have same function with endTimeEvent(string, map)   sdkbox.PluginFlurryAnalytics:logError(errorID, message, info)   Records an app exception. Commonly used to catch unhandled exceptions.   sdkbox.PluginFlurryAnalytics:logPageView()   Explicitly track a page view during a session.   sdkbox.PluginFlurryAnalytics:setUserID(userID)   Assign a unique id for a user in your app.   sdkbox.PluginFlurryAnalytics:setAge(age)   Set your user's age in years.   sdkbox.PluginFlurryAnalytics:setGender(gender)   Set your user's gender.   sdkbox.PluginFlurryAnalytics:setReportLocation(reportLocation)   Set whether Flurry should record location via GPS. Defaults to true. valid on android   sdkbox.PluginFlurryAnalytics:setLatitude(latitude,\n                                          longitude,\n                                          horizontalAccuracy,\n                                          verticalAccuracy)   Set the location of the session.   sdkbox.PluginFlurryAnalytics:clearLocation()   clear the default location.valid on andriod   sdkbox.PluginFlurryAnalytics:setSessionReportsOnCloseEnabled(sendSessionReportsOnClose)   Set session to report when app closes.valid on ios   sdkbox.PluginFlurryAnalytics:setSessionReportsOnPauseEnabled(setSessionReportsOnPauseEnabled)   Set session to report when app is sent to the background.valid on ios   sdkbox.PluginFlurryAnalytics:setBackgroundSessionEnabled(setBackgroundSessionEnabled)   Set session to support background execution.valid on ios   sdkbox.PluginFlurryAnalytics:setEventLoggingEnabled(value)   Enable custom event logging.   sdkbox.PluginFlurryAnalytics:setPulseEnabled(value)   Enables Flurry Pulse   sdkbox.PluginFlurryAnalytics:setListener(listener)   set listener for session callback   Listeners  flurrySessionDidCreateWithInfo(info)   Invoked when analytics session is created,", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/", 
            "text": "Google Analytics\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002\n\n\nsdkbox import googleanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nres/sdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTRACKING_CODE\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nGoogle Analytics\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\n\nGoogleAnalytics\n : {\n    \ntrackingCode\n : \nTRACKING_CODE\n\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Google Analytics\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginGoogleAnalytics/PluginGoogleAnalytics.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginGoogleAnalytics::init();\n}\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nDispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void dispatchHits();\n\n\n\n\n\n\nManually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.\n\n\n\n\nstatic void dispatchPeriodically(int numberOfSeconds);\n\n\n\n\n\n\nChange the dispatch info time period to the desired amount of seconds.\n\n\n\n\nstatic void stopPeriodicalDispatch();\n\n\n\n\n\n\nStop periodically sending info. Then manually the \ndispatchPeridically\n\nor \ndispatchHits\n should be called.\n\n\n\n\nSession control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.\n\n\nstatic void startSession();\n\n\n\n\n\n\nThe analytics session is being explicitly started at plugin initialization time.\n\n\n\n\nstatic void stopSession();\n\n\n\n\n\n\nYou normally will never stop a session manually.\n\n\n\n\nScreens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.\n\n\nstatic void logScreen(std::string title);\n\n\n\n\n\n\nLog screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.\n\n\n\n\nEvents. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.\n\n\nstatic void logEvent(std::string eventCategory,\n                      std::string eventAction,\n                      std::string eventLabel,\n                      long value);\n\n\n\n\n\n\nsdkbox::PluginGoogleAnalytics::logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);\n\n\n\n\nCrashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.\n\n\nstatic void logException(std::string exceptionDescription, bool isFatal);\n\n\n\n\n\n\nLog an exception. It is a basic support for in-app events.\n\n\n\n\nUser timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.\n\n\nstatic void logTiming(std::string timingCategory,\n                        int timingInterval,\n                        std::string timingName,\n                        std::string timingLabel);\n\n\n\n\n\n\nMeasure a time inside the application.\n\n\n\n\nSocial. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.\n\n\nstatic void logSocial(std::string socialNetwork,\n                        std::string socialAction,\n                        std::string socialTarget);\n\n\n\n\n\n\nLog a social event.\n\n\n\n\nGeneral purpose methods.\n\n\nstatic void setDryRun(bool dr);\n\n\n\n\n\n\nWhile running on dry run, the tracked events won't be sent to the actual\nanalytics account.\n\n\n\n\nstatic void enableAdvertisingTracking(bool e);\n\n\n\n\n\n\nEnable advertising tracking when in google's ad vendors.\n\n\n\n\nstatic void createTracker(std::string trackerId);\n\n\n\n\n\n\nCreate a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.\n\n\n\n\nstatic void enableTracker(std::string trackerId);\n\n\n\n\n\n\nEnable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/#google-analytics", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002  sdkbox import googleanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  res/sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TRACKING_CODE  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Google Analytics  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002  GoogleAnalytics  : {\n     trackingCode  :  TRACKING_CODE \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Google Analytics  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginGoogleAnalytics/PluginGoogleAnalytics.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginGoogleAnalytics::init();\n}", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-cpp/#api-reference", 
            "text": "Methods  Dispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.  static void init();   initialize the plugin instance.   static void dispatchHits();   Manually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.   static void dispatchPeriodically(int numberOfSeconds);   Change the dispatch info time period to the desired amount of seconds.   static void stopPeriodicalDispatch();   Stop periodically sending info. Then manually the  dispatchPeridically \nor  dispatchHits  should be called.   Session control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.  static void startSession();   The analytics session is being explicitly started at plugin initialization time.   static void stopSession();   You normally will never stop a session manually.   Screens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.  static void logScreen(std::string title);   Log screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.   Events. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.  static void logEvent(std::string eventCategory,\n                      std::string eventAction,\n                      std::string eventLabel,\n                      long value);   sdkbox::PluginGoogleAnalytics::logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);   Crashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.  static void logException(std::string exceptionDescription, bool isFatal);   Log an exception. It is a basic support for in-app events.   User timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.  static void logTiming(std::string timingCategory,\n                        int timingInterval,\n                        std::string timingName,\n                        std::string timingLabel);   Measure a time inside the application.   Social. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.  static void logSocial(std::string socialNetwork,\n                        std::string socialAction,\n                        std::string socialTarget);   Log a social event.   General purpose methods.  static void setDryRun(bool dr);   While running on dry run, the tracked events won't be sent to the actual\nanalytics account.   static void enableAdvertisingTracking(bool e);   Enable advertising tracking when in google's ad vendors.   static void createTracker(std::string trackerId);   Create a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.   static void enableTracker(std::string trackerId);   Enable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/", 
            "text": "Google Analytics\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002\n\n\nsdkbox import googleanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nres/sdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTRACKING_CODE\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nGoogle Analytics\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\n\nGoogleAnalytics\n : {\n    \ntrackingCode\n : \nTRACKING_CODE\n\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Google Analytics\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginGoogleAnalytics.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginGoogleAnalyticsJS.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginGoogleAnalyticsJS);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nDispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.\n\n\nsdkbox.PluginGoogleAnalytics.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.dispatchHits();\n\n\n\n\n\n\nManually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.dispatchPeriodically(numberOfSeconds);\n\n\n\n\n\n\nChange the dispatch info time period to the desired amount of seconds.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.stopPeriodicalDispatch();\n\n\n\n\n\n\nStop periodically sending info. Then manually the \ndispatchPeridically\n\nor \ndispatchHits\n should be called.\n\n\n\n\nSession control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.\n\n\nsdkbox.PluginGoogleAnalytics.startSession();\n\n\n\n\n\n\nThe analytics session is being explicitly started at plugin initialization time.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.stopSession();\n\n\n\n\n\n\nYou normally will never stop a session manually.\n\n\n\n\nScreens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.\n\n\nsdkbox.PluginGoogleAnalytics.logScreen(title);\n\n\n\n\n\n\nLog screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.\n\n\n\n\nEvents. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.\n\n\nsdkbox.PluginGoogleAnalytics.logEvent(eventCategory, eventAction, eventLabel, value);\n\n\n\n\n\n\nsdkbox.PluginGoogleAnalytics.logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);\n\n\n\n\nCrashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.\n\n\nsdkbox.PluginGoogleAnalytics.logException(exceptionDescription, isFatal);\n\n\n\n\n\n\nLog an exception. It is a basic support for in-app events.\n\n\n\n\nUser timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.\n\n\nsdkbox.PluginGoogleAnalytics.logTiming(timingCategory, timingInterval, timingName, timingLabel);\n\n\n\n\n\n\nMeasure a time inside the application.\n\n\n\n\nSocial. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.\n\n\nsdkbox.PluginGoogleAnalytics.logSocial(socialNetwork, socialAction, socialTarget);\n\n\n\n\n\n\nLog a social event.\n\n\n\n\nGeneral purpose methods.\n\n\nsdkbox.PluginGoogleAnalytics.setDryRun(dr);\n\n\n\n\n\n\nWhile running on dry run, the tracked events won't be sent to the actual\nanalytics account.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.enableAdvertisingTracking(e);\n\n\n\n\n\n\nEnable advertising tracking when in google's ad vendors.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.createTracker(trackerId);\n\n\n\n\n\n\nCreate a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.enableTracker(trackerId);\n\n\n\n\n\n\nEnable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/#google-analytics", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002  sdkbox import googleanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  res/sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TRACKING_CODE  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Google Analytics  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002  GoogleAnalytics  : {\n     trackingCode  :  TRACKING_CODE \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 Google Analytics   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginGoogleAnalytics.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginGoogleAnalyticsJS.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginGoogleAnalyticsJS);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-js/#api-reference", 
            "text": "Methods  Dispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.  sdkbox.PluginGoogleAnalytics.init();   initialize the plugin instance.   sdkbox.PluginGoogleAnalytics.dispatchHits();   Manually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.   sdkbox.PluginGoogleAnalytics.dispatchPeriodically(numberOfSeconds);   Change the dispatch info time period to the desired amount of seconds.   sdkbox.PluginGoogleAnalytics.stopPeriodicalDispatch();   Stop periodically sending info. Then manually the  dispatchPeridically \nor  dispatchHits  should be called.   Session control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.  sdkbox.PluginGoogleAnalytics.startSession();   The analytics session is being explicitly started at plugin initialization time.   sdkbox.PluginGoogleAnalytics.stopSession();   You normally will never stop a session manually.   Screens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.  sdkbox.PluginGoogleAnalytics.logScreen(title);   Log screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.   Events. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.  sdkbox.PluginGoogleAnalytics.logEvent(eventCategory, eventAction, eventLabel, value);   sdkbox.PluginGoogleAnalytics.logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);   Crashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.  sdkbox.PluginGoogleAnalytics.logException(exceptionDescription, isFatal);   Log an exception. It is a basic support for in-app events.   User timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.  sdkbox.PluginGoogleAnalytics.logTiming(timingCategory, timingInterval, timingName, timingLabel);   Measure a time inside the application.   Social. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.  sdkbox.PluginGoogleAnalytics.logSocial(socialNetwork, socialAction, socialTarget);   Log a social event.   General purpose methods.  sdkbox.PluginGoogleAnalytics.setDryRun(dr);   While running on dry run, the tracked events won't be sent to the actual\nanalytics account.   sdkbox.PluginGoogleAnalytics.enableAdvertisingTracking(e);   Enable advertising tracking when in google's ad vendors.   sdkbox.PluginGoogleAnalytics.createTracker(trackerId);   Create a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.   sdkbox.PluginGoogleAnalytics.enableTracker(trackerId);   Enable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/", 
            "text": "Google Analytics\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002\n\n\nsdkbox import googleanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nres/sdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTRACKING_CODE\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nGoogle Analytics\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\n\nGoogleAnalytics\n : {\n    \ntrackingCode\n : \nTRACKING_CODE\n\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c \nGoogle Analytics\n \u7684 Lua_State\u3002\n\nNote:\n \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a \nlua_State*\n \u53c2\u6570\u3002\n\n\n#include \nPluginGoogleAnalyticsLua.hpp\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginGoogleAnalyticsLua(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 Google Analytics\n\n\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\n\n\nsdkbox.PluginGoogleAnalytics:init()\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nDispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.\n\n\nsdkbox.PluginGoogleAnalytics:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:dispatchHits()\n\n\n\n\n\n\nManually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:dispatchPeriodically(numberOfSeconds)\n\n\n\n\n\n\nChange the dispatch info time period to the desired amount of seconds.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:stopPeriodicalDispatch()\n\n\n\n\n\n\nStop periodically sending info. Then manually the \ndispatchPeridically\n\nor \ndispatchHits\n should be called.\n\n\n\n\nSession control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.\n\n\nsdkbox.PluginGoogleAnalytics:startSession()\n\n\n\n\n\n\nThe analytics session is being explicitly started at plugin initialization time.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:stopSession()\n\n\n\n\n\n\nYou normally will never stop a session manually.\n\n\n\n\nScreens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.\n\n\nsdkbox.PluginGoogleAnalytics:logScreen(title)\n\n\n\n\n\n\nLog screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.\n\n\n\n\nEvents. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.\n\n\nsdkbox.PluginGoogleAnalytics:logEvent(eventCategory, eventAction, eventLabel, value)\n\n\n\n\n\n\nsdkbox.PluginGoogleAnalytics:logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);\n\n\n\n\nCrashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.\n\n\nsdkbox.PluginGoogleAnalytics:logException(exceptionDescription, isFatal)\n\n\n\n\n\n\nLog an exception. It is a basic support for in-app events.\n\n\n\n\nUser timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.\n\n\nsdkbox.PluginGoogleAnalytics:logTiming(timingCategory, timingInterval, timingName, timingLabel)\n\n\n\n\n\n\nMeasure a time inside the application.\n\n\n\n\nSocial. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.\n\n\nsdkbox.PluginGoogleAnalytics:logSocial(socialNetwork, socialAction, socialTarget)\n\n\n\n\n\n\nLog a social event.\n\n\n\n\nGeneral purpose methods.\n\n\nsdkbox.PluginGoogleAnalytics:setDryRun(dr)\n\n\n\n\n\n\nWhile running on dry run, the tracked events won't be sent to the actual\nanalytics account.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:enableAdvertisingTracking(e)\n\n\n\n\n\n\nEnable advertising tracking when in google's ad vendors.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:createTracker(trackerId)\n\n\n\n\n\n\nCreate a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:enableTracker(trackerId)\n\n\n\n\n\n\nEnable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/#google-analytics", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002  sdkbox import googleanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  res/sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TRACKING_CODE  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Google Analytics  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002  GoogleAnalytics  : {\n     trackingCode  :  TRACKING_CODE \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c  Google Analytics  \u7684 Lua_State\u3002 Note:  \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a  lua_State*  \u53c2\u6570\u3002  #include  PluginGoogleAnalyticsLua.hpp   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginGoogleAnalyticsLua(L);\n}  \u521d\u59cb\u5316 Google Analytics   \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002   sdkbox.PluginGoogleAnalytics:init()", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/googleanalytics/v3-lua/#api-reference", 
            "text": "Methods  Dispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.  sdkbox.PluginGoogleAnalytics:init()   initialize the plugin instance.   sdkbox.PluginGoogleAnalytics:dispatchHits()   Manually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.   sdkbox.PluginGoogleAnalytics:dispatchPeriodically(numberOfSeconds)   Change the dispatch info time period to the desired amount of seconds.   sdkbox.PluginGoogleAnalytics:stopPeriodicalDispatch()   Stop periodically sending info. Then manually the  dispatchPeridically \nor  dispatchHits  should be called.   Session control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.  sdkbox.PluginGoogleAnalytics:startSession()   The analytics session is being explicitly started at plugin initialization time.   sdkbox.PluginGoogleAnalytics:stopSession()   You normally will never stop a session manually.   Screens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.  sdkbox.PluginGoogleAnalytics:logScreen(title)   Log screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.   Events. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.  sdkbox.PluginGoogleAnalytics:logEvent(eventCategory, eventAction, eventLabel, value)   sdkbox.PluginGoogleAnalytics:logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);   Crashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.  sdkbox.PluginGoogleAnalytics:logException(exceptionDescription, isFatal)   Log an exception. It is a basic support for in-app events.   User timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.  sdkbox.PluginGoogleAnalytics:logTiming(timingCategory, timingInterval, timingName, timingLabel)   Measure a time inside the application.   Social. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.  sdkbox.PluginGoogleAnalytics:logSocial(socialNetwork, socialAction, socialTarget)   Log a social event.   General purpose methods.  sdkbox.PluginGoogleAnalytics:setDryRun(dr)   While running on dry run, the tracked events won't be sent to the actual\nanalytics account.   sdkbox.PluginGoogleAnalytics:enableAdvertisingTracking(e)   Enable advertising tracking when in google's ad vendors.   sdkbox.PluginGoogleAnalytics:createTracker(trackerId)   Create a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.   sdkbox.PluginGoogleAnalytics:enableTracker(trackerId)   Enable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/", 
            "text": "Google Analytics\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002\n\n\nsdkbox import googleanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nres/sdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTRACKING_CODE\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nGoogle Analytics\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\n\nGoogleAnalytics\n : {\n    \ntrackingCode\n : \nTRACKING_CODE\n\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Google Analytics\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginGoogleAnalytics/PluginGoogleAnalytics.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginGoogleAnalytics::init();\n}\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nDispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void dispatchHits();\n\n\n\n\n\n\nManually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.\n\n\n\n\nstatic void dispatchPeriodically(int numberOfSeconds);\n\n\n\n\n\n\nChange the dispatch info time period to the desired amount of seconds.\n\n\n\n\nstatic void stopPeriodicalDispatch();\n\n\n\n\n\n\nStop periodically sending info. Then manually the \ndispatchPeridically\n\nor \ndispatchHits\n should be called.\n\n\n\n\nSession control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.\n\n\nstatic void startSession();\n\n\n\n\n\n\nThe analytics session is being explicitly started at plugin initialization time.\n\n\n\n\nstatic void stopSession();\n\n\n\n\n\n\nYou normally will never stop a session manually.\n\n\n\n\nScreens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.\n\n\nstatic void logScreen(std::string title);\n\n\n\n\n\n\nLog screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.\n\n\n\n\nEvents. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.\n\n\nstatic void logEvent(std::string eventCategory,\n                      std::string eventAction,\n                      std::string eventLabel,\n                      long value);\n\n\n\n\n\n\nsdkbox::PluginGoogleAnalytics::logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);\n\n\n\n\nCrashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.\n\n\nstatic void logException(std::string exceptionDescription, bool isFatal);\n\n\n\n\n\n\nLog an exception. It is a basic support for in-app events.\n\n\n\n\nUser timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.\n\n\nstatic void logTiming(std::string timingCategory,\n                        int timingInterval,\n                        std::string timingName,\n                        std::string timingLabel);\n\n\n\n\n\n\nMeasure a time inside the application.\n\n\n\n\nSocial. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.\n\n\nstatic void logSocial(std::string socialNetwork,\n                        std::string socialAction,\n                        std::string socialTarget);\n\n\n\n\n\n\nLog a social event.\n\n\n\n\nGeneral purpose methods.\n\n\nstatic void setDryRun(bool dr);\n\n\n\n\n\n\nWhile running on dry run, the tracked events won't be sent to the actual\nanalytics account.\n\n\n\n\nstatic void enableAdvertisingTracking(bool e);\n\n\n\n\n\n\nEnable advertising tracking when in google's ad vendors.\n\n\n\n\nstatic void createTracker(std::string trackerId);\n\n\n\n\n\n\nCreate a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.\n\n\n\n\nstatic void enableTracker(std::string trackerId);\n\n\n\n\n\n\nEnable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/#google-analytics", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002  sdkbox import googleanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  res/sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TRACKING_CODE  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Google Analytics  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002  GoogleAnalytics  : {\n     trackingCode  :  TRACKING_CODE \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Google Analytics  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginGoogleAnalytics/PluginGoogleAnalytics.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginGoogleAnalytics::init();\n}", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-cpp/#api-reference", 
            "text": "Methods  Dispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.  static void init();   initialize the plugin instance.   static void dispatchHits();   Manually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.   static void dispatchPeriodically(int numberOfSeconds);   Change the dispatch info time period to the desired amount of seconds.   static void stopPeriodicalDispatch();   Stop periodically sending info. Then manually the  dispatchPeridically \nor  dispatchHits  should be called.   Session control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.  static void startSession();   The analytics session is being explicitly started at plugin initialization time.   static void stopSession();   You normally will never stop a session manually.   Screens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.  static void logScreen(std::string title);   Log screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.   Events. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.  static void logEvent(std::string eventCategory,\n                      std::string eventAction,\n                      std::string eventLabel,\n                      long value);   sdkbox::PluginGoogleAnalytics::logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);   Crashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.  static void logException(std::string exceptionDescription, bool isFatal);   Log an exception. It is a basic support for in-app events.   User timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.  static void logTiming(std::string timingCategory,\n                        int timingInterval,\n                        std::string timingName,\n                        std::string timingLabel);   Measure a time inside the application.   Social. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.  static void logSocial(std::string socialNetwork,\n                        std::string socialAction,\n                        std::string socialTarget);   Log a social event.   General purpose methods.  static void setDryRun(bool dr);   While running on dry run, the tracked events won't be sent to the actual\nanalytics account.   static void enableAdvertisingTracking(bool e);   Enable advertising tracking when in google's ad vendors.   static void createTracker(std::string trackerId);   Create a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.   static void enableTracker(std::string trackerId);   Enable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/", 
            "text": "Google Analytics\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002\n\n\nsdkbox import googleanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nres/sdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTRACKING_CODE\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nGoogle Analytics\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\n\nGoogleAnalytics\n : {\n    \ntrackingCode\n : \nTRACKING_CODE\n\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Google Analytics\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginGoogleAnalytics.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginGoogleAnalyticsJS.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginGoogleAnalyticsJS);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nDispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.\n\n\nsdkbox.PluginGoogleAnalytics.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.dispatchHits();\n\n\n\n\n\n\nManually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.dispatchPeriodically(numberOfSeconds);\n\n\n\n\n\n\nChange the dispatch info time period to the desired amount of seconds.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.stopPeriodicalDispatch();\n\n\n\n\n\n\nStop periodically sending info. Then manually the \ndispatchPeridically\n\nor \ndispatchHits\n should be called.\n\n\n\n\nSession control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.\n\n\nsdkbox.PluginGoogleAnalytics.startSession();\n\n\n\n\n\n\nThe analytics session is being explicitly started at plugin initialization time.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.stopSession();\n\n\n\n\n\n\nYou normally will never stop a session manually.\n\n\n\n\nScreens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.\n\n\nsdkbox.PluginGoogleAnalytics.logScreen(title);\n\n\n\n\n\n\nLog screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.\n\n\n\n\nEvents. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.\n\n\nsdkbox.PluginGoogleAnalytics.logEvent(eventCategory, eventAction, eventLabel, value);\n\n\n\n\n\n\nsdkbox.PluginGoogleAnalytics.logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);\n\n\n\n\nCrashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.\n\n\nsdkbox.PluginGoogleAnalytics.logException(exceptionDescription, isFatal);\n\n\n\n\n\n\nLog an exception. It is a basic support for in-app events.\n\n\n\n\nUser timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.\n\n\nsdkbox.PluginGoogleAnalytics.logTiming(timingCategory, timingInterval, timingName, timingLabel);\n\n\n\n\n\n\nMeasure a time inside the application.\n\n\n\n\nSocial. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.\n\n\nsdkbox.PluginGoogleAnalytics.logSocial(socialNetwork, socialAction, socialTarget);\n\n\n\n\n\n\nLog a social event.\n\n\n\n\nGeneral purpose methods.\n\n\nsdkbox.PluginGoogleAnalytics.setDryRun(dr);\n\n\n\n\n\n\nWhile running on dry run, the tracked events won't be sent to the actual\nanalytics account.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.enableAdvertisingTracking(e);\n\n\n\n\n\n\nEnable advertising tracking when in google's ad vendors.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.createTracker(trackerId);\n\n\n\n\n\n\nCreate a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.\n\n\n\n\nsdkbox.PluginGoogleAnalytics.enableTracker(trackerId);\n\n\n\n\n\n\nEnable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/#google-analytics", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002  sdkbox import googleanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  res/sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TRACKING_CODE  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Google Analytics  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002  GoogleAnalytics  : {\n     trackingCode  :  TRACKING_CODE \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 Google Analytics   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginGoogleAnalytics.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginGoogleAnalyticsJS.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginGoogleAnalyticsJS);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-js/#api-reference", 
            "text": "Methods  Dispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.  sdkbox.PluginGoogleAnalytics.init();   initialize the plugin instance.   sdkbox.PluginGoogleAnalytics.dispatchHits();   Manually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.   sdkbox.PluginGoogleAnalytics.dispatchPeriodically(numberOfSeconds);   Change the dispatch info time period to the desired amount of seconds.   sdkbox.PluginGoogleAnalytics.stopPeriodicalDispatch();   Stop periodically sending info. Then manually the  dispatchPeridically \nor  dispatchHits  should be called.   Session control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.  sdkbox.PluginGoogleAnalytics.startSession();   The analytics session is being explicitly started at plugin initialization time.   sdkbox.PluginGoogleAnalytics.stopSession();   You normally will never stop a session manually.   Screens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.  sdkbox.PluginGoogleAnalytics.logScreen(title);   Log screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.   Events. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.  sdkbox.PluginGoogleAnalytics.logEvent(eventCategory, eventAction, eventLabel, value);   sdkbox.PluginGoogleAnalytics.logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);   Crashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.  sdkbox.PluginGoogleAnalytics.logException(exceptionDescription, isFatal);   Log an exception. It is a basic support for in-app events.   User timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.  sdkbox.PluginGoogleAnalytics.logTiming(timingCategory, timingInterval, timingName, timingLabel);   Measure a time inside the application.   Social. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.  sdkbox.PluginGoogleAnalytics.logSocial(socialNetwork, socialAction, socialTarget);   Log a social event.   General purpose methods.  sdkbox.PluginGoogleAnalytics.setDryRun(dr);   While running on dry run, the tracked events won't be sent to the actual\nanalytics account.   sdkbox.PluginGoogleAnalytics.enableAdvertisingTracking(e);   Enable advertising tracking when in google's ad vendors.   sdkbox.PluginGoogleAnalytics.createTracker(trackerId);   Create a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.   sdkbox.PluginGoogleAnalytics.enableTracker(trackerId);   Enable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/", 
            "text": "Google Analytics\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002\n\n\nsdkbox import googleanalytics\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nres/sdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTRACKING_CODE\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nGoogle Analytics\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\n\nGoogleAnalytics\n : {\n    \ntrackingCode\n : \nTRACKING_CODE\n\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginGoogleAnalyticsLua.hpp\n\n#include \nPLuginGoogleAnalyticsLuaHelper.hpp\n\n\n\n\n\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528 \nregister_all_PluginGoogleAnalyticsLua(\nlua_State*\n);\n \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002\n\n\n\n\nNote:\n \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e\uff0c\u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u3002\n\n\n\u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\n\n#include \nPluginGoogleAnalyticsLua.hpp\n\n#include \nPluginGoogleAnalyticsLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginGoogleAnalyticsLua(tolua_s);\n    register_all_PluginGoogleAnalyticsLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Google Analytics\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\nsdkbox.PluginGoogleAnalytics:init()\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nDispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.\n\n\nsdkbox.PluginGoogleAnalytics:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:dispatchHits()\n\n\n\n\n\n\nManually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:dispatchPeriodically(numberOfSeconds)\n\n\n\n\n\n\nChange the dispatch info time period to the desired amount of seconds.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:stopPeriodicalDispatch()\n\n\n\n\n\n\nStop periodically sending info. Then manually the \ndispatchPeridically\n\nor \ndispatchHits\n should be called.\n\n\n\n\nSession control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.\n\n\nsdkbox.PluginGoogleAnalytics:startSession()\n\n\n\n\n\n\nThe analytics session is being explicitly started at plugin initialization time.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:stopSession()\n\n\n\n\n\n\nYou normally will never stop a session manually.\n\n\n\n\nScreens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.\n\n\nsdkbox.PluginGoogleAnalytics:logScreen(title)\n\n\n\n\n\n\nLog screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.\n\n\n\n\nEvents. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.\n\n\nsdkbox.PluginGoogleAnalytics:logEvent(eventCategory, eventAction, eventLabel, value)\n\n\n\n\n\n\nsdkbox.PluginGoogleAnalytics:logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);\n\n\n\n\nCrashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.\n\n\nsdkbox.PluginGoogleAnalytics:logException(exceptionDescription, isFatal)\n\n\n\n\n\n\nLog an exception. It is a basic support for in-app events.\n\n\n\n\nUser timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.\n\n\nsdkbox.PluginGoogleAnalytics:logTiming(timingCategory, timingInterval, timingName, timingLabel)\n\n\n\n\n\n\nMeasure a time inside the application.\n\n\n\n\nSocial. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.\n\n\nsdkbox.PluginGoogleAnalytics:logSocial(socialNetwork, socialAction, socialTarget)\n\n\n\n\n\n\nLog a social event.\n\n\n\n\nGeneral purpose methods.\n\n\nsdkbox.PluginGoogleAnalytics:setDryRun(dr)\n\n\n\n\n\n\nWhile running on dry run, the tracked events won't be sent to the actual\nanalytics account.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:enableAdvertisingTracking(e)\n\n\n\n\n\n\nEnable advertising tracking when in google's ad vendors.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:createTracker(trackerId)\n\n\n\n\n\n\nCreate a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.\n\n\n\n\nsdkbox.PluginGoogleAnalytics:enableTracker(trackerId)\n\n\n\n\n\n\nEnable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/#google-analytics", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Google Analytics \u63d2\u4ef6\u3002  sdkbox import googleanalytics", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -libraryjars libs/android-support-v4.jar\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  res/sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Google Analytics \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TRACKING_CODE  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Google Analytics  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002  GoogleAnalytics  : {\n     trackingCode  :  TRACKING_CODE \n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginGoogleAnalyticsLua.hpp \n#include  PLuginGoogleAnalyticsLuaHelper.hpp    \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528  register_all_PluginGoogleAnalyticsLua( lua_State* );  \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002   Note:  \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e\uff0c\u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u3002  \u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a  #include  PluginGoogleAnalyticsLua.hpp \n#include  PluginGoogleAnalyticsLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginGoogleAnalyticsLua(tolua_s);\n    register_all_PluginGoogleAnalyticsLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Google Analytics  \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002  sdkbox.PluginGoogleAnalytics:init()", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/googleanalytics/v2-lua/#api-reference", 
            "text": "Methods  Dispatch Methods. Dispatches hits (view, events, etc.) to Google Analytics if a network connection is available.  sdkbox.PluginGoogleAnalytics:init()   initialize the plugin instance.   sdkbox.PluginGoogleAnalytics:dispatchHits()   Manually request dispatch of hits. By default, data is dispatched from the\nGoogle Analytics SDK for Android every 5 minutes.   sdkbox.PluginGoogleAnalytics:dispatchPeriodically(numberOfSeconds)   Change the dispatch info time period to the desired amount of seconds.   sdkbox.PluginGoogleAnalytics:stopPeriodicalDispatch()   Stop periodically sending info. Then manually the  dispatchPeridically \nor  dispatchHits  should be called.   Session control.  A session represents a single period of user interaction with your game. Sessions serve as useful containers of measured activity, which includes screen views, events, and ecommerce transactions.  sdkbox.PluginGoogleAnalytics:startSession()   The analytics session is being explicitly started at plugin initialization time.   sdkbox.PluginGoogleAnalytics:stopSession()   You normally will never stop a session manually.   Screens. Screens in Google Analytics represent content users are viewing within your game. A screen view consists of a single string field that will be used as the screen name in your Google Analytics reports.  sdkbox.PluginGoogleAnalytics:logScreen(title)   Log screen info. title is the title of a screen. Screens are logical units\ninside your app you'd like to identify at analytics panel.   Events. Events are a useful way to collect data about a user's interaction with interactive components of your game, like the use of a particular item. An event consists of four fields that you can use to describe a user's interaction with your game.  sdkbox.PluginGoogleAnalytics:logEvent(eventCategory, eventAction, eventLabel, value)   sdkbox.PluginGoogleAnalytics:logEvent(\"Achievement\", \"Unlocked\", \"Slay 10 dragons\", 5);   Crashes and Exceptions. Crash and exception measurement allows you to measure the number and type of caught and uncaught crashes and exceptions that occur in your game.  sdkbox.PluginGoogleAnalytics:logException(exceptionDescription, isFatal)   Log an exception. It is a basic support for in-app events.   User timing. Measuring user timings provides a native way to measure a period of time in Google Analytics. For example, this can be useful to measure resource load times.  sdkbox.PluginGoogleAnalytics:logTiming(timingCategory, timingInterval, timingName, timingLabel)   Measure a time inside the application.   Social. Social interaction measurement allows you to measure a user's interactions with various social network sharing and recommendation widgets embedded in your content.  sdkbox.PluginGoogleAnalytics:logSocial(socialNetwork, socialAction, socialTarget)   Log a social event.   General purpose methods.  sdkbox.PluginGoogleAnalytics:setDryRun(dr)   While running on dry run, the tracked events won't be sent to the actual\nanalytics account.   sdkbox.PluginGoogleAnalytics:enableAdvertisingTracking(e)   Enable advertising tracking when in google's ad vendors.   sdkbox.PluginGoogleAnalytics:createTracker(trackerId)   Create a tracker identified by the google analytics tracker id XX-YYYYYYYY-Z.\nIf the tracker already existed, no new tracker will be created. In any case, the\ntracker associated with tracker id will be set as default tracker for  analytics\noperations.   sdkbox.PluginGoogleAnalytics:enableTracker(trackerId)   Enable a tracker identified by a trackerId. If the tracker does not exist,\nnothing will happen.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/", 
            "text": "\u5e94\u7528\u5185\u4ed8\u8d39\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import iap\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728\niTunes Connect\n\u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362 \nput the product id for ios here\n,\u6216\u8005,\u5728\nGoogle Play Console\n\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362\nput your googleplay key here\n\n\nios\n :\n{\n    \niap\n:{\n        \nitems\n:{\n            \nremove_ads\n:{\n                \nid\n:\nput the product id for ios here\n\n            }\n        }\n    }\n},\n\nandroid\n:\n{\n    \niap\n:{\n        \nkey\n:\nput your googleplay key here\n,\n        \nitems\n:{\n          \nremove_ads\n:{\n              \nid\n:\nput the product id for android here\n\n          }\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 IAP\n\n\n\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6.\u6211\u4eec\u63a8\u8350\u5728 \nAppDelegate::applicationDidFinishLaunching()\n or \nAppController:didFinishLaunchingWithOptions()\n \u4e2d.\u786e\u4fdd\u5305\u542b\u4e86\u76f8\u5173\u7684\u5934\u6587\u4ef6:\n\n\n#include \nPluginIAP/PluginIAP.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::IAP::init();\n}\n\n\n\n\n\u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c\n\n\n\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.\n\n\n\u5728\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e, \u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528 \nsdkbox::IAP::refresh()\n.\n\n\n\n\nonProductRequestSuccess\n \u6210\u529f\u83b7\u53d6\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonProductRequestFailure\n \u83b7\u53d6\u5931\u8d25\u7684\u8bdd,\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u8d2d\u4e70\n\n\n\u8d2d\u4e70\u53ea\u9700\u8981\u8c03\u7528 \nsdkbox::IAP::purchase(name)\n\n\n\u6ce8\u610f:\n \nname\n \u662f\u4f60\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \nitems\n \u9879\u7684\u503c, \u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store \u4e2d\u7684\u5546\u54c1\u540d.\n\n\n\n\nonSuccess\n \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\nonCanceled\n \u7528\u6237\u53d6\u6d88\u4e86\u8d2d\u4e70.\n\n\n\n\n\u6062\u590d\u8d2d\u4e70\n\n\n\u6062\u590d\u8d2d\u4e70\u8c03\u7528 \nsdkbox::IAP::restore()\n.\n\n\n\n\nonRestored\n \u6062\u590d\u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.\n\n\n\n\n\u6ce8\u610f:\n \nonRestored\n \u53ef\u80fd\u4f1a\u88ab\u591a\u6b21\u89e6\u53d1\n\n\n\u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6\n\n\n\u5141\u8bb8\u4f60\u63a5\u6536 \nIAP\n \u7684\u4e8b\u4ef6,\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5bf9\u7528\u6237,IAP\u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\n\n\n\u7ee7\u627f\u8fd9\u4e2a\u7c7b \nsdkbox::IAPListener\n:\n\n\n\n\n    #include \nPluginIAP/PluginIAP.h\n\n    class MyClass : public sdkbox::IAPListener\n    {\n    private:\n        virtual void onSuccess(sdkbox::Product const\n p) override;\n        virtual void onFailure(sdkbox::Product const\n p, const std::string \nmsg)\n           override;\n        virtual void onCanceled(sdkbox::Product const\n p) override;\n        virtual void onRestored(sdkbox::Product const\n p) override;\n        virtual void onProductRequestSuccess(std::vector\nsdkbox::Product\n const \nproducts)\n        override;\n        virtual void onProductRequestFailure(const std::string \nmsg) override;\n    }\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03\u4e8b\u4ef6:\n\n\n\n\nsdkbox::IAP::setListener(listener);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\nInitialize SDKBox IAP\n\n\n\n\nstatic void setDebug(bool debug);\n\n\n\n\n\n\nEnable/disable debug logging\n\n\n\n\nstatic void purchase(const std::string\n name);\n\n\n\n\n\n\nMake a purchase request\n\n\n\n\nstatic void refresh();\n\n\n\n\n\n\nRefresh the IAP data(title, price, description)\n\n\n\n\nstatic void restore();\n\n\n\n\n\n\nRestore purchase\n\n\n\n\nstatic void setListener(IAPListener* listener);\n\n\n\n\n\n\nSet listener for IAP\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nRemove listener for IAP\n\n\n\n\nListeners\n\n\nvirtual void onSuccess(const Product\n p) = 0;\n\n\n\n\n\n\nCalled when an IAP processed successfully\n\n\n\n\nvirtual void onFailure(const Product\n p, const std::string\n msg) = 0;\n\n\n\n\n\n\nCalled when an IAP fails\n\n\n\n\nvirtual void onCanceled(const Product\n p) = 0;\n\n\n\n\n\n\nCalled when user canceled the IAP\n\n\n\n\nvirtual void onRestored(const Product\n p) = 0;\n\n\n\n\n\n\nCalled when server returns the IAP items user already purchased\n\n\n\n\nvirtual void onProductRequestSuccess(const std::vector\nProduct\n products) = 0;\n\n\n\n\n\n\nCalled the product request is successful, usually developers use product request to update the latest info(title, price) from IAP\n\n\n\n\nvirtual void onProductRequestFailure(const std::string\n msg) = 0;\n\n\n\n\n\n\nCalled when the product request fails", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/#_1", 
            "text": "", 
            "title": "\u5e94\u7528\u5185\u4ed8\u8d39"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/#_2", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import iap", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/#_3", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/#_4", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728 iTunes Connect \u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362  put the product id for ios here ,\u6216\u8005,\u5728 Google Play Console \u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362 put your googleplay key here  ios  :\n{\n     iap :{\n         items :{\n             remove_ads :{\n                 id : put the product id for ios here \n            }\n        }\n    }\n}, android :\n{\n     iap :{\n         key : put your googleplay key here ,\n         items :{\n           remove_ads :{\n               id : put the product id for android here \n          }\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/#_5", 
            "text": "\u521d\u59cb\u5316 IAP  \u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6.\u6211\u4eec\u63a8\u8350\u5728  AppDelegate::applicationDidFinishLaunching()  or  AppController:didFinishLaunchingWithOptions()  \u4e2d.\u786e\u4fdd\u5305\u542b\u4e86\u76f8\u5173\u7684\u5934\u6587\u4ef6:  #include  PluginIAP/PluginIAP.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::IAP::init();\n}  \u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c  \u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.  \u5728\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e, \u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528  sdkbox::IAP::refresh() .   onProductRequestSuccess  \u6210\u529f\u83b7\u53d6\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onProductRequestFailure  \u83b7\u53d6\u5931\u8d25\u7684\u8bdd,\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.   \u8d2d\u4e70  \u8d2d\u4e70\u53ea\u9700\u8981\u8c03\u7528  sdkbox::IAP::purchase(name)  \u6ce8\u610f:   name  \u662f\u4f60\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d  items  \u9879\u7684\u503c, \u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store \u4e2d\u7684\u5546\u54c1\u540d.   onSuccess  \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.  onCanceled  \u7528\u6237\u53d6\u6d88\u4e86\u8d2d\u4e70.   \u6062\u590d\u8d2d\u4e70  \u6062\u590d\u8d2d\u4e70\u8c03\u7528  sdkbox::IAP::restore() .   onRestored  \u6062\u590d\u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.   \u6ce8\u610f:   onRestored  \u53ef\u80fd\u4f1a\u88ab\u591a\u6b21\u89e6\u53d1  \u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6  \u5141\u8bb8\u4f60\u63a5\u6536  IAP  \u7684\u4e8b\u4ef6,\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5bf9\u7528\u6237,IAP\u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.   \u7ee7\u627f\u8fd9\u4e2a\u7c7b  sdkbox::IAPListener :       #include  PluginIAP/PluginIAP.h \n    class MyClass : public sdkbox::IAPListener\n    {\n    private:\n        virtual void onSuccess(sdkbox::Product const  p) override;\n        virtual void onFailure(sdkbox::Product const  p, const std::string  msg)\n           override;\n        virtual void onCanceled(sdkbox::Product const  p) override;\n        virtual void onRestored(sdkbox::Product const  p) override;\n        virtual void onProductRequestSuccess(std::vector sdkbox::Product  const  products)\n        override;\n        virtual void onProductRequestFailure(const std::string  msg) override;\n    }   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03\u4e8b\u4ef6:   sdkbox::IAP::setListener(listener);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/iap/v3-cpp/#api-reference", 
            "text": "Methods  static void init();   Initialize SDKBox IAP   static void setDebug(bool debug);   Enable/disable debug logging   static void purchase(const std::string  name);   Make a purchase request   static void refresh();   Refresh the IAP data(title, price, description)   static void restore();   Restore purchase   static void setListener(IAPListener* listener);   Set listener for IAP   static void removeListener();   Remove listener for IAP   Listeners  virtual void onSuccess(const Product  p) = 0;   Called when an IAP processed successfully   virtual void onFailure(const Product  p, const std::string  msg) = 0;   Called when an IAP fails   virtual void onCanceled(const Product  p) = 0;   Called when user canceled the IAP   virtual void onRestored(const Product  p) = 0;   Called when server returns the IAP items user already purchased   virtual void onProductRequestSuccess(const std::vector Product  products) = 0;   Called the product request is successful, usually developers use product request to update the latest info(title, price) from IAP   virtual void onProductRequestFailure(const std::string  msg) = 0;   Called when the product request fails", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/iap/v3-js/", 
            "text": "\u5e94\u7528\u5185\u4ed8\u8d39\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import iap\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728\niTunes Connect\n\u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362 \nput the product id for ios here\n,\u6216\u8005,\u5728\nGoogle Play Console\n\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362\nput your googleplay key here\n\n\nios\n :\n{\n    \niap\n:{\n        \nitems\n:{\n            \nremove_ads\n:{\n                \nid\n:\nput the product id for ios here\n\n            }\n        }\n    }\n},\n\nandroid\n:\n{\n    \niap\n:{\n        \nkey\n:\nput your googleplay key here\n,\n        \nitems\n:{\n          \nremove_ads\n:{\n              \nid\n:\nput the product id for android here\n\n          }\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 IAP\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n \u5b8c\u6210\u521d\u59cb\u5316. \u6211\u4eec\u63a8\u8350\u5728 \napp.js\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316.\u6bd4\u5982:\n\n\n\n\nsdkbox.IAP.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginIAPJS.hpp\n\n#include \nPluginIAPJSHelper.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u786e\u4fdd\u8c03\u7528\u4e86\u5982\u4e0b\u51fd\u6570:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginIAPJS);\nsc-\naddRegisterCallback(register_all_PluginIAPJS_helper);\n\n\n\n\n\u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c\n\n\n\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.\n\n\n\u8981\u83b7\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528 \nsdkbox.IAP.refresh()\n.\n\n\n\n\nonProductRequestSuccess\n \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonProductRequestFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\n\n\n\u8d2d\u4e70\n\n\n\u8d2d\u4e70\u8c03\u7528 \nsdkbox.IAP.purchase(name)\n\n\n\u6ce8\u610f:\n \nname\n \u662f\u5728\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d \nitems\n \u9879\u7684\u540d\u5b57,\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u4ea7\u54c1id.\n\n\n\n\nonSuccess\n \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.\n\n\nonFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\nonCanceled\n \u7528\u6237\u53d6\u6d88\u8d2d\u4e70\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u6062\u590d\u8d2d\u4e70\n\n\n\u6062\u590d\u8d2d\u4e70\u8c03\u7528 \nsdkbox.IAP.restore()\n.\n\n\n\n\nonRestored\n \u6062\u590d\u8d2d\u4e70\u6210\u529f.\n\n\n\n\n\u6ce8\u610f:\n \nonRestored\n \u53ef\u80fd\u4f1a\u89e6\u53d1\u591a\u6b21\n\n\n\u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nIAP\n \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u4f60\u7684\u7528\u6237\u53ca IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\nsdkbox.IAP.setListener({\n    onSuccess : function (product) {\n        //Purchase success\n    },\n    onFailure : function (product, msg) {\n        //Purchase failed\n        //msg is the error message\n    },\n    onCanceled : function (product) {\n        //Purchase was canceled by user\n    },\n    onRestored : function (product) {\n        //Purchase restored\n    },\n    onProductRequestSuccess : function (products) {\n        //Returns you the data for all the iap products\n        //You can get each item using following method\n        for (var i = 0; i \n products.length; i++) {\n            // loop\n        }\n    },\n    onProductRequestFailure : function (msg) {\n        //When product refresh request fails.\n    }\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.IAP.init();\n\n\n\n\n\n\nInitialize SDKBox IAP\n\n\n\n\nsdkbox.IAP.setDebug(debug);\n\n\n\n\n\n\nEnable/disable debug logging\n\n\n\n\nsdkbox.IAP.purchase(name);\n\n\n\n\n\n\nMake a purchase request\n\n\n\n\nsdkbox.IAP.refresh();\n\n\n\n\n\n\nRefresh the IAP data(title, price, description)\n\n\n\n\nsdkbox.IAP.restore();\n\n\n\n\n\n\nRestore purchase\n\n\n\n\nsdkbox.IAP.setListener(listener);\n\n\n\n\n\n\nSet listener for IAP\n\n\n\n\nsdkbox.IAP.removeListener();\n\n\n\n\n\n\nRemove listener for IAP\n\n\n\n\nListeners\n\n\nsdkbox.IAP.onSuccess(product);\n\n\n\n\n\n\nCalled when an IAP processed successfully\n\n\n\n\nsdkbox.IAP.onFailure(product, message);\n\n\n\n\n\n\nCalled when an IAP fails\n\n\n\n\nsdkbox.IAP.onCanceled(product);\n\n\n\n\n\n\nCalled when user canceled the IAP\n\n\n\n\nsdkbox.IAP.onRestored(product);\n\n\n\n\n\n\nCalled when server returns the IAP items user already purchased\n\n\n\n\nsdkbox.IAP.onProductRequestSuccess(products);\n\n\n\n\n\n\nCalled the product request is successful, usually developers use product request to update the latest info(title, price) from IAP\n\n\n\n\nsdkbox.IAP.onProductRequestFailure(message);\n\n\n\n\n\n\nCalled when the product request fails", 
            "title": "js"
        }, 
        {
            "location": "/plugins/iap/v3-js/#_1", 
            "text": "", 
            "title": "\u5e94\u7528\u5185\u4ed8\u8d39"
        }, 
        {
            "location": "/plugins/iap/v3-js/#_2", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import iap", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/iap/v3-js/#_3", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/iap/v3-js/#_4", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728 iTunes Connect \u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362  put the product id for ios here ,\u6216\u8005,\u5728 Google Play Console \u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362 put your googleplay key here  ios  :\n{\n     iap :{\n         items :{\n             remove_ads :{\n                 id : put the product id for ios here \n            }\n        }\n    }\n}, android :\n{\n     iap :{\n         key : put your googleplay key here ,\n         items :{\n           remove_ads :{\n               id : put the product id for android here \n          }\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/iap/v3-js/#_5", 
            "text": "\u521d\u59cb\u5316 IAP   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init()  \u5b8c\u6210\u521d\u59cb\u5316. \u6211\u4eec\u63a8\u8350\u5728  app.js  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316.\u6bd4\u5982:   sdkbox.IAP.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginIAPJS.hpp \n#include  PluginIAPJSHelper.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u786e\u4fdd\u8c03\u7528\u4e86\u5982\u4e0b\u51fd\u6570:   sc- addRegisterCallback(register_all_PluginIAPJS);\nsc- addRegisterCallback(register_all_PluginIAPJS_helper);  \u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c  \u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.  \u8981\u83b7\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528  sdkbox.IAP.refresh() .   onProductRequestSuccess  \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onProductRequestFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.   \u8d2d\u4e70  \u8d2d\u4e70\u8c03\u7528  sdkbox.IAP.purchase(name)  \u6ce8\u610f:   name  \u662f\u5728\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d  items  \u9879\u7684\u540d\u5b57,\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u4ea7\u54c1id.   onSuccess  \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.  onFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.  onCanceled  \u7528\u6237\u53d6\u6d88\u8d2d\u4e70\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.   \u6062\u590d\u8d2d\u4e70  \u6062\u590d\u8d2d\u4e70\u8c03\u7528  sdkbox.IAP.restore() .   onRestored  \u6062\u590d\u8d2d\u4e70\u6210\u529f.   \u6ce8\u610f:   onRestored  \u53ef\u80fd\u4f1a\u89e6\u53d1\u591a\u6b21  \u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536  IAP  \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u4f60\u7684\u7528\u6237\u53ca IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.  sdkbox.IAP.setListener({\n    onSuccess : function (product) {\n        //Purchase success\n    },\n    onFailure : function (product, msg) {\n        //Purchase failed\n        //msg is the error message\n    },\n    onCanceled : function (product) {\n        //Purchase was canceled by user\n    },\n    onRestored : function (product) {\n        //Purchase restored\n    },\n    onProductRequestSuccess : function (products) {\n        //Returns you the data for all the iap products\n        //You can get each item using following method\n        for (var i = 0; i   products.length; i++) {\n            // loop\n        }\n    },\n    onProductRequestFailure : function (msg) {\n        //When product refresh request fails.\n    }\n});", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/iap/v3-js/#api-reference", 
            "text": "Methods  sdkbox.IAP.init();   Initialize SDKBox IAP   sdkbox.IAP.setDebug(debug);   Enable/disable debug logging   sdkbox.IAP.purchase(name);   Make a purchase request   sdkbox.IAP.refresh();   Refresh the IAP data(title, price, description)   sdkbox.IAP.restore();   Restore purchase   sdkbox.IAP.setListener(listener);   Set listener for IAP   sdkbox.IAP.removeListener();   Remove listener for IAP   Listeners  sdkbox.IAP.onSuccess(product);   Called when an IAP processed successfully   sdkbox.IAP.onFailure(product, message);   Called when an IAP fails   sdkbox.IAP.onCanceled(product);   Called when user canceled the IAP   sdkbox.IAP.onRestored(product);   Called when server returns the IAP items user already purchased   sdkbox.IAP.onProductRequestSuccess(products);   Called the product request is successful, usually developers use product request to update the latest info(title, price) from IAP   sdkbox.IAP.onProductRequestFailure(message);   Called when the product request fails", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/iap/v3-lua/", 
            "text": "\u5e94\u7528\u5185\u4ed8\u8d39\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import iap\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728\niTunes Connect\n\u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362 \nput the product id for ios here\n,\u6216\u8005,\u5728\nGoogle Play Console\n\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362\nput your googleplay key here\n\n\nios\n :\n{\n    \niap\n:{\n        \nitems\n:{\n            \nremove_ads\n:{\n                \nid\n:\nput the product id for ios here\n\n            }\n        }\n    }\n},\n\nandroid\n:\n{\n    \niap\n:{\n        \nkey\n:\nput your googleplay key here\n,\n        \nitems\n:{\n          \nremove_ads\n:{\n              \nid\n:\nput the product id for android here\n\n          }\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u4ee5\u5305\u542b\u5982\u4e0b\u5fc5\u987b\u5934\u6587\u4ef6, \u5e76\u8c03\u7528 \nIAP\n \u7684lua\u6ce8\u518c\u51fd\u6570.\u6ce8\u610f\u5b83\u4eec\u7684\u53c2\u6570 \nlua_State*\n :\n\n\n#include \nPluginIAPLua.hpp\n\n#include \nPluginIAPLuaHelper.hpp\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginIAPLua(L);\n  register_PluginIAPLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 IAP\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u53bb\u521d\u59cb\u63d2\u4ef6, \u521d\u59cb\u5316\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u6765\u505a,\u4f46\u662f\u5fc5\u987b\u8981\u5728\u4f60\u60f3\u4f7f\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u4e4b\u524d.\n\n\nsdkbox.IAP:init()\n\n\n\n\n\u83b7\u53d6\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e\n\n\n\u6700\u597d\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u524d\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u4e00\u6b21\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e\n\n\n\u8981\u83b7\u53d6\u5546\u54c1\u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u8c03\u7528 \nsdkbox.IAP:refresh()\n.\n\n\n\n\nonProductRequestSuccess\n \u83b7\u53d6\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonProductRequestFailure\n \u83b7\u53d6\u5931\u8d25\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u8d2d\u4e70\n\n\n\u8d2d\u4e70\u5546\u53e3\u8c03\u7528 \nsdkbox.IAP:purchase(name)\n\n\n\u6ce8\u610f:\n \nname\n \u662f\u4f60\u5de5\u7a0b\u7684 IAP \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 \nitems\n \u9879\u4e0b\u7684\u540d\u5b57,\u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u5546\u54c1\u540d\n\n\n\n\nonSuccess\n \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.\n\n\nonFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\nonCanceled\n \u7528\u6237\u53d6\u6d88\u8d2d\u4e70,\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u6062\u590d\u8d2d\u4e70\n\n\n\u6062\u590d\u8d2d\u4e70\u8c03\u7528 \nsdkbox.IAP:restore()\n.\n\n\n\n\nonRestored\n \u6062\u590d\u6210\u529f\u4e8b\u4ef6.\n\n\n\n\n\u6ce8\u610f:\n \nonRestored\n \u53ef\u80fd\u88ab\u4f1a\u591a\u6b21\u89e6\u53d1\n\n\n\u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536\u4ed8\u8d39\u8fc7\u7a0b\u4e2d\u7684 \nIAP\n \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u7528\u6237, IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\nsdkbox.IAP:setListener(function(args)\n        if \nonSuccess\n == args.event then\n                local product = args.product\n                dump(product, \nonSuccess:\n)\n        elseif \nonFailure\n == args.event then\n                local product = args.product\n                local msg = args.msg\n                dump(product, \nonFailure:\n)\n                print(\nmsg:\n, msg)\n        elseif \nonCanceled\n == args.event then\n                local product = args.product\n                dump(product, \nonCanceled:\n)\n        elseif \nonRestored\n == args.event then\n                local product = args.product\n                dump(product, \nonRestored:\n)\n        elseif \nonProductRequestSuccess\n == args.event then\n                local products = args.products\n                dump(products, \nonProductRequestSuccess:\n)\n        elseif \nonProductRequestFailure\n == args.event then\n                local msg = args.msg\n                print(\nmsg:\n, msg)\n        else\n                print(\nunknow event \n, args.event)\n        end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.IAP:init()\n\n\n\n\n\n\nInitialize SDKBox IAP\n\n\n\n\nsdkbox.IAP:setDebug(debug)\n\n\n\n\n\n\nEnable/disable debug logging\n\n\n\n\nsdkbox.IAP:purchase(name)\n\n\n\n\n\n\nMake a purchase request\n\n\n\n\nsdkbox.IAP:refresh()\n\n\n\n\n\n\nRefresh the IAP data(title, price, description)\n\n\n\n\nsdkbox.IAP:restore()\n\n\n\n\n\n\nRestore purchase\n\n\n\n\nsdkbox.IAP:setListener(listener)\n\n\n\n\n\n\nSet listener for IAP\n\n\n\n\nsdkbox.IAP:removeListener()\n\n\n\n\n\n\nRemove listener for IAP\n\n\n\n\nListeners\n\n\nsdkbox.IAP:onSuccess(product)\n\n\n\n\n\n\nCalled when an IAP processed successfully\n\n\n\n\nsdkbox.IAP:onFailure(product, message)\n\n\n\n\n\n\nCalled when an IAP fails\n\n\n\n\nsdkbox.IAP:onCanceled(product)\n\n\n\n\n\n\nCalled when user canceled the IAP\n\n\n\n\nsdkbox.IAP:onRestored(product)\n\n\n\n\n\n\nCalled when server returns the IAP items user already purchased\n\n\n\n\nsdkbox.IAP:onProductRequestSuccess(products)\n\n\n\n\n\n\nCalled the product request is successful, usually developers use product request to update the latest info(title, price) from IAP\n\n\n\n\nsdkbox.IAP:onProductRequestFailure(message)\n\n\n\n\n\n\nCalled when the product request fails", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/iap/v3-lua/#_1", 
            "text": "", 
            "title": "\u5e94\u7528\u5185\u4ed8\u8d39"
        }, 
        {
            "location": "/plugins/iap/v3-lua/#_2", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import iap", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/iap/v3-lua/#_3", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/iap/v3-lua/#_4", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728 iTunes Connect \u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362  put the product id for ios here ,\u6216\u8005,\u5728 Google Play Console \u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362 put your googleplay key here  ios  :\n{\n     iap :{\n         items :{\n             remove_ads :{\n                 id : put the product id for ios here \n            }\n        }\n    }\n}, android :\n{\n     iap :{\n         key : put your googleplay key here ,\n         items :{\n           remove_ads :{\n               id : put the product id for android here \n          }\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/iap/v3-lua/#_5", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u4ee5\u5305\u542b\u5982\u4e0b\u5fc5\u987b\u5934\u6587\u4ef6, \u5e76\u8c03\u7528  IAP  \u7684lua\u6ce8\u518c\u51fd\u6570.\u6ce8\u610f\u5b83\u4eec\u7684\u53c2\u6570  lua_State*  :  #include  PluginIAPLua.hpp \n#include  PluginIAPLuaHelper.hpp   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginIAPLua(L);\n  register_PluginIAPLua_helper(L);\n}  \u521d\u59cb\u5316 IAP  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u53bb\u521d\u59cb\u63d2\u4ef6, \u521d\u59cb\u5316\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u6765\u505a,\u4f46\u662f\u5fc5\u987b\u8981\u5728\u4f60\u60f3\u4f7f\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u4e4b\u524d.  sdkbox.IAP:init()  \u83b7\u53d6\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e  \u6700\u597d\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u524d\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u4e00\u6b21\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e  \u8981\u83b7\u53d6\u5546\u54c1\u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u8c03\u7528  sdkbox.IAP:refresh() .   onProductRequestSuccess  \u83b7\u53d6\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onProductRequestFailure  \u83b7\u53d6\u5931\u8d25\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.   \u8d2d\u4e70  \u8d2d\u4e70\u5546\u53e3\u8c03\u7528  sdkbox.IAP:purchase(name)  \u6ce8\u610f:   name  \u662f\u4f60\u5de5\u7a0b\u7684 IAP \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684  items  \u9879\u4e0b\u7684\u540d\u5b57,\u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u5546\u54c1\u540d   onSuccess  \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.  onFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.  onCanceled  \u7528\u6237\u53d6\u6d88\u8d2d\u4e70,\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.   \u6062\u590d\u8d2d\u4e70  \u6062\u590d\u8d2d\u4e70\u8c03\u7528  sdkbox.IAP:restore() .   onRestored  \u6062\u590d\u6210\u529f\u4e8b\u4ef6.   \u6ce8\u610f:   onRestored  \u53ef\u80fd\u88ab\u4f1a\u591a\u6b21\u89e6\u53d1  \u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536\u4ed8\u8d39\u8fc7\u7a0b\u4e2d\u7684  IAP  \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u7528\u6237, IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.  sdkbox.IAP:setListener(function(args)\n        if  onSuccess  == args.event then\n                local product = args.product\n                dump(product,  onSuccess: )\n        elseif  onFailure  == args.event then\n                local product = args.product\n                local msg = args.msg\n                dump(product,  onFailure: )\n                print( msg: , msg)\n        elseif  onCanceled  == args.event then\n                local product = args.product\n                dump(product,  onCanceled: )\n        elseif  onRestored  == args.event then\n                local product = args.product\n                dump(product,  onRestored: )\n        elseif  onProductRequestSuccess  == args.event then\n                local products = args.products\n                dump(products,  onProductRequestSuccess: )\n        elseif  onProductRequestFailure  == args.event then\n                local msg = args.msg\n                print( msg: , msg)\n        else\n                print( unknow event  , args.event)\n        end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/iap/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.IAP:init()   Initialize SDKBox IAP   sdkbox.IAP:setDebug(debug)   Enable/disable debug logging   sdkbox.IAP:purchase(name)   Make a purchase request   sdkbox.IAP:refresh()   Refresh the IAP data(title, price, description)   sdkbox.IAP:restore()   Restore purchase   sdkbox.IAP:setListener(listener)   Set listener for IAP   sdkbox.IAP:removeListener()   Remove listener for IAP   Listeners  sdkbox.IAP:onSuccess(product)   Called when an IAP processed successfully   sdkbox.IAP:onFailure(product, message)   Called when an IAP fails   sdkbox.IAP:onCanceled(product)   Called when user canceled the IAP   sdkbox.IAP:onRestored(product)   Called when server returns the IAP items user already purchased   sdkbox.IAP:onProductRequestSuccess(products)   Called the product request is successful, usually developers use product request to update the latest info(title, price) from IAP   sdkbox.IAP:onProductRequestFailure(message)   Called when the product request fails", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/", 
            "text": "\u5e94\u7528\u5185\u4ed8\u8d39\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import iap\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728\niTunes Connect\n\u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362 \nput the product id for ios here\n,\u6216\u8005,\u5728\nGoogle Play Console\n\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362\nput your googleplay key here\n\n\nios\n :\n{\n    \niap\n:{\n        \nitems\n:{\n            \nremove_ads\n:{\n                \nid\n:\nput the product id for ios here\n\n            }\n        }\n    }\n},\n\nandroid\n:\n{\n    \niap\n:{\n        \nkey\n:\nput your googleplay key here\n,\n        \nitems\n:{\n          \nremove_ads\n:{\n              \nid\n:\nput the product id for android here\n\n          }\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 IAP\n\n\n\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6.\u6211\u4eec\u63a8\u8350\u5728 \nAppDelegate::applicationDidFinishLaunching()\n or \nAppController:didFinishLaunchingWithOptions()\n \u4e2d.\u786e\u4fdd\u5305\u542b\u4e86\u76f8\u5173\u7684\u5934\u6587\u4ef6:\n\n\n#include \nPluginIAP/PluginIAP.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::IAP::init();\n}\n\n\n\n\n\u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c\n\n\n\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.\n\n\n\u5728\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e, \u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528 \nsdkbox::IAP::refresh()\n.\n\n\n\n\nonProductRequestSuccess\n \u6210\u529f\u83b7\u53d6\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonProductRequestFailure\n \u83b7\u53d6\u5931\u8d25\u7684\u8bdd,\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u8d2d\u4e70\n\n\n\u8d2d\u4e70\u53ea\u9700\u8981\u8c03\u7528 \nsdkbox::IAP::purchase(name)\n\n\n\u6ce8\u610f:\n \nname\n \u662f\u4f60\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \nitems\n \u9879\u7684\u503c, \u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store \u4e2d\u7684\u5546\u54c1\u540d.\n\n\n\n\nonSuccess\n \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\nonCanceled\n \u7528\u6237\u53d6\u6d88\u4e86\u8d2d\u4e70.\n\n\n\n\n\u6062\u590d\u8d2d\u4e70\n\n\n\u6062\u590d\u8d2d\u4e70\u8c03\u7528 \nsdkbox::IAP::restore()\n.\n\n\n\n\nonRestored\n \u6062\u590d\u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.\n\n\n\n\n\u6ce8\u610f:\n \nonRestored\n \u53ef\u80fd\u4f1a\u88ab\u591a\u6b21\u89e6\u53d1\n\n\n\u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6\n\n\n\u5141\u8bb8\u4f60\u63a5\u6536 \nIAP\n \u7684\u4e8b\u4ef6,\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5bf9\u7528\u6237,IAP\u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\n\n\n\u7ee7\u627f\u8fd9\u4e2a\u7c7b \nsdkbox::IAPListener\n:\n\n\n\n\n    #include \nPluginIAP/PluginIAP.h\n\n    class MyClass : public sdkbox::IAPListener\n    {\n    private:\n        virtual void onSuccess(sdkbox::Product const\n p) override;\n        virtual void onFailure(sdkbox::Product const\n p, const std::string \nmsg)\n           override;\n        virtual void onCanceled(sdkbox::Product const\n p) override;\n        virtual void onRestored(sdkbox::Product const\n p) override;\n        virtual void onProductRequestSuccess(std::vector\nsdkbox::Product\n const \nproducts)\n        override;\n        virtual void onProductRequestFailure(const std::string \nmsg) override;\n    }\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03\u4e8b\u4ef6:\n\n\n\n\nsdkbox::IAP::setListener(listener);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\nInitialize SDKBox IAP\n\n\n\n\nstatic void setDebug(bool debug);\n\n\n\n\n\n\nEnable/disable debug logging\n\n\n\n\nstatic void purchase(const std::string\n name);\n\n\n\n\n\n\nMake a purchase request\n\n\n\n\nstatic void refresh();\n\n\n\n\n\n\nRefresh the IAP data(title, price, description)\n\n\n\n\nstatic void restore();\n\n\n\n\n\n\nRestore purchase\n\n\n\n\nstatic void setListener(IAPListener* listener);\n\n\n\n\n\n\nSet listener for IAP\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nRemove listener for IAP\n\n\n\n\nListeners\n\n\nvirtual void onSuccess(const Product\n p) = 0;\n\n\n\n\n\n\nCalled when an IAP processed successfully\n\n\n\n\nvirtual void onFailure(const Product\n p, const std::string\n msg) = 0;\n\n\n\n\n\n\nCalled when an IAP fails\n\n\n\n\nvirtual void onCanceled(const Product\n p) = 0;\n\n\n\n\n\n\nCalled when user canceled the IAP\n\n\n\n\nvirtual void onRestored(const Product\n p) = 0;\n\n\n\n\n\n\nCalled when server returns the IAP items user already purchased\n\n\n\n\nvirtual void onProductRequestSuccess(const std::vector\nProduct\n products) = 0;\n\n\n\n\n\n\nCalled the product request is successful, usually developers use product request to update the latest info(title, price) from IAP\n\n\n\n\nvirtual void onProductRequestFailure(const std::string\n msg) = 0;\n\n\n\n\n\n\nCalled when the product request fails", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/#_1", 
            "text": "", 
            "title": "\u5e94\u7528\u5185\u4ed8\u8d39"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/#_2", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import iap", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/#_3", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/#_4", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728 iTunes Connect \u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362  put the product id for ios here ,\u6216\u8005,\u5728 Google Play Console \u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362 put your googleplay key here  ios  :\n{\n     iap :{\n         items :{\n             remove_ads :{\n                 id : put the product id for ios here \n            }\n        }\n    }\n}, android :\n{\n     iap :{\n         key : put your googleplay key here ,\n         items :{\n           remove_ads :{\n               id : put the product id for android here \n          }\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/#_5", 
            "text": "\u521d\u59cb\u5316 IAP  \u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u5408\u9002\u7684\u5730\u65b9\u521d\u59cb\u5316\u63d2\u4ef6.\u6211\u4eec\u63a8\u8350\u5728  AppDelegate::applicationDidFinishLaunching()  or  AppController:didFinishLaunchingWithOptions()  \u4e2d.\u786e\u4fdd\u5305\u542b\u4e86\u76f8\u5173\u7684\u5934\u6587\u4ef6:  #include  PluginIAP/PluginIAP.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::IAP::init();\n}  \u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c  \u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.  \u5728\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e, \u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528  sdkbox::IAP::refresh() .   onProductRequestSuccess  \u6210\u529f\u83b7\u53d6\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onProductRequestFailure  \u83b7\u53d6\u5931\u8d25\u7684\u8bdd,\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.   \u8d2d\u4e70  \u8d2d\u4e70\u53ea\u9700\u8981\u8c03\u7528  sdkbox::IAP::purchase(name)  \u6ce8\u610f:   name  \u662f\u4f60\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d  items  \u9879\u7684\u503c, \u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store \u4e2d\u7684\u5546\u54c1\u540d.   onSuccess  \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.  onCanceled  \u7528\u6237\u53d6\u6d88\u4e86\u8d2d\u4e70.   \u6062\u590d\u8d2d\u4e70  \u6062\u590d\u8d2d\u4e70\u8c03\u7528  sdkbox::IAP::restore() .   onRestored  \u6062\u590d\u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.   \u6ce8\u610f:   onRestored  \u53ef\u80fd\u4f1a\u88ab\u591a\u6b21\u89e6\u53d1  \u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6  \u5141\u8bb8\u4f60\u63a5\u6536  IAP  \u7684\u4e8b\u4ef6,\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5bf9\u7528\u6237,IAP\u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.   \u7ee7\u627f\u8fd9\u4e2a\u7c7b  sdkbox::IAPListener :       #include  PluginIAP/PluginIAP.h \n    class MyClass : public sdkbox::IAPListener\n    {\n    private:\n        virtual void onSuccess(sdkbox::Product const  p) override;\n        virtual void onFailure(sdkbox::Product const  p, const std::string  msg)\n           override;\n        virtual void onCanceled(sdkbox::Product const  p) override;\n        virtual void onRestored(sdkbox::Product const  p) override;\n        virtual void onProductRequestSuccess(std::vector sdkbox::Product  const  products)\n        override;\n        virtual void onProductRequestFailure(const std::string  msg) override;\n    }   \u521b\u5efa\u4e00\u4e2a\u76d1\u542c\u7c7b\u6765\u63a5\u6536\u56de\u8c03\u4e8b\u4ef6:   sdkbox::IAP::setListener(listener);", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/iap/v2-cpp/#api-reference", 
            "text": "Methods  static void init();   Initialize SDKBox IAP   static void setDebug(bool debug);   Enable/disable debug logging   static void purchase(const std::string  name);   Make a purchase request   static void refresh();   Refresh the IAP data(title, price, description)   static void restore();   Restore purchase   static void setListener(IAPListener* listener);   Set listener for IAP   static void removeListener();   Remove listener for IAP   Listeners  virtual void onSuccess(const Product  p) = 0;   Called when an IAP processed successfully   virtual void onFailure(const Product  p, const std::string  msg) = 0;   Called when an IAP fails   virtual void onCanceled(const Product  p) = 0;   Called when user canceled the IAP   virtual void onRestored(const Product  p) = 0;   Called when server returns the IAP items user already purchased   virtual void onProductRequestSuccess(const std::vector Product  products) = 0;   Called the product request is successful, usually developers use product request to update the latest info(title, price) from IAP   virtual void onProductRequestFailure(const std::string  msg) = 0;   Called when the product request fails", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/iap/v2-js/", 
            "text": "\u5e94\u7528\u5185\u4ed8\u8d39\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import iap\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728\niTunes Connect\n\u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362 \nput the product id for ios here\n,\u6216\u8005,\u5728\nGoogle Play Console\n\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362\nput your googleplay key here\n\n\nios\n :\n{\n    \niap\n:{\n        \nitems\n:{\n            \nremove_ads\n:{\n                \nid\n:\nput the product id for ios here\n\n            }\n        }\n    }\n},\n\nandroid\n:\n{\n    \niap\n:{\n        \nkey\n:\nput your googleplay key here\n,\n        \nitems\n:{\n          \nremove_ads\n:{\n              \nid\n:\nput the product id for android here\n\n          }\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u521d\u59cb\u5316 IAP\n\n\n\n\n\u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 \ninit()\n \u5b8c\u6210\u521d\u59cb\u5316. \u6211\u4eec\u63a8\u8350\u5728 \napp.js\n \u4e2d\u5b8c\u6210\u521d\u59cb\u5316.\u6bd4\u5982:\n\n\n\n\nsdkbox.IAP.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:\n\n\n\n\n#include \nPluginIAPJS.hpp\n\n#include \nPluginIAPJSHelper.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u786e\u4fdd\u8c03\u7528\u4e86\u5982\u4e0b\u51fd\u6570:\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginIAPJS);\nsc-\naddRegisterCallback(register_all_PluginIAPJS_helper);\n\n\n\n\n\u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c\n\n\n\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.\n\n\n\u8981\u83b7\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528 \nsdkbox.IAP.refresh()\n.\n\n\n\n\nonProductRequestSuccess\n \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonProductRequestFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\n\n\n\u8d2d\u4e70\n\n\n\u8d2d\u4e70\u8c03\u7528 \nsdkbox.IAP.purchase(name)\n\n\n\u6ce8\u610f:\n \nname\n \u662f\u5728\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d \nitems\n \u9879\u7684\u540d\u5b57,\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u4ea7\u54c1id.\n\n\n\n\nonSuccess\n \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.\n\n\nonFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\nonCanceled\n \u7528\u6237\u53d6\u6d88\u8d2d\u4e70\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u6062\u590d\u8d2d\u4e70\n\n\n\u6062\u590d\u8d2d\u4e70\u8c03\u7528 \nsdkbox.IAP.restore()\n.\n\n\n\n\nonRestored\n \u6062\u590d\u8d2d\u4e70\u6210\u529f.\n\n\n\n\n\u6ce8\u610f:\n \nonRestored\n \u53ef\u80fd\u4f1a\u89e6\u53d1\u591a\u6b21\n\n\n\u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536 \nIAP\n \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u4f60\u7684\u7528\u6237\u53ca IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\nsdkbox.IAP.setListener({\n    onSuccess : function (product) {\n        //Purchase success\n    },\n    onFailure : function (product, msg) {\n        //Purchase failed\n        //msg is the error message\n    },\n    onCanceled : function (product) {\n        //Purchase was canceled by user\n    },\n    onRestored : function (product) {\n        //Purchase restored\n    },\n    onProductRequestSuccess : function (products) {\n        //Returns you the data for all the iap products\n        //You can get each item using following method\n        for (var i = 0; i \n products.length; i++) {\n            // loop\n        }\n    },\n    onProductRequestFailure : function (msg) {\n        //When product refresh request fails.\n    }\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.IAP.init();\n\n\n\n\n\n\nInitialize SDKBox IAP\n\n\n\n\nsdkbox.IAP.setDebug(debug);\n\n\n\n\n\n\nEnable/disable debug logging\n\n\n\n\nsdkbox.IAP.purchase(name);\n\n\n\n\n\n\nMake a purchase request\n\n\n\n\nsdkbox.IAP.refresh();\n\n\n\n\n\n\nRefresh the IAP data(title, price, description)\n\n\n\n\nsdkbox.IAP.restore();\n\n\n\n\n\n\nRestore purchase\n\n\n\n\nsdkbox.IAP.setListener(listener);\n\n\n\n\n\n\nSet listener for IAP\n\n\n\n\nsdkbox.IAP.removeListener();\n\n\n\n\n\n\nRemove listener for IAP\n\n\n\n\nListeners\n\n\nsdkbox.IAP.onSuccess(product);\n\n\n\n\n\n\nCalled when an IAP processed successfully\n\n\n\n\nsdkbox.IAP.onFailure(product, message);\n\n\n\n\n\n\nCalled when an IAP fails\n\n\n\n\nsdkbox.IAP.onCanceled(product);\n\n\n\n\n\n\nCalled when user canceled the IAP\n\n\n\n\nsdkbox.IAP.onRestored(product);\n\n\n\n\n\n\nCalled when server returns the IAP items user already purchased\n\n\n\n\nsdkbox.IAP.onProductRequestSuccess(products);\n\n\n\n\n\n\nCalled the product request is successful, usually developers use product request to update the latest info(title, price) from IAP\n\n\n\n\nsdkbox.IAP.onProductRequestFailure(message);\n\n\n\n\n\n\nCalled when the product request fails", 
            "title": "js"
        }, 
        {
            "location": "/plugins/iap/v2-js/#_1", 
            "text": "", 
            "title": "\u5e94\u7528\u5185\u4ed8\u8d39"
        }, 
        {
            "location": "/plugins/iap/v2-js/#_2", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import iap", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/iap/v2-js/#_3", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/iap/v2-js/#_4", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728 iTunes Connect \u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362  put the product id for ios here ,\u6216\u8005,\u5728 Google Play Console \u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362 put your googleplay key here  ios  :\n{\n     iap :{\n         items :{\n             remove_ads :{\n                 id : put the product id for ios here \n            }\n        }\n    }\n}, android :\n{\n     iap :{\n         key : put your googleplay key here ,\n         items :{\n           remove_ads :{\n               id : put the product id for android here \n          }\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/iap/v2-js/#_5", 
            "text": "\u521d\u59cb\u5316 IAP   \u5728\u4f60\u7684\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528  init()  \u5b8c\u6210\u521d\u59cb\u5316. \u6211\u4eec\u63a8\u8350\u5728  app.js  \u4e2d\u5b8c\u6210\u521d\u59cb\u5316.\u6bd4\u5982:   sdkbox.IAP.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u5934\u6587\u4ef6:   #include  PluginIAPJS.hpp \n#include  PluginIAPJSHelper.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u786e\u4fdd\u8c03\u7528\u4e86\u5982\u4e0b\u51fd\u6570:   sc- addRegisterCallback(register_all_PluginIAPJS);\nsc- addRegisterCallback(register_all_PluginIAPJS_helper);  \u83b7\u53d6\u6700\u65b0\u7684\u4ef7\u683c  \u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u65f6,\u6700\u597d\u5148\u4ece\u5546\u5e97\u4e2d\u53d6\u6700\u65b0\u7684\u5546\u54c1\u4ef7\u683c\u4fe1\u606f.  \u8981\u83b7\u53d6\u6700\u65b0\u7684 IAP \u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u5730\u8c03\u7528  sdkbox.IAP.refresh() .   onProductRequestSuccess  \u8d2d\u4e70\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onProductRequestFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.   \u8d2d\u4e70  \u8d2d\u4e70\u8c03\u7528  sdkbox.IAP.purchase(name)  \u6ce8\u610f:   name  \u662f\u5728\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d  items  \u9879\u7684\u540d\u5b57,\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u4ea7\u54c1id.   onSuccess  \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.  onFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.  onCanceled  \u7528\u6237\u53d6\u6d88\u8d2d\u4e70\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.   \u6062\u590d\u8d2d\u4e70  \u6062\u590d\u8d2d\u4e70\u8c03\u7528  sdkbox.IAP.restore() .   onRestored  \u6062\u590d\u8d2d\u4e70\u6210\u529f.   \u6ce8\u610f:   onRestored  \u53ef\u80fd\u4f1a\u89e6\u53d1\u591a\u6b21  \u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536  IAP  \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u4f60\u7684\u7528\u6237\u53ca IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.  sdkbox.IAP.setListener({\n    onSuccess : function (product) {\n        //Purchase success\n    },\n    onFailure : function (product, msg) {\n        //Purchase failed\n        //msg is the error message\n    },\n    onCanceled : function (product) {\n        //Purchase was canceled by user\n    },\n    onRestored : function (product) {\n        //Purchase restored\n    },\n    onProductRequestSuccess : function (products) {\n        //Returns you the data for all the iap products\n        //You can get each item using following method\n        for (var i = 0; i   products.length; i++) {\n            // loop\n        }\n    },\n    onProductRequestFailure : function (msg) {\n        //When product refresh request fails.\n    }\n});", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/iap/v2-js/#api-reference", 
            "text": "Methods  sdkbox.IAP.init();   Initialize SDKBox IAP   sdkbox.IAP.setDebug(debug);   Enable/disable debug logging   sdkbox.IAP.purchase(name);   Make a purchase request   sdkbox.IAP.refresh();   Refresh the IAP data(title, price, description)   sdkbox.IAP.restore();   Restore purchase   sdkbox.IAP.setListener(listener);   Set listener for IAP   sdkbox.IAP.removeListener();   Remove listener for IAP   Listeners  sdkbox.IAP.onSuccess(product);   Called when an IAP processed successfully   sdkbox.IAP.onFailure(product, message);   Called when an IAP fails   sdkbox.IAP.onCanceled(product);   Called when user canceled the IAP   sdkbox.IAP.onRestored(product);   Called when server returns the IAP items user already purchased   sdkbox.IAP.onProductRequestSuccess(products);   Called the product request is successful, usually developers use product request to update the latest info(title, price) from IAP   sdkbox.IAP.onProductRequestFailure(message);   Called when the product request fails", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/iap/v2-lua/", 
            "text": "\u5e94\u7528\u5185\u4ed8\u8d39\n\n\n\u96c6\u6210\n\n\n\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.\n\n\nsdkbox import iap\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6\nsdkbox_config.json\n.\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f\n\n\n\u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728\niTunes Connect\n\u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362 \nput the product id for ios here\n,\u6216\u8005,\u5728\nGoogle Play Console\n\u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362\nput your googleplay key here\n\n\nios\n :\n{\n    \niap\n:{\n        \nitems\n:{\n            \nremove_ads\n:{\n                \nid\n:\nput the product id for ios here\n\n            }\n        }\n    }\n},\n\nandroid\n:\n{\n    \niap\n:{\n        \nkey\n:\nput your googleplay key here\n,\n        \nitems\n:{\n          \nremove_ads\n:{\n              \nid\n:\nput the product id for android here\n\n          }\n        }\n    }\n}\n\n\n\n\n\u7528\u6cd5\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u5305\u542b\u5982\u4e0b\u6587\u4ef6:\n\n\n\n\n#include \nPluginIAPLua.hpp\n\n#include \nPluginIAPLuaHelper.hpp\n\n\n\n\n\n\n\n\u7136\u540e, \u6211\u4eec\u9700\u8981\u8c03\u7528 \nregister_all_PluginIAPLua(\nlua_State*\n);\n \u6765\u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.\n\n\n\n\n\u6ce8\u610f:\n \u4e00\u5b9a\u8981\u8981\u4fdd\u8bc1\u4e0a\u9762\u7684\u8c03\u7528\u662f\u5728\nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e, \u800c\u4e14\u662f\u5728 \ntolua_extensions_ccb_open(tolua_s);\n.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50:\n\n\n\n#include \nPluginIAPLua.hpp\n\n#include \nPluginIAPLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginIAPLua(tolua_s);\n    register_all_PluginIAPLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 IAP\n\n\n\u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u53bb\u521d\u59cb\u63d2\u4ef6, \u521d\u59cb\u5316\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u6765\u505a,\u4f46\u662f\u5fc5\u987b\u8981\u5728\u4f60\u60f3\u4f7f\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u4e4b\u524d.\n\n\nsdkbox.IAP:init()\n\n\n\n\n\u83b7\u53d6\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e\n\n\n\u6700\u597d\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u524d\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u4e00\u6b21\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e\n\n\n\u8981\u83b7\u53d6\u5546\u54c1\u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u8c03\u7528 \nsdkbox.IAP:refresh()\n.\n\n\n\n\nonProductRequestSuccess\n \u83b7\u53d6\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\nonProductRequestFailure\n \u83b7\u53d6\u5931\u8d25\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u8d2d\u4e70\n\n\n\u8d2d\u4e70\u5546\u53e3\u8c03\u7528 \nsdkbox.IAP:purchase(name)\n\n\n\u6ce8\u610f:\n \nname\n \u662f\u4f60\u5de5\u7a0b\u7684 IAP \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 \nitems\n \u9879\u4e0b\u7684\u540d\u5b57,\u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u5546\u54c1\u540d\n\n\n\n\nonSuccess\n \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.\n\n\nonFailure\n \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.\n\n\nonCanceled\n \u7528\u6237\u53d6\u6d88\u8d2d\u4e70,\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.\n\n\n\n\n\u6062\u590d\u8d2d\u4e70\n\n\n\u6062\u590d\u8d2d\u4e70\u8c03\u7528 \nsdkbox.IAP:restore()\n.\n\n\n\n\nonRestored\n \u6062\u590d\u6210\u529f\u4e8b\u4ef6.\n\n\n\n\n\u6ce8\u610f:\n \nonRestored\n \u53ef\u80fd\u88ab\u4f1a\u591a\u6b21\u89e6\u53d1\n\n\n\u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6\n\n\n\u4f60\u53ef\u4ee5\u63a5\u6536\u4ed8\u8d39\u8fc7\u7a0b\u4e2d\u7684 \nIAP\n \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u7528\u6237, IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.\n\n\nsdkbox.IAP:setListener(function(args)\n        if \nonSuccess\n == args.event then\n                local product = args.product\n                dump(product, \nonSuccess:\n)\n        elseif \nonFailure\n == args.event then\n                local product = args.product\n                local msg = args.msg\n                dump(product, \nonFailure:\n)\n                print(\nmsg:\n, msg)\n        elseif \nonCanceled\n == args.event then\n                local product = args.product\n                dump(product, \nonCanceled:\n)\n        elseif \nonRestored\n == args.event then\n                local product = args.product\n                dump(product, \nonRestored:\n)\n        elseif \nonProductRequestSuccess\n == args.event then\n                local products = args.products\n                dump(products, \nonProductRequestSuccess:\n)\n        elseif \nonProductRequestFailure\n == args.event then\n                local msg = args.msg\n                print(\nmsg:\n, msg)\n        else\n                print(\nunknow event \n, args.event)\n        end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.IAP:init()\n\n\n\n\n\n\nInitialize SDKBox IAP\n\n\n\n\nsdkbox.IAP:setDebug(debug)\n\n\n\n\n\n\nEnable/disable debug logging\n\n\n\n\nsdkbox.IAP:purchase(name)\n\n\n\n\n\n\nMake a purchase request\n\n\n\n\nsdkbox.IAP:refresh()\n\n\n\n\n\n\nRefresh the IAP data(title, price, description)\n\n\n\n\nsdkbox.IAP:restore()\n\n\n\n\n\n\nRestore purchase\n\n\n\n\nsdkbox.IAP:setListener(listener)\n\n\n\n\n\n\nSet listener for IAP\n\n\n\n\nsdkbox.IAP:removeListener()\n\n\n\n\n\n\nRemove listener for IAP\n\n\n\n\nListeners\n\n\nsdkbox.IAP:onSuccess(product)\n\n\n\n\n\n\nCalled when an IAP processed successfully\n\n\n\n\nsdkbox.IAP:onFailure(product, message)\n\n\n\n\n\n\nCalled when an IAP fails\n\n\n\n\nsdkbox.IAP:onCanceled(product)\n\n\n\n\n\n\nCalled when user canceled the IAP\n\n\n\n\nsdkbox.IAP:onRestored(product)\n\n\n\n\n\n\nCalled when server returns the IAP items user already purchased\n\n\n\n\nsdkbox.IAP:onProductRequestSuccess(products)\n\n\n\n\n\n\nCalled the product request is successful, usually developers use product request to update the latest info(title, price) from IAP\n\n\n\n\nsdkbox.IAP:onProductRequestFailure(message)\n\n\n\n\n\n\nCalled when the product request fails", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/iap/v2-lua/#_1", 
            "text": "", 
            "title": "\u5e94\u7528\u5185\u4ed8\u8d39"
        }, 
        {
            "location": "/plugins/iap/v2-lua/#_2", 
            "text": "\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX IAP \u63d2\u4ef6,\u8bf7\u786e\u4fdd\u4f60\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684 SDKBOX \u5b89\u88c5\u5668.  sdkbox import iap", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/iap/v2-lua/#_3", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/iap/v2-lua/#_4", 
            "text": "SDKBOX \u5b89\u88c5\u5668\u4f1a\u81ea\u52a8\u5728\u4f60\u7684\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6837\u4f8b\u914d\u7f6e\u6587\u4ef6 sdkbox_config.json .\u5728\u4f60\u7f16\u8bd1\u5de5\u7a0b\u524d,\u8bf7\u4fee\u6539\u91cc\u9762\u7684\u53c2\u6570,\u7528\u4f60\u81ea\u5df1\u7684\u5e94\u7528\u4fe1\u606f  \u73b0\u5728\u7ed9\u4e00\u4e2a\u4fee\u6539\u4f8b\u5b50,\u4f60\u9700\u8981\u5728 iTunes Connect \u83b7\u53d6\u4e00\u4e2a\u5e94\u7528id,\u7136\u540e\u66ff\u6362  put the product id for ios here ,\u6216\u8005,\u5728 Google Play Console \u7533\u8bf7\u4e00\u4e2a\u5e94\u7528id,\u5e76\u66ff\u6362 put your googleplay key here  ios  :\n{\n     iap :{\n         items :{\n             remove_ads :{\n                 id : put the product id for ios here \n            }\n        }\n    }\n}, android :\n{\n     iap :{\n         key : put your googleplay key here ,\n         items :{\n           remove_ads :{\n               id : put the product id for android here \n          }\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/iap/v2-lua/#_5", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u5305\u542b\u5982\u4e0b\u6587\u4ef6:   #include  PluginIAPLua.hpp \n#include  PluginIAPLuaHelper.hpp    \u7136\u540e, \u6211\u4eec\u9700\u8981\u8c03\u7528  register_all_PluginIAPLua( lua_State* );  \u6765\u628a\u63d2\u4ef6\u6ce8\u518c\u5230lua\u4e2d.   \u6ce8\u610f:  \u4e00\u5b9a\u8981\u8981\u4fdd\u8bc1\u4e0a\u9762\u7684\u8c03\u7528\u662f\u5728 lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e, \u800c\u4e14\u662f\u5728  tolua_extensions_ccb_open(tolua_s); .  \u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50:  #include  PluginIAPLua.hpp \n#include  PluginIAPLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginIAPLua(tolua_s);\n    register_all_PluginIAPLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 IAP  \u4fee\u6539\u4f60\u7684lua\u4ee3\u7801\u53bb\u521d\u59cb\u63d2\u4ef6, \u521d\u59cb\u5316\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u6765\u505a,\u4f46\u662f\u5fc5\u987b\u8981\u5728\u4f60\u60f3\u4f7f\u7528\u63d2\u4ef6\u7684\u529f\u80fd\u4e4b\u524d.  sdkbox.IAP:init()  \u83b7\u53d6\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e  \u6700\u597d\u5728\u4f60\u7684\u6e38\u620f\u5f00\u59cb\u524d\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u4e00\u6b21\u6700\u65b0\u7684\u5546\u54c1\u6570\u636e  \u8981\u83b7\u53d6\u5546\u54c1\u6570\u636e,\u53ea\u9700\u8981\u7b80\u5355\u8c03\u7528  sdkbox.IAP:refresh() .   onProductRequestSuccess  \u83b7\u53d6\u6210\u529f\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.  onProductRequestFailure  \u83b7\u53d6\u5931\u8d25\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6.   \u8d2d\u4e70  \u8d2d\u4e70\u5546\u53e3\u8c03\u7528  sdkbox.IAP:purchase(name)  \u6ce8\u610f:   name  \u662f\u4f60\u5de5\u7a0b\u7684 IAP \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684  items  \u9879\u4e0b\u7684\u540d\u5b57,\u800c\u4e0d\u662f\u4f60\u5728 iTunes \u6216 GooglePlay Store\u4e2d\u7684\u5546\u54c1\u540d   onSuccess  \u8d2d\u4e70\u6210\u529f\u4e8b\u4ef6.  onFailure  \u8d2d\u4e70\u5931\u8d25\u4e8b\u4ef6.  onCanceled  \u7528\u6237\u53d6\u6d88\u8d2d\u4e70,\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6.   \u6062\u590d\u8d2d\u4e70  \u6062\u590d\u8d2d\u4e70\u8c03\u7528  sdkbox.IAP:restore() .   onRestored  \u6062\u590d\u6210\u529f\u4e8b\u4ef6.   \u6ce8\u610f:   onRestored  \u53ef\u80fd\u88ab\u4f1a\u591a\u6b21\u89e6\u53d1  \u5904\u7406\u4ed8\u8d39\u4e8b\u4ef6  \u4f60\u53ef\u4ee5\u63a5\u6536\u4ed8\u8d39\u8fc7\u7a0b\u4e2d\u7684  IAP  \u4e8b\u4ef6, \u4e0d\u540c\u4e8b\u4ef6\u5bf9\u7528\u6237, IAP \u670d\u52a1\u5668\u505a\u4e0d\u540c\u7684\u5904\u7406.  sdkbox.IAP:setListener(function(args)\n        if  onSuccess  == args.event then\n                local product = args.product\n                dump(product,  onSuccess: )\n        elseif  onFailure  == args.event then\n                local product = args.product\n                local msg = args.msg\n                dump(product,  onFailure: )\n                print( msg: , msg)\n        elseif  onCanceled  == args.event then\n                local product = args.product\n                dump(product,  onCanceled: )\n        elseif  onRestored  == args.event then\n                local product = args.product\n                dump(product,  onRestored: )\n        elseif  onProductRequestSuccess  == args.event then\n                local products = args.products\n                dump(products,  onProductRequestSuccess: )\n        elseif  onProductRequestFailure  == args.event then\n                local msg = args.msg\n                print( msg: , msg)\n        else\n                print( unknow event  , args.event)\n        end\nend)", 
            "title": "\u7528\u6cd5"
        }, 
        {
            "location": "/plugins/iap/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.IAP:init()   Initialize SDKBox IAP   sdkbox.IAP:setDebug(debug)   Enable/disable debug logging   sdkbox.IAP:purchase(name)   Make a purchase request   sdkbox.IAP:refresh()   Refresh the IAP data(title, price, description)   sdkbox.IAP:restore()   Restore purchase   sdkbox.IAP:setListener(listener)   Set listener for IAP   sdkbox.IAP:removeListener()   Remove listener for IAP   Listeners  sdkbox.IAP:onSuccess(product)   Called when an IAP processed successfully   sdkbox.IAP:onFailure(product, message)   Called when an IAP fails   sdkbox.IAP:onCanceled(product)   Called when user canceled the IAP   sdkbox.IAP:onRestored(product)   Called when server returns the IAP items user already purchased   sdkbox.IAP:onProductRequestSuccess(products)   Called the product request is successful, usually developers use product request to update the latest info(title, price) from IAP   sdkbox.IAP:onProductRequestFailure(message)   Called when the product request fails", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/", 
            "text": "Kochava\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002\n\n\nsdkbox import kochava\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nKOCHAVA_APP_ID\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nKochava \n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nKochava\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nkochava\n :\n{\n    \nkochavaAppId\n : \nKOCHAVA_APP_ID\n,\n    \nenableLogging\n : 1,\n    \nretrieveAttribution\n : 1\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Kochava\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginKochava/PluginKochava.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginKochava::init();\n}\n\n\n\n\n\u8ffd\u8e2a\u4e8b\u4ef6\n\n\nKochava \u63d0\u4f9b\u4e86\u5bf9 \ncustom\n, \nspatial\n, \nreferral\n \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \ncustom\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox::PluginKochava::trackEvent(\nEVENT\n, \nVALUE\n);\n\n\n\n\n\n\n\u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a \nspatial\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox::PluginKochava::spatialEvent(\nTITLE\n, \nX\n, \nY\n, \nZ\n);\n\n\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \nreferral\n \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a\n\n\n\n\nsdkbox::PluginKochava::sendDeepLink(\nURI\n, \nYOUR APP\n);\n\n\n\n\nNote:\n \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\n\uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570 \n \u3002\n\n\n\u6355\u6349 Kochava \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u8f6e\u8be2\u5e76\u4e14\u6355\u6349 Kochava \u4e8b\u4ef6\uff0c \u8ba9\u60a8\u5728\u4e00\u4e2a\u53c2\u8003\u70b9\u6216\u8005\u5f52\u5c5e\u5730\u6570\u636e\u4ece\u670d\u52a1\u5668\u8fd4\u56de\u65f6\u5f97\u5230\u901a\u77e5\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u60a8\u5728\u4e00\u4e2a\u7528\u6237\u7a7f\u8fc7\u4fe1\u6807\u8fb9\u754c\u65f6\u5f97\u5230\u901a\u77e5\u3002\u6bd4\u5982\uff0c\u5f53\u4e00\u4e2a\u7528\u6237\u5728\u661f\u5df4\u514b\u9644\u8fd1\u65f6\uff0c\u6216\u8005\u8d70\u5411\u661f\u5df4\u514b\u65f6\u3002\u4e0b\u9762\u662f\u7528 \nlambda\n \u51fd\u6570\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a\n\n\nauto callback = [](const std::map\nstd::string, std::string\n* attribution)\n{\n  if (attribution)\n  {\n      typedef std::map\nstd::string, std::string\n map_type;\n      const map_type\n m = * attribution;\n\n      for (map_type::const_iterator it = m.begin(); it != m.end(); ++it)\n      {\n          const map_type::value_type\n kv = * it;\n          printf(\n%s -\n %s\n, kv.first.c_str(), kv.second.c_str());\n      }\n  }\n};\n\nsdkbox::PluginKochava::setAttributionCallback(callback);\n\n\n\n\nNote\n: \u8bf7\u6c42\u5c5e\u6027\u6570\u636e\u5c06\u4f1a\u6d88\u8017\u4e00\u70b9\u65f6\u95f4\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\u8c03\u7528 \ngetAttributionData()\n \uff0c\u76f4\u5230\u60a8\u5f97\u5230\u4e0d\u662f \nnull\n \u7684\u6570\u636e\u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the Kochava service.\n\n\n\n\nstatic void shutdown();\n\n\n\n\n\n\nshutdown the Kochava service.\n\n\n\n\nstatic void enableLogging(bool enabled);\n\n\n\n\n\n\nlog? true or false.\n\n\n\n\nstatic void trackEvent(const char* event, const char* value);\n\n\n\n\n\n\ntrack a single event, specifying the event and value.\n\n\n\n\nstatic void identityLinkEvent(const std::map\nstd::string, std::string\n data);\n\n\n\n\n\n\nlink one or more udid's to a Kochava id.\n\n\n\n\nstatic void spatialEvent(const char* title, float x, float y, float z);\n\n\n\n\n\n\nevent specifying x, y, and z coordinate to Kochava server for visualizing your data.\n\n\n\n\nstatic void setLimitAdTracking(bool limitAdTracking);\n\n\n\n\n\n\nturn ad tracking off or on by using true or false.\n\n\n\n\nconst std::map\nstd::string, std::string\n retrieveAttribution() const;\n\n\n\n\n\n\nreturns the attribution data.\n\n\n\n\nvoid sendDeepLink(const char* url, const char* application);\n\n\n\n\n\n\nsend a referral to where your app was opened from.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/#kochava", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002  sdkbox import kochava", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  KOCHAVA_APP_ID  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Kochava   \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Kochava  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  kochava  :\n{\n     kochavaAppId  :  KOCHAVA_APP_ID ,\n     enableLogging  : 1,\n     retrieveAttribution  : 1\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Kochava  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginKochava/PluginKochava.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginKochava::init();\n}  \u8ffd\u8e2a\u4e8b\u4ef6  Kochava \u63d0\u4f9b\u4e86\u5bf9  custom ,  spatial ,  referral  \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002   \u8ffd\u8e2a\u4e00\u4e2a  custom  \u4e8b\u4ef6\uff1a   sdkbox::PluginKochava::trackEvent( EVENT ,  VALUE );   \u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a  spatial  \u4e8b\u4ef6\uff1a   sdkbox::PluginKochava::spatialEvent( TITLE ,  X ,  Y ,  Z );   \u8ffd\u8e2a\u4e00\u4e2a  referral  \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a   sdkbox::PluginKochava::sendDeepLink( URI ,  YOUR APP );  Note:  \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08 \uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570   \u3002  \u6355\u6349 Kochava \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u8f6e\u8be2\u5e76\u4e14\u6355\u6349 Kochava \u4e8b\u4ef6\uff0c \u8ba9\u60a8\u5728\u4e00\u4e2a\u53c2\u8003\u70b9\u6216\u8005\u5f52\u5c5e\u5730\u6570\u636e\u4ece\u670d\u52a1\u5668\u8fd4\u56de\u65f6\u5f97\u5230\u901a\u77e5\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u60a8\u5728\u4e00\u4e2a\u7528\u6237\u7a7f\u8fc7\u4fe1\u6807\u8fb9\u754c\u65f6\u5f97\u5230\u901a\u77e5\u3002\u6bd4\u5982\uff0c\u5f53\u4e00\u4e2a\u7528\u6237\u5728\u661f\u5df4\u514b\u9644\u8fd1\u65f6\uff0c\u6216\u8005\u8d70\u5411\u661f\u5df4\u514b\u65f6\u3002\u4e0b\u9762\u662f\u7528  lambda  \u51fd\u6570\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a  auto callback = [](const std::map std::string, std::string * attribution)\n{\n  if (attribution)\n  {\n      typedef std::map std::string, std::string  map_type;\n      const map_type  m = * attribution;\n\n      for (map_type::const_iterator it = m.begin(); it != m.end(); ++it)\n      {\n          const map_type::value_type  kv = * it;\n          printf( %s -  %s , kv.first.c_str(), kv.second.c_str());\n      }\n  }\n};\n\nsdkbox::PluginKochava::setAttributionCallback(callback);  Note : \u8bf7\u6c42\u5c5e\u6027\u6570\u636e\u5c06\u4f1a\u6d88\u8017\u4e00\u70b9\u65f6\u95f4\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\u8c03\u7528  getAttributionData()  \uff0c\u76f4\u5230\u60a8\u5f97\u5230\u4e0d\u662f  null  \u7684\u6570\u636e\u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/kochava/v3-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the Kochava service.   static void shutdown();   shutdown the Kochava service.   static void enableLogging(bool enabled);   log? true or false.   static void trackEvent(const char* event, const char* value);   track a single event, specifying the event and value.   static void identityLinkEvent(const std::map std::string, std::string  data);   link one or more udid's to a Kochava id.   static void spatialEvent(const char* title, float x, float y, float z);   event specifying x, y, and z coordinate to Kochava server for visualizing your data.   static void setLimitAdTracking(bool limitAdTracking);   turn ad tracking off or on by using true or false.   const std::map std::string, std::string  retrieveAttribution() const;   returns the attribution data.   void sendDeepLink(const char* url, const char* application);   send a referral to where your app was opened from.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/kochava/v3-js/", 
            "text": "Kochava\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002\n\n\nsdkbox import kochava\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nKOCHAVA_APP_ID\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nKochava \n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nKochava\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nkochava\n :\n{\n    \nkochavaAppId\n : \nKOCHAVA_APP_ID\n,\n    \nenableLogging\n : 1,\n    \nretrieveAttribution\n : 1\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Kochava\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginKochava.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginKochavaJS.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginKochavaJS);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\n\u8ffd\u8e2a\u4e8b\u4ef6\n\n\nKochava \u63d0\u4f9b\u4e86\u5bf9 \ncustom\n, \nspatial\n, \nreferral\n \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \ncustom\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava.trackEvent(\nEVENT\n, \nVALUE\n);\n\n\n\n\n\n\n\u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a \nspatial\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava.spatialEvent(\nTITLE\n, \nX\n, \nY\n, \nZ\n);\n\n\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \nreferral\n \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a\n\n\n\n\nsdkbox.PluginKochava.sendDeepLink(\nURI\n, \nYOUR APP\n);\n\n\n\n\nNote:\n \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\n\uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570 \n \u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginKochava.init();\n\n\n\n\n\n\ninitialize the Kochava instance.\n\n\n\n\nsdkbox.PluginKochava.identityLinkEvent();\n\n\n\n\n\n\nlink one or more udid's to a Kochava id.\n\n\n\n\nsdkbox.PluginKochava.spatialEvent();\n\n\n\n\n\n\nevent specifying x, y, and z coordinate to Kochava server for visualizing your data.\n\n\n\n\nsdkbox.PluginKochava.setLimitAdTracking();\n\n\n\n\n\n\nturn ad tracking off or on by using true or false.\n\n\n\n\nsdkbox.PluginKochava.enableLogging(bool);\n\n\n\n\n\n\nlog? true or false.\n\n\n\n\nsdkbox.PluginKochava.trackEvent();\n\n\n\n\n\n\ntrack a single event, specifying the event and value.\n\n\n\n\nsdkbox.PluginKochava.shutdown();\n\n\n\n\n\n\nshutdown the Kochava service.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/kochava/v3-js/#kochava", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/plugins/kochava/v3-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002  sdkbox import kochava", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/kochava/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/kochava/v3-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  KOCHAVA_APP_ID  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Kochava   \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Kochava  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  kochava  :\n{\n     kochavaAppId  :  KOCHAVA_APP_ID ,\n     enableLogging  : 1,\n     retrieveAttribution  : 1\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/kochava/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 Kochava   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginKochava.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginKochavaJS.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginKochavaJS);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002  \u8ffd\u8e2a\u4e8b\u4ef6  Kochava \u63d0\u4f9b\u4e86\u5bf9  custom ,  spatial ,  referral  \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002   \u8ffd\u8e2a\u4e00\u4e2a  custom  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava.trackEvent( EVENT ,  VALUE );   \u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a  spatial  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava.spatialEvent( TITLE ,  X ,  Y ,  Z );   \u8ffd\u8e2a\u4e00\u4e2a  referral  \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a   sdkbox.PluginKochava.sendDeepLink( URI ,  YOUR APP );  Note:  \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08 \uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570   \u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/kochava/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginKochava.init();   initialize the Kochava instance.   sdkbox.PluginKochava.identityLinkEvent();   link one or more udid's to a Kochava id.   sdkbox.PluginKochava.spatialEvent();   event specifying x, y, and z coordinate to Kochava server for visualizing your data.   sdkbox.PluginKochava.setLimitAdTracking();   turn ad tracking off or on by using true or false.   sdkbox.PluginKochava.enableLogging(bool);   log? true or false.   sdkbox.PluginKochava.trackEvent();   track a single event, specifying the event and value.   sdkbox.PluginKochava.shutdown();   shutdown the Kochava service.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/", 
            "text": "Kochava\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002\n\n\nsdkbox import kochava\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nKOCHAVA_APP_ID\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nKochava \n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nKochava\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nkochava\n :\n{\n    \nkochavaAppId\n : \nKOCHAVA_APP_ID\n,\n    \nenableLogging\n : 1,\n    \nretrieveAttribution\n : 1\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c \nKochava\n \u7684 Lua_State\u3002\n\nNote:\n \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a \nlua_State*\n \u53c2\u6570\u3002\n\n\n#include \nPluginKochavaLua.hpp\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginKochavaLua(\nlua_State*\n);\n}\n\n\n\n\n\u521d\u59cb\u5316 Kochava\n\n\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\n\n\nsdkbox.PluginKochava:init()\n\n\n\n\n\u8ffd\u8e2a\u4e8b\u4ef6\n\n\nKochava \u63d0\u4f9b\u4e86\u5bf9 \ncustom\n, \nspatial\n, \nreferral\n \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \ncustom\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava:trackEvent(\nEVENT\n, \nVALUE\n)\n\n\n\n\n\n\n\u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a \nspatial\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava:spatialEvent(\nTITLE\n, \nX\n, \nY\n, \nZ\n)\n\n\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \nreferral\n \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a\n\n\n\n\nsdkbox.PluginKochava:sendDeepLink(\nURI\n, \nYOUR APP\n)\n\n\n\n\nNote:\n \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\n\uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570 \n \u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginKochava:init()\n\n\n\n\n\n\ninitialize the Kochava instance.\n\n\n\n\nsdkbox.PluginKochava:identityLinkEvent()\n\n\n\n\n\n\nlink one or more udid's to a Kochava id.\n\n\n\n\nsdkbox.PluginKochava:spatialEvent()\n\n\n\n\n\n\nevent specifying x, y, and z coordinate to Kochava server for visualizing your data.\n\n\n\n\nsdkbox.PluginKochava:setLimitAdTracking()\n\n\n\n\n\n\nturn ad tracking off or on by using true or false.\n\n\n\n\nsdkbox.PluginKochava:enableLogging(bool)\n\n\n\n\n\n\nlog? true or false.\n\n\n\n\nsdkbox.PluginKochava:trackEvent()\n\n\n\n\n\n\ntrack a single event, specifying the event and value.\n\n\n\n\nsdkbox.PluginKochava:shutdown()\n\n\n\n\n\n\nshutdown the Kochava service.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/#kochava", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002  sdkbox import kochava", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  KOCHAVA_APP_ID  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Kochava   \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Kochava  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  kochava  :\n{\n     kochavaAppId  :  KOCHAVA_APP_ID ,\n     enableLogging  : 1,\n     retrieveAttribution  : 1\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c  Kochava  \u7684 Lua_State\u3002 Note:  \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a  lua_State*  \u53c2\u6570\u3002  #include  PluginKochavaLua.hpp   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginKochavaLua( lua_State* );\n}  \u521d\u59cb\u5316 Kochava   \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002   sdkbox.PluginKochava:init()  \u8ffd\u8e2a\u4e8b\u4ef6  Kochava \u63d0\u4f9b\u4e86\u5bf9  custom ,  spatial ,  referral  \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002   \u8ffd\u8e2a\u4e00\u4e2a  custom  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava:trackEvent( EVENT ,  VALUE )   \u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a  spatial  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava:spatialEvent( TITLE ,  X ,  Y ,  Z )   \u8ffd\u8e2a\u4e00\u4e2a  referral  \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a   sdkbox.PluginKochava:sendDeepLink( URI ,  YOUR APP )  Note:  \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08 \uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570   \u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/kochava/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginKochava:init()   initialize the Kochava instance.   sdkbox.PluginKochava:identityLinkEvent()   link one or more udid's to a Kochava id.   sdkbox.PluginKochava:spatialEvent()   event specifying x, y, and z coordinate to Kochava server for visualizing your data.   sdkbox.PluginKochava:setLimitAdTracking()   turn ad tracking off or on by using true or false.   sdkbox.PluginKochava:enableLogging(bool)   log? true or false.   sdkbox.PluginKochava:trackEvent()   track a single event, specifying the event and value.   sdkbox.PluginKochava:shutdown()   shutdown the Kochava service.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/", 
            "text": "Kochava\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002\n\n\nsdkbox import kochava\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nKOCHAVA_APP_ID\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nKochava \n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nKochava\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nkochava\n :\n{\n    \nkochavaAppId\n : \nKOCHAVA_APP_ID\n,\n    \nenableLogging\n : 1,\n    \nretrieveAttribution\n : 1\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Kochava\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginKochava/PluginKochava.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginKochava::init();\n}\n\n\n\n\n\u8ffd\u8e2a\u4e8b\u4ef6\n\n\nKochava \u63d0\u4f9b\u4e86\u5bf9 \ncustom\n, \nspatial\n, \nreferral\n \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \ncustom\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox::PluginKochava::trackEvent(\nEVENT\n, \nVALUE\n);\n\n\n\n\n\n\n\u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a \nspatial\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox::PluginKochava::spatialEvent(\nTITLE\n, \nX\n, \nY\n, \nZ\n);\n\n\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \nreferral\n \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a\n\n\n\n\nsdkbox::PluginKochava::sendDeepLink(\nURI\n, \nYOUR APP\n);\n\n\n\n\nNote:\n \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\n\uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570 \n \u3002\n\n\n\u6355\u6349 Kochava \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u8f6e\u8be2\u5e76\u4e14\u6355\u6349 Kochava \u4e8b\u4ef6\uff0c \u8ba9\u60a8\u5728\u4e00\u4e2a\u53c2\u8003\u70b9\u6216\u8005\u5f52\u5c5e\u5730\u6570\u636e\u4ece\u670d\u52a1\u5668\u8fd4\u56de\u65f6\u5f97\u5230\u901a\u77e5\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u60a8\u5728\u4e00\u4e2a\u7528\u6237\u7a7f\u8fc7\u4fe1\u6807\u8fb9\u754c\u65f6\u5f97\u5230\u901a\u77e5\u3002\u6bd4\u5982\uff0c\u5f53\u4e00\u4e2a\u7528\u6237\u5728\u661f\u5df4\u514b\u9644\u8fd1\u65f6\uff0c\u6216\u8005\u8d70\u5411\u661f\u5df4\u514b\u65f6\u3002\u4e0b\u9762\u662f\u7528 \nlambda\n \u51fd\u6570\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a\n\n\nauto callback = [](const std::map\nstd::string, std::string\n* attribution)\n{\n  if (attribution)\n  {\n      typedef std::map\nstd::string, std::string\n map_type;\n      const map_type\n m = * attribution;\n\n      for (map_type::const_iterator it = m.begin(); it != m.end(); ++it)\n      {\n          const map_type::value_type\n kv = * it;\n          printf(\n%s -\n %s\n, kv.first.c_str(), kv.second.c_str());\n      }\n  }\n};\n\nsdkbox::PluginKochava::setAttributionCallback(callback);\n\n\n\n\nNote\n: \u8bf7\u6c42\u5c5e\u6027\u6570\u636e\u5c06\u4f1a\u6d88\u8017\u4e00\u70b9\u65f6\u95f4\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\u8c03\u7528 \ngetAttributionData()\n \uff0c\u76f4\u5230\u60a8\u5f97\u5230\u4e0d\u662f \nnull\n \u7684\u6570\u636e\u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the Kochava service.\n\n\n\n\nstatic void shutdown();\n\n\n\n\n\n\nshutdown the Kochava service.\n\n\n\n\nstatic void enableLogging(bool enabled);\n\n\n\n\n\n\nlog? true or false.\n\n\n\n\nstatic void trackEvent(const char* event, const char* value);\n\n\n\n\n\n\ntrack a single event, specifying the event and value.\n\n\n\n\nstatic void identityLinkEvent(const std::map\nstd::string, std::string\n data);\n\n\n\n\n\n\nlink one or more udid's to a Kochava id.\n\n\n\n\nstatic void spatialEvent(const char* title, float x, float y, float z);\n\n\n\n\n\n\nevent specifying x, y, and z coordinate to Kochava server for visualizing your data.\n\n\n\n\nstatic void setLimitAdTracking(bool limitAdTracking);\n\n\n\n\n\n\nturn ad tracking off or on by using true or false.\n\n\n\n\nconst std::map\nstd::string, std::string\n retrieveAttribution() const;\n\n\n\n\n\n\nreturns the attribution data.\n\n\n\n\nvoid sendDeepLink(const char* url, const char* application);\n\n\n\n\n\n\nsend a referral to where your app was opened from.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/#kochava", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002  sdkbox import kochava", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  KOCHAVA_APP_ID  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Kochava   \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Kochava  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  kochava  :\n{\n     kochavaAppId  :  KOCHAVA_APP_ID ,\n     enableLogging  : 1,\n     retrieveAttribution  : 1\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Kochava  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginKochava/PluginKochava.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginKochava::init();\n}  \u8ffd\u8e2a\u4e8b\u4ef6  Kochava \u63d0\u4f9b\u4e86\u5bf9  custom ,  spatial ,  referral  \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002   \u8ffd\u8e2a\u4e00\u4e2a  custom  \u4e8b\u4ef6\uff1a   sdkbox::PluginKochava::trackEvent( EVENT ,  VALUE );   \u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a  spatial  \u4e8b\u4ef6\uff1a   sdkbox::PluginKochava::spatialEvent( TITLE ,  X ,  Y ,  Z );   \u8ffd\u8e2a\u4e00\u4e2a  referral  \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a   sdkbox::PluginKochava::sendDeepLink( URI ,  YOUR APP );  Note:  \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08 \uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570   \u3002  \u6355\u6349 Kochava \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u8f6e\u8be2\u5e76\u4e14\u6355\u6349 Kochava \u4e8b\u4ef6\uff0c \u8ba9\u60a8\u5728\u4e00\u4e2a\u53c2\u8003\u70b9\u6216\u8005\u5f52\u5c5e\u5730\u6570\u636e\u4ece\u670d\u52a1\u5668\u8fd4\u56de\u65f6\u5f97\u5230\u901a\u77e5\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u60a8\u5728\u4e00\u4e2a\u7528\u6237\u7a7f\u8fc7\u4fe1\u6807\u8fb9\u754c\u65f6\u5f97\u5230\u901a\u77e5\u3002\u6bd4\u5982\uff0c\u5f53\u4e00\u4e2a\u7528\u6237\u5728\u661f\u5df4\u514b\u9644\u8fd1\u65f6\uff0c\u6216\u8005\u8d70\u5411\u661f\u5df4\u514b\u65f6\u3002\u4e0b\u9762\u662f\u7528  lambda  \u51fd\u6570\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a  auto callback = [](const std::map std::string, std::string * attribution)\n{\n  if (attribution)\n  {\n      typedef std::map std::string, std::string  map_type;\n      const map_type  m = * attribution;\n\n      for (map_type::const_iterator it = m.begin(); it != m.end(); ++it)\n      {\n          const map_type::value_type  kv = * it;\n          printf( %s -  %s , kv.first.c_str(), kv.second.c_str());\n      }\n  }\n};\n\nsdkbox::PluginKochava::setAttributionCallback(callback);  Note : \u8bf7\u6c42\u5c5e\u6027\u6570\u636e\u5c06\u4f1a\u6d88\u8017\u4e00\u70b9\u65f6\u95f4\uff0c\u60a8\u53ef\u4ee5\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\u8c03\u7528  getAttributionData()  \uff0c\u76f4\u5230\u60a8\u5f97\u5230\u4e0d\u662f  null  \u7684\u6570\u636e\u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/kochava/v2-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the Kochava service.   static void shutdown();   shutdown the Kochava service.   static void enableLogging(bool enabled);   log? true or false.   static void trackEvent(const char* event, const char* value);   track a single event, specifying the event and value.   static void identityLinkEvent(const std::map std::string, std::string  data);   link one or more udid's to a Kochava id.   static void spatialEvent(const char* title, float x, float y, float z);   event specifying x, y, and z coordinate to Kochava server for visualizing your data.   static void setLimitAdTracking(bool limitAdTracking);   turn ad tracking off or on by using true or false.   const std::map std::string, std::string  retrieveAttribution() const;   returns the attribution data.   void sendDeepLink(const char* url, const char* application);   send a referral to where your app was opened from.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/kochava/v2-js/", 
            "text": "Kochava\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002\n\n\nsdkbox import kochava\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nKOCHAVA_APP_ID\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nKochava \n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nKochava\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nkochava\n :\n{\n    \nkochavaAppId\n : \nKOCHAVA_APP_ID\n,\n    \nenableLogging\n : 1,\n    \nretrieveAttribution\n : 1\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Kochava\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginKochava.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginKochavaJS.hpp\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginKochavaJS);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\n\u8ffd\u8e2a\u4e8b\u4ef6\n\n\nKochava \u63d0\u4f9b\u4e86\u5bf9 \ncustom\n, \nspatial\n, \nreferral\n \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \ncustom\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava.trackEvent(\nEVENT\n, \nVALUE\n);\n\n\n\n\n\n\n\u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a \nspatial\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava.spatialEvent(\nTITLE\n, \nX\n, \nY\n, \nZ\n);\n\n\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \nreferral\n \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a\n\n\n\n\nsdkbox.PluginKochava.sendDeepLink(\nURI\n, \nYOUR APP\n);\n\n\n\n\nNote:\n \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\n\uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570 \n \u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginKochava.init();\n\n\n\n\n\n\ninitialize the Kochava instance.\n\n\n\n\nsdkbox.PluginKochava.identityLinkEvent();\n\n\n\n\n\n\nlink one or more udid's to a Kochava id.\n\n\n\n\nsdkbox.PluginKochava.spatialEvent();\n\n\n\n\n\n\nevent specifying x, y, and z coordinate to Kochava server for visualizing your data.\n\n\n\n\nsdkbox.PluginKochava.setLimitAdTracking();\n\n\n\n\n\n\nturn ad tracking off or on by using true or false.\n\n\n\n\nsdkbox.PluginKochava.enableLogging(bool);\n\n\n\n\n\n\nlog? true or false.\n\n\n\n\nsdkbox.PluginKochava.trackEvent();\n\n\n\n\n\n\ntrack a single event, specifying the event and value.\n\n\n\n\nsdkbox.PluginKochava.shutdown();\n\n\n\n\n\n\nshutdown the Kochava service.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/kochava/v2-js/#kochava", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/plugins/kochava/v2-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002  sdkbox import kochava", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/kochava/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/kochava/v2-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  KOCHAVA_APP_ID  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Kochava   \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Kochava  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  kochava  :\n{\n     kochavaAppId  :  KOCHAVA_APP_ID ,\n     enableLogging  : 1,\n     retrieveAttribution  : 1\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/kochava/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 Kochava   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginKochava.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginKochavaJS.hpp    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginKochavaJS);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002  \u8ffd\u8e2a\u4e8b\u4ef6  Kochava \u63d0\u4f9b\u4e86\u5bf9  custom ,  spatial ,  referral  \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002   \u8ffd\u8e2a\u4e00\u4e2a  custom  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava.trackEvent( EVENT ,  VALUE );   \u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a  spatial  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava.spatialEvent( TITLE ,  X ,  Y ,  Z );   \u8ffd\u8e2a\u4e00\u4e2a  referral  \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a   sdkbox.PluginKochava.sendDeepLink( URI ,  YOUR APP );  Note:  \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08 \uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570   \u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/kochava/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginKochava.init();   initialize the Kochava instance.   sdkbox.PluginKochava.identityLinkEvent();   link one or more udid's to a Kochava id.   sdkbox.PluginKochava.spatialEvent();   event specifying x, y, and z coordinate to Kochava server for visualizing your data.   sdkbox.PluginKochava.setLimitAdTracking();   turn ad tracking off or on by using true or false.   sdkbox.PluginKochava.enableLogging(bool);   log? true or false.   sdkbox.PluginKochava.trackEvent();   track a single event, specifying the event and value.   sdkbox.PluginKochava.shutdown();   shutdown the Kochava service.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/", 
            "text": "Kochava\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002\n\n\nsdkbox import kochava\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nKOCHAVA_APP_ID\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nKochava \n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nKochava\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nkochava\n :\n{\n    \nkochavaAppId\n : \nKOCHAVA_APP_ID\n,\n    \nenableLogging\n : 1,\n    \nretrieveAttribution\n : 1\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginKochavaLua.hpp\n\n#include \nPluginKochavaLuaHelper.h\n\n\n\n\n\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528 \nregister_all_PluginKochavaLua(\nlua_State*\n);\n \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002\n\n\n\n\nNote:\n \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e\uff0c\u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u3002\n\n\n\u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\n\n#include \nPluginKochavaLua.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginKochavaLua(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Kochava\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\nsdkbox.PluginKochava:init()\n\n\n\n\n\u8ffd\u8e2a\u4e8b\u4ef6\n\n\nKochava \u63d0\u4f9b\u4e86\u5bf9 \ncustom\n, \nspatial\n, \nreferral\n \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \ncustom\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava:trackEvent(\nEVENT\n, \nVALUE\n)\n\n\n\n\n\n\n\u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a \nspatial\n \u4e8b\u4ef6\uff1a\n\n\n\n\nsdkbox.PluginKochava:spatialEvent(\nTITLE\n, \nX\n, \nY\n, \nZ\n)\n\n\n\n\n\n\n\u8ffd\u8e2a\u4e00\u4e2a \nreferral\n \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a\n\n\n\n\nsdkbox.PluginKochava:sendDeepLink(\nURI\n, \nYOUR APP\n)\n\n\n\n\nNote:\n \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\n\uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570 \n \u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginKochava:init()\n\n\n\n\n\n\ninitialize the Kochava instance.\n\n\n\n\nsdkbox.PluginKochava:identityLinkEvent()\n\n\n\n\n\n\nlink one or more udid's to a Kochava id.\n\n\n\n\nsdkbox.PluginKochava:spatialEvent()\n\n\n\n\n\n\nevent specifying x, y, and z coordinate to Kochava server for visualizing your data.\n\n\n\n\nsdkbox.PluginKochava:setLimitAdTracking()\n\n\n\n\n\n\nturn ad tracking off or on by using true or false.\n\n\n\n\nsdkbox.PluginKochava:enableLogging(bool)\n\n\n\n\n\n\nlog? true or false.\n\n\n\n\nsdkbox.PluginKochava:trackEvent()\n\n\n\n\n\n\ntrack a single event, specifying the event and value.\n\n\n\n\nsdkbox.PluginKochava:shutdown()\n\n\n\n\n\n\nshutdown the Kochava service.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/#kochava", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Kochava \u63d2\u4ef6\u3002  sdkbox import kochava", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Kochava \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  KOCHAVA_APP_ID  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Kochava   \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Kochava  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  kochava  :\n{\n     kochavaAppId  :  KOCHAVA_APP_ID ,\n     enableLogging  : 1,\n     retrieveAttribution  : 1\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginKochavaLua.hpp \n#include  PluginKochavaLuaHelper.h    \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528  register_all_PluginKochavaLua( lua_State* );  \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002   Note:  \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e\uff0c\u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u3002  \u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a  #include  PluginKochavaLua.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginKochavaLua(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Kochava  \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002  sdkbox.PluginKochava:init()  \u8ffd\u8e2a\u4e8b\u4ef6  Kochava \u63d0\u4f9b\u4e86\u5bf9  custom ,  spatial ,  referral  \u4e8b\u4ef6\u7684\u8ffd\u8e2a\u529f\u80fd\u3002   \u8ffd\u8e2a\u4e00\u4e2a  custom  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava:trackEvent( EVENT ,  VALUE )   \u901a\u8fc7\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u5730\u540d\u4e0e\u4f4d\u7f6e\uff0c\u8ffd\u8e2a\u4e00\u4e2a  spatial  \u4e8b\u4ef6\uff1a   sdkbox.PluginKochava:spatialEvent( TITLE ,  X ,  Y ,  Z )   \u8ffd\u8e2a\u4e00\u4e2a  referral  \u4e8b\u4ef6\uff08\u4e5f\u88ab\u79f0\u4f5c\u6df1\u94fe\u63a5\uff09\uff1a   sdkbox.PluginKochava:sendDeepLink( URI ,  YOUR APP )  Note:  \u5728 Android \u5e73\u53f0\u4e0a\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08 \uff09\u4e0d\u4f1a\u88ab\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u53ea\u63d0\u4f9b\u5730\u4e00\u4e2a\u53c2\u6570   \u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/kochava/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginKochava:init()   initialize the Kochava instance.   sdkbox.PluginKochava:identityLinkEvent()   link one or more udid's to a Kochava id.   sdkbox.PluginKochava:spatialEvent()   event specifying x, y, and z coordinate to Kochava server for visualizing your data.   sdkbox.PluginKochava:setLimitAdTracking()   turn ad tracking off or on by using true or false.   sdkbox.PluginKochava:enableLogging(bool)   log? true or false.   sdkbox.PluginKochava:trackEvent()   track a single event, specifying the event and value.   sdkbox.PluginKochava:shutdown()   shutdown the Kochava service.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/", 
            "text": "Tune\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002\n\n\nsdkbox import tune\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTUNE id\n \u4ee5\u53ca \nTUNE KEY\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nTune ID\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nTune\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nTune\n:{\n    \nid\n:\nTUNE ID\n,\n    \nkey\n:\nTUNE KEY\n,\n    \ndebug\n:false\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Tune\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\ninit()\n \u4ee5\u53ca \nmesaureSession()\n \u51fd\u6570\u5c06\u4f1a\u88ab\u8c03\u7528\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginTune/PluginTune.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginTune::init();\n     sdkbox::PluginTune::measureSession();\n}\n\n\n\n\n\u4f7f\u7528 Tune\n\n\n\u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528 \nevents\n \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf \nMAT Native Event Types\n\u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06 \nevents\n \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n{\n    PluginTune::measureEventName(\npurchase\n);\n    PluginTune::measureEventId(1122334455);\n        TuneEvent event;\n    event.eventName = \npurchase2\n;\n    event.refId     = \nRJ1357\n;\n    event.searchString = \nsweet crisp red apples\n;\n    event.attribute1 = \ncrisp\n;\n    event.attribute2 = \nred\n;\n    event.quantity = 3;\n    PluginTune::measureEvent(event);\n}\n\n\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 \nevent\n \nPluginTune::measureEvent(event)\n \u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u4e8b\u4ef6\u5c06\u4f1a\u88ab\u8bb0\u5165\u65e5\u5fd7\u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void setDebugMode(bool enable);\n\n\n\n\n\n\nSpecifies that the server responses should include debug information.\n\n\n\n\nstatic void setAllowDuplicateRequests(bool allow);\n\n\n\n\n\n\nSet to YES to allow duplicate requests to be registered with the MAT server.\n\n\n\n\nstatic void checkForDeferredDeeplinkWithTimeout(double timeout);\n\n\n\n\n\n\nCheck for a deferred deeplink entry point upon app installation.\n\n\n\n\nstatic void automateIapEventMeasurement(bool automate);\n\n\n\n\n\n\nEnable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.\n\n\n\n\nstatic void setFacebookEventLogging(bool logging, bool limit);\n\n\n\n\n\n\nSet whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.\n\n\n\n\nstatic void setExistingUser(bool existingUser);\n\n\n\n\n\n\nSet whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.\n\n\n\n\nstatic void setAppleAdvertisingIdentifier(const std::string \nappleAdvertisingIdentifier, bool adTrackingEnabled);\n\n\n\n\n\n\nSet the Apple Advertising Identifier available in iOS 6.\n\n\n\n\nstatic void setAppleVendorIdentifier(const std::string \nappleVendorIdentifier);\n\n\n\n\n\n\nSet the Apple Vendor Identifier available in iOS 6.\n\n\n\n\nstatic void setCurrencyCode(const std::string \ncurrencyCode);\n\n\n\n\n\n\nSets the currency code.\n\n\n\n\nstatic void setJailbroken(bool jailbroken);\n\n\n\n\n\n\nSets the jailbroken device flag.\n\n\n\n\nstatic void setPackageName(const std::string \npackageName);\n\n\n\n\n\n\nSets the package name (bundle identifier).\n\n\n\n\nstatic void setShouldAutoDetectJailbroken(bool autoDetect);\n\n\n\n\n\n\nSpecifies if the sdk should auto detect if the iOS device is jailbroken.\n\n\n\n\nstatic void setShouldAutoGenerateAppleVendorIdentifier(bool autoGenerate);\n\n\n\n\n\n\nSpecifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.\n\n\n\n\nstatic void setSiteId(const std::string \nsiteId);\n\n\n\n\n\n\nSets the site ID.\n\n\n\n\nstatic void setTRUSTeId(const std::string \ntpid);\n\n\n\n\n\n\nSet the TRUSTe Trusted Preference Identifier (TPID).\n\n\n\n\nstatic void setUserEmail(const std::string \nuserEmail);\n\n\n\n\n\n\nSets the user's email address.\n\n\n\n\nstatic void setUserId(const std::string \nuserId);\n\n\n\n\n\n\nSets the user ID.\n\n\n\n\nstatic void setUserName(const std::string \nuserName);\n\n\n\n\n\n\nSets the user's name.\n\n\n\n\nstatic void setPhoneNumber(const std::string \nphoneNumber);\n\n\n\n\n\n\nSets the user's phone number.\n\n\n\n\nstatic void setFacebookUserId(const std::string \nfacebookUserId);\n\n\n\n\n\n\nSet user's Facebook ID.\n\n\n\n\nstatic void setTwitterUserId(const std::string \ntwitterUserId);\n\n\n\n\n\n\nSet user's Twitter ID.\n\n\n\n\nstatic void setGoogleUserId(const std::string \ngoogleUserId);\n\n\n\n\n\n\nSet user's Google ID.\n\n\n\n\nstatic void setAge(int userAge);\n\n\n\n\n\n\nSets the user's age.\n\n\n\n\nstatic void setGender(Gender userGender);\n\n\n\n\n\n\nSets the user's gender.\n\n\n\n\nstatic void setLatitude(double latitude, double longitude);\n\n\n\n\n\n\nSets the user's location.\n\n\n\n\nstatic void setLatitude(double latitude, double longitude, double altitude);\n\n\n\n\n\n\nSets the user's location including altitude.\n\n\n\n\nstatic void setAppAdTracking(bool enable);\n\n\n\n\n\n\nSet app-level ad-tracking.\n\n\n\n\nstatic void setPayingUser(bool isPayingUser);\n\n\n\n\n\n\nSet whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.\n\n\n\n\nstatic void setPreloadDataForScript(const std::string \njsonString);\nstatic void setPreloadData(const TunePreloadData \npreloadData);\n\n\n\n\n\n\nSets publisher information for attribution.\n\n\n\n\nstatic std::string matId();\n\n\n\n\n\n\nGet the MAT ID for this installation (mat_id).\n\n\n\n\nstatic std::string openLogId();\n\n\n\n\n\n\nGet the MAT log ID for the first app open (open_log_id).\n\n\n\n\nstatic bool isPayingUser();\n\n\n\n\n\n\nGet whether the user is revenue-generating.\n\n\n\n\nstatic void measureSession();\n\n\n\n\n\n\nTo be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.\n\n\n\n\nstatic void measureEventName(const std::string \neventName);\n\n\n\n\n\n\nRecord an event for an Event Name.\n\n\n\n\nstatic void measureEventId(int eventId);\n\n\n\n\n\n\nRecord an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.\n\n\n\n\nstatic void measureEventForScript(const std::string \njsonString);\nstatic void measureEvent(const TuneEvent \nevent);\n\n\n\n\n\n\nRecord an event with a MATEvent.\n\n\n\n\nstatic void setUseCookieTracking(bool enable);\n\n\n\n\n\n\nSets whether or not to use cookie based tracking.\n\n\n\n\nstatic void setRedirectUrl(const std::string \nredirectUrl);\n\n\n\n\n\n\nSets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.\n\n\n\n\nstatic void startAppToAppTracking(const std::string \ntargetAppPackageName,\n                                 const std::string \ntargetAppAdvertiserId,\n                                 const std::string \ntargetAdvertiserOfferId,\n                                 const std::string \ntargetAdvertiserPublisherId,\n                                 bool shouldRedirect);\n\n\n\n\n\n\nStart an app-to-app tracking session on the MAT server.\n\n\n\n\nstatic void applicationDidOpenURL(const std::string \nurlString, const std::string \nsourceApplication);\n\n\n\n\n\n\nRecord the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/#tune", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002  sdkbox import tune", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TUNE id  \u4ee5\u53ca  TUNE KEY  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Tune ID  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Tune  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Tune :{\n     id : TUNE ID ,\n     key : TUNE KEY ,\n     debug :false\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Tune  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002 init()  \u4ee5\u53ca  mesaureSession()  \u51fd\u6570\u5c06\u4f1a\u88ab\u8c03\u7528\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginTune/PluginTune.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginTune::init();\n     sdkbox::PluginTune::measureSession();\n}  \u4f7f\u7528 Tune  \u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528  events  \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf  MAT Native Event Types \u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06  events  \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  {\n    PluginTune::measureEventName( purchase );\n    PluginTune::measureEventId(1122334455);\n        TuneEvent event;\n    event.eventName =  purchase2 ;\n    event.refId     =  RJ1357 ;\n    event.searchString =  sweet crisp red apples ;\n    event.attribute1 =  crisp ;\n    event.attribute2 =  red ;\n    event.quantity = 3;\n    PluginTune::measureEvent(event);\n}  \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728  event   PluginTune::measureEvent(event)  \u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u4e8b\u4ef6\u5c06\u4f1a\u88ab\u8bb0\u5165\u65e5\u5fd7\u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/tune/v3-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static void setDebugMode(bool enable);   Specifies that the server responses should include debug information.   static void setAllowDuplicateRequests(bool allow);   Set to YES to allow duplicate requests to be registered with the MAT server.   static void checkForDeferredDeeplinkWithTimeout(double timeout);   Check for a deferred deeplink entry point upon app installation.   static void automateIapEventMeasurement(bool automate);   Enable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.   static void setFacebookEventLogging(bool logging, bool limit);   Set whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.   static void setExistingUser(bool existingUser);   Set whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.   static void setAppleAdvertisingIdentifier(const std::string  appleAdvertisingIdentifier, bool adTrackingEnabled);   Set the Apple Advertising Identifier available in iOS 6.   static void setAppleVendorIdentifier(const std::string  appleVendorIdentifier);   Set the Apple Vendor Identifier available in iOS 6.   static void setCurrencyCode(const std::string  currencyCode);   Sets the currency code.   static void setJailbroken(bool jailbroken);   Sets the jailbroken device flag.   static void setPackageName(const std::string  packageName);   Sets the package name (bundle identifier).   static void setShouldAutoDetectJailbroken(bool autoDetect);   Specifies if the sdk should auto detect if the iOS device is jailbroken.   static void setShouldAutoGenerateAppleVendorIdentifier(bool autoGenerate);   Specifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.   static void setSiteId(const std::string  siteId);   Sets the site ID.   static void setTRUSTeId(const std::string  tpid);   Set the TRUSTe Trusted Preference Identifier (TPID).   static void setUserEmail(const std::string  userEmail);   Sets the user's email address.   static void setUserId(const std::string  userId);   Sets the user ID.   static void setUserName(const std::string  userName);   Sets the user's name.   static void setPhoneNumber(const std::string  phoneNumber);   Sets the user's phone number.   static void setFacebookUserId(const std::string  facebookUserId);   Set user's Facebook ID.   static void setTwitterUserId(const std::string  twitterUserId);   Set user's Twitter ID.   static void setGoogleUserId(const std::string  googleUserId);   Set user's Google ID.   static void setAge(int userAge);   Sets the user's age.   static void setGender(Gender userGender);   Sets the user's gender.   static void setLatitude(double latitude, double longitude);   Sets the user's location.   static void setLatitude(double latitude, double longitude, double altitude);   Sets the user's location including altitude.   static void setAppAdTracking(bool enable);   Set app-level ad-tracking.   static void setPayingUser(bool isPayingUser);   Set whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.   static void setPreloadDataForScript(const std::string  jsonString);\nstatic void setPreloadData(const TunePreloadData  preloadData);   Sets publisher information for attribution.   static std::string matId();   Get the MAT ID for this installation (mat_id).   static std::string openLogId();   Get the MAT log ID for the first app open (open_log_id).   static bool isPayingUser();   Get whether the user is revenue-generating.   static void measureSession();   To be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.   static void measureEventName(const std::string  eventName);   Record an event for an Event Name.   static void measureEventId(int eventId);   Record an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.   static void measureEventForScript(const std::string  jsonString);\nstatic void measureEvent(const TuneEvent  event);   Record an event with a MATEvent.   static void setUseCookieTracking(bool enable);   Sets whether or not to use cookie based tracking.   static void setRedirectUrl(const std::string  redirectUrl);   Sets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.   static void startAppToAppTracking(const std::string  targetAppPackageName,\n                                 const std::string  targetAppAdvertiserId,\n                                 const std::string  targetAdvertiserOfferId,\n                                 const std::string  targetAdvertiserPublisherId,\n                                 bool shouldRedirect);   Start an app-to-app tracking session on the MAT server.   static void applicationDidOpenURL(const std::string  urlString, const std::string  sourceApplication);   Record the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/tune/v3-js/", 
            "text": "Tune\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002\n\n\nsdkbox import tune\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTUNE id\n \u4ee5\u53ca \nTUNE KEY\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nTune ID\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nTune\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nTune\n:{\n    \nid\n:\nTUNE ID\n,\n    \nkey\n:\nTUNE KEY\n,\n    \ndebug\n:false\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Tune\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginTune.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginTuneJS.hpp\n\n#include \nPluginTuneJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginTuneJS);\nsc-\naddRegisterCallback(register_PluginTuneJs_helper);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\n\u4f7f\u7528 Tune\n\n\n\u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528 \nevents\n \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf \nMAT Native Event Types\n\u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06 \nevents\n \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune.measureEventName(\nlogin\n);\nsdkbox.PluginTune.measureEventId(0123456789);\n\nvar event = {};\nevent.eventName = \npurchase\n;\nevent.refId = \nRJ1357\n;\nevent.searchString = \nsweet srisp red apples\n;\nevent.attribute1 = \nsrisp\n;\nevent.attribute2 = \nred\n;\nevent.quantity = 3;\nsdkbox.PluginTune.measureEvent(JSON.stringify(event));\n\n\n\n\n\u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nTune\n \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune.setListener({\n  onEnqueuedAction: function(data) {},\n  onSucceed: function(data) {},\n  onFailed: function(data) {},\n  onReceiveDeeplink: function(data, timeout) {},\n  onFailDeeplink: function(errorString) {}\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginTune.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginTune.setDebugMode(enable);\n\n\n\n\n\n\nSpecifies that the server responses should include debug information.\n\n\n\n\nsdkbox.PluginTune.setAllowDuplicateRequests(allow);\n\n\n\n\n\n\nSet to YES to allow duplicate requests to be registered with the MAT server.\n\n\n\n\nsdkbox.PluginTune.checkForDeferredDeeplinkWithTimeout(timeout);\n\n\n\n\n\n\nCheck for a deferred deeplink entry point upon app installation.\n\n\n\n\nsdkbox.PluginTune.automateIapEventMeasurement(automate);\n\n\n\n\n\n\nEnable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.\n\n\n\n\nsdkbox.PluginTune.setFacebookEventLogging(logging, limit);\n\n\n\n\n\n\nSet whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.\n\n\n\n\nsdkbox.PluginTune.setExistingUser(existingUser);\n\n\n\n\n\n\nSet whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.\n\n\n\n\nsdkbox.PluginTune.setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled);\n\n\n\n\n\n\nSet the Apple Advertising Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune.setAppleVendorIdentifier(appleVendorIdentifier);\n\n\n\n\n\n\nSet the Apple Vendor Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune.setCurrencyCode(currencyCode);\n\n\n\n\n\n\nSets the currency code.\n\n\n\n\nsdkbox.PluginTune.setJailbroken(jailbroken);\n\n\n\n\n\n\nSets the jailbroken device flag.\n\n\n\n\nsdkbox.PluginTune.setPackageName(packageName);\n\n\n\n\n\n\nSets the package name (bundle identifier).\n\n\n\n\nsdkbox.PluginTune.setShouldAutoDetectJailbroken(autoDetect);\n\n\n\n\n\n\nSpecifies if the sdk should auto detect if the iOS device is jailbroken.\n\n\n\n\nsdkbox.PluginTune.setShouldAutoGenerateAppleVendorIdentifier(autoGenerate);\n\n\n\n\n\n\nSpecifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.\n\n\n\n\nsdkbox.PluginTune.setSiteId(siteId);\n\n\n\n\n\n\nSets the site ID.\n\n\n\n\nsdkbox.PluginTune.setTRUSTeId(tpid);\n\n\n\n\n\n\nSet the TRUSTe Trusted Preference Identifier (TPID).\n\n\n\n\nsdkbox.PluginTune.setUserEmail(userEmail);\n\n\n\n\n\n\nSets the user's email address.\n\n\n\n\nsdkbox.PluginTune.setUserId(userId);\n\n\n\n\n\n\nSets the user ID.\n\n\n\n\nsdkbox.PluginTune.setUserName(userName);\n\n\n\n\n\n\nSets the user's name.\n\n\n\n\nsdkbox.PluginTune.setPhoneNumber(phoneNumber);\n\n\n\n\n\n\nSets the user's phone number.\n\n\n\n\nsdkbox.PluginTune.setFacebookUserId(facebookUserId);\n\n\n\n\n\n\nSet user's Facebook ID.\n\n\n\n\nsdkbox.PluginTune.setTwitterUserId(twitterUserId);\n\n\n\n\n\n\nSet user's Twitter ID.\n\n\n\n\nsdkbox.PluginTune.setGoogleUserId(googleUserId);\n\n\n\n\n\n\nSet user's Google ID.\n\n\n\n\nsdkbox.PluginTune.setAge(long userAge);\n\n\n\n\n\n\nSets the user's age.\n\n\n\n\nsdkbox.PluginTune.setGender(Gender userGender);\n\n\n\n\n\n\nSets the user's gender.\n\n\n\n\nsdkbox.PluginTune.setLatitude(latitude, longitude);\n\n\n\n\n\n\nSets the user's location.\n\n\n\n\nsdkbox.PluginTune.setLatitude(latitude, longitude, altitude);\n\n\n\n\n\n\nSets the user's location including altitude.\n\n\n\n\nsdkbox.PluginTune.setAppAdTracking(enable);\n\n\n\n\n\n\nSet app-level ad-tracking.\n\n\n\n\nsdkbox.PluginTune.setPayingUser(isPayingUser);\n\n\n\n\n\n\nSet whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.\n\n\n\n\nsdkbox.PluginTune.setPreloadDataForScript(jsonString);\nsdkbox.PluginTune.setPreloadData(preloadData);\n\n\n\n\n\n\nSets publisher information for attribution.\n\n\n\n\nsdkbox.PluginTune.matId();\n\n\n\n\n\n\nGet the MAT ID for this installation (mat_id).\n\n\n\n\nsdkbox.PluginTune.openLogId();\n\n\n\n\n\n\nGet the MAT log ID for the first app open (open_log_id).\n\n\n\n\nsdkbox.PluginTune.isPayingUser();\n\n\n\n\n\n\nGet whether the user is revenue-generating.\n\n\n\n\nsdkbox.PluginTune.measureSession();\n\n\n\n\n\n\nTo be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.\n\n\n\n\nsdkbox.PluginTune.measureEventName(eventName);\n\n\n\n\n\n\nRecord an event for an Event Name.\n\n\n\n\nsdkbox.PluginTune.measureEventId(eventId);\n\n\n\n\n\n\nRecord an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.\n\n\n\n\nsdkbox.PluginTune.measureEventForScript(jsonString);\nsdkbox.PluginTune.measureEvent(event);\n\n\n\n\n\n\nRecord an event with a MATEvent.\n\n\n\n\nsdkbox.PluginTune.setUseCookieTracking(enable);\n\n\n\n\n\n\nSets whether or not to use cookie based tracking.\n\n\n\n\nsdkbox.PluginTune.setRedirectUrl(redirectUrl);\n\n\n\n\n\n\nSets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.\n\n\n\n\nsdkbox.PluginTune.startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect);\n\n\n\n\n\n\nStart an app-to-app tracking session on the MAT server.\n\n\n\n\nsdkbox.PluginTune.applicationDidOpenURL(urlString, sourceApplication);\n\n\n\n\n\n\nRecord the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/tune/v3-js/#tune", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/plugins/tune/v3-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002  sdkbox import tune", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/tune/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/tune/v3-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TUNE id  \u4ee5\u53ca  TUNE KEY  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Tune ID  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Tune  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Tune :{\n     id : TUNE ID ,\n     key : TUNE KEY ,\n     debug :false\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/tune/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 Tune   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginTune.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginTuneJS.hpp \n#include  PluginTuneJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginTuneJS);\nsc- addRegisterCallback(register_PluginTuneJs_helper);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002  \u4f7f\u7528 Tune  \u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528  events  \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf  MAT Native Event Types \u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06  events  \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  sdkbox.PluginTune.measureEventName( login );\nsdkbox.PluginTune.measureEventId(0123456789);\n\nvar event = {};\nevent.eventName =  purchase ;\nevent.refId =  RJ1357 ;\nevent.searchString =  sweet srisp red apples ;\nevent.attribute1 =  srisp ;\nevent.attribute2 =  red ;\nevent.quantity = 3;\nsdkbox.PluginTune.measureEvent(JSON.stringify(event));  \u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Tune  \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a  sdkbox.PluginTune.setListener({\n  onEnqueuedAction: function(data) {},\n  onSucceed: function(data) {},\n  onFailed: function(data) {},\n  onReceiveDeeplink: function(data, timeout) {},\n  onFailDeeplink: function(errorString) {}\n});", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/tune/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginTune.init();   initialize the plugin instance.   sdkbox.PluginTune.setDebugMode(enable);   Specifies that the server responses should include debug information.   sdkbox.PluginTune.setAllowDuplicateRequests(allow);   Set to YES to allow duplicate requests to be registered with the MAT server.   sdkbox.PluginTune.checkForDeferredDeeplinkWithTimeout(timeout);   Check for a deferred deeplink entry point upon app installation.   sdkbox.PluginTune.automateIapEventMeasurement(automate);   Enable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.   sdkbox.PluginTune.setFacebookEventLogging(logging, limit);   Set whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.   sdkbox.PluginTune.setExistingUser(existingUser);   Set whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.   sdkbox.PluginTune.setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled);   Set the Apple Advertising Identifier available in iOS 6.   sdkbox.PluginTune.setAppleVendorIdentifier(appleVendorIdentifier);   Set the Apple Vendor Identifier available in iOS 6.   sdkbox.PluginTune.setCurrencyCode(currencyCode);   Sets the currency code.   sdkbox.PluginTune.setJailbroken(jailbroken);   Sets the jailbroken device flag.   sdkbox.PluginTune.setPackageName(packageName);   Sets the package name (bundle identifier).   sdkbox.PluginTune.setShouldAutoDetectJailbroken(autoDetect);   Specifies if the sdk should auto detect if the iOS device is jailbroken.   sdkbox.PluginTune.setShouldAutoGenerateAppleVendorIdentifier(autoGenerate);   Specifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.   sdkbox.PluginTune.setSiteId(siteId);   Sets the site ID.   sdkbox.PluginTune.setTRUSTeId(tpid);   Set the TRUSTe Trusted Preference Identifier (TPID).   sdkbox.PluginTune.setUserEmail(userEmail);   Sets the user's email address.   sdkbox.PluginTune.setUserId(userId);   Sets the user ID.   sdkbox.PluginTune.setUserName(userName);   Sets the user's name.   sdkbox.PluginTune.setPhoneNumber(phoneNumber);   Sets the user's phone number.   sdkbox.PluginTune.setFacebookUserId(facebookUserId);   Set user's Facebook ID.   sdkbox.PluginTune.setTwitterUserId(twitterUserId);   Set user's Twitter ID.   sdkbox.PluginTune.setGoogleUserId(googleUserId);   Set user's Google ID.   sdkbox.PluginTune.setAge(long userAge);   Sets the user's age.   sdkbox.PluginTune.setGender(Gender userGender);   Sets the user's gender.   sdkbox.PluginTune.setLatitude(latitude, longitude);   Sets the user's location.   sdkbox.PluginTune.setLatitude(latitude, longitude, altitude);   Sets the user's location including altitude.   sdkbox.PluginTune.setAppAdTracking(enable);   Set app-level ad-tracking.   sdkbox.PluginTune.setPayingUser(isPayingUser);   Set whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.   sdkbox.PluginTune.setPreloadDataForScript(jsonString);\nsdkbox.PluginTune.setPreloadData(preloadData);   Sets publisher information for attribution.   sdkbox.PluginTune.matId();   Get the MAT ID for this installation (mat_id).   sdkbox.PluginTune.openLogId();   Get the MAT log ID for the first app open (open_log_id).   sdkbox.PluginTune.isPayingUser();   Get whether the user is revenue-generating.   sdkbox.PluginTune.measureSession();   To be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.   sdkbox.PluginTune.measureEventName(eventName);   Record an event for an Event Name.   sdkbox.PluginTune.measureEventId(eventId);   Record an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.   sdkbox.PluginTune.measureEventForScript(jsonString);\nsdkbox.PluginTune.measureEvent(event);   Record an event with a MATEvent.   sdkbox.PluginTune.setUseCookieTracking(enable);   Sets whether or not to use cookie based tracking.   sdkbox.PluginTune.setRedirectUrl(redirectUrl);   Sets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.   sdkbox.PluginTune.startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect);   Start an app-to-app tracking session on the MAT server.   sdkbox.PluginTune.applicationDidOpenURL(urlString, sourceApplication);   Record the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/tune/v3-lua/", 
            "text": "Tune\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002\n\n\nsdkbox import tune\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTUNE id\n \u4ee5\u53ca \nTUNE KEY\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nTune ID\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nTune\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nTune\n:{\n    \nid\n:\nTUNE ID\n,\n    \nkey\n:\nTUNE KEY\n,\n    \ndebug\n:false\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c \nTune\n \u7684 Lua_State\u3002\n\nNote:\n \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a \nlua_State*\n \u53c2\u6570\u3002\n\n\n#include \nPluginTuneLua.hpp\n\n#include \nPluginTuneLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginTuneLua(L);\n  register_PluginTuneLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 Tune\n\n\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\n\n\nsdkbox.PluginTune:init()\n\n\n\n\n\u4f7f\u7528 Tune\n\n\n\u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528 \nevents\n \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf \nMAT Native Event Types\n\u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06 \nevents\n \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune:measureEventName(\nlogin\n)\nsdkbox.PluginTune:measureEventId(0123456789)\n\nlocal event = {}\nevent.eventName = \npurchase\n\nevent.refId = \nRJ1357\n\nevent.searchString = \nsweet srisp red apples\n\nevent.attribute1 = \nsrisp\n\nevent.attribute2 = \nred\n\nevent.quantity = 3\nsdkbox.PluginTune:measureEventForScript(json.encode(event))\n\n\n\n\n\u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nTune\n \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune:setListener(function(eventName, eventData, timeout)\n        -- \u5f53eventName\u4e3a \nonReceiveDeeplink\n \u65f6,\u7b2c\u4e09\u4e2a\u53c2\u6570timeout\u624d\u6709\u6548\n        print(eventName, eventData)\n    end)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginTune:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginTune:setDebugMode(enable)\n\n\n\n\n\n\nSpecifies that the server responses should include debug information.\n\n\n\n\nsdkbox.PluginTune:setAllowDuplicateRequests(allow)\n\n\n\n\n\n\nSet to YES to allow duplicate requests to be registered with the MAT server.\n\n\n\n\nsdkbox.PluginTune:checkForDeferredDeeplinkWithTimeout(timeout)\n\n\n\n\n\n\nCheck for a deferred deeplink entry point upon app installation.\n\n\n\n\nsdkbox.PluginTune:automateIapEventMeasurement(automate)\n\n\n\n\n\n\nEnable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.\n\n\n\n\nsdkbox.PluginTune:setFacebookEventLogging(logging, limit)\n\n\n\n\n\n\nSet whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.\n\n\n\n\nsdkbox.PluginTune:setExistingUser(existingUser)\n\n\n\n\n\n\nSet whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.\n\n\n\n\nsdkbox.PluginTune:setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled)\n\n\n\n\n\n\nSet the Apple Advertising Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune:setAppleVendorIdentifier(appleVendorIdentifier)\n\n\n\n\n\n\nSet the Apple Vendor Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune:setCurrencyCode(currencyCode)\n\n\n\n\n\n\nSets the currency code.\n\n\n\n\nsdkbox.PluginTune:setJailbroken(jailbroken)\n\n\n\n\n\n\nSets the jailbroken device flag.\n\n\n\n\nsdkbox.PluginTune:setPackageName(packageName)\n\n\n\n\n\n\nSets the package name (bundle identifier).\n\n\n\n\nsdkbox.PluginTune:setShouldAutoDetectJailbroken(autoDetect)\n\n\n\n\n\n\nSpecifies if the sdk should auto detect if the iOS device is jailbroken.\n\n\n\n\nsdkbox.PluginTune:setShouldAutoGenerateAppleVendorIdentifier(autoGenerate)\n\n\n\n\n\n\nSpecifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.\n\n\n\n\nsdkbox.PluginTune:setSiteId(siteId)\n\n\n\n\n\n\nSets the site ID.\n\n\n\n\nsdkbox.PluginTune:setTRUSTeId(tpid)\n\n\n\n\n\n\nSet the TRUSTe Trusted Preference Identifier (TPID).\n\n\n\n\nsdkbox.PluginTune:setUserEmail(userEmail)\n\n\n\n\n\n\nSets the user's email address.\n\n\n\n\nsdkbox.PluginTune:setUserId(userId)\n\n\n\n\n\n\nSets the user ID.\n\n\n\n\nsdkbox.PluginTune:setUserName(userName)\n\n\n\n\n\n\nSets the user's name.\n\n\n\n\nsdkbox.PluginTune:setPhoneNumber(phoneNumber)\n\n\n\n\n\n\nSets the user's phone number.\n\n\n\n\nsdkbox.PluginTune:setFacebookUserId(facebookUserId)\n\n\n\n\n\n\nSet user's Facebook ID.\n\n\n\n\nsdkbox.PluginTune:setTwitterUserId(twitterUserId)\n\n\n\n\n\n\nSet user's Twitter ID.\n\n\n\n\nsdkbox.PluginTune:setGoogleUserId(googleUserId)\n\n\n\n\n\n\nSet user's Google ID.\n\n\n\n\nsdkbox.PluginTune:setAge(long userAge)\n\n\n\n\n\n\nSets the user's age.\n\n\n\n\nsdkbox.PluginTune:setGender(Gender userGender)\n\n\n\n\n\n\nSets the user's gender.\n\n\n\n\nsdkbox.PluginTune:setLatitude(latitude, longitude)\n\n\n\n\n\n\nSets the user's location.\n\n\n\n\nsdkbox.PluginTune:setLatitude(latitude, longitude, altitude)\n\n\n\n\n\n\nSets the user's location including altitude.\n\n\n\n\nsdkbox.PluginTune:setAppAdTracking(enable)\n\n\n\n\n\n\nSet app-level ad-tracking.\n\n\n\n\nsdkbox.PluginTune:setPayingUser(isPayingUser)\n\n\n\n\n\n\nSet whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.\n\n\n\n\nsdkbox.PluginTune:setPreloadData(jsonString)\n\n\n\n\n\n\nSets publisher information for attribution.\n\n\n\n\nsdkbox.PluginTune:matId()\n\n\n\n\n\n\nGet the MAT ID for this installation (mat_id).\n\n\n\n\nsdkbox.PluginTune:openLogId()\n\n\n\n\n\n\nGet the MAT log ID for the first app open (open_log_id).\n\n\n\n\nsdkbox.PluginTune:isPayingUser()\n\n\n\n\n\n\nGet whether the user is revenue-generating.\n\n\n\n\nsdkbox.PluginTune:measureSession()\n\n\n\n\n\n\nTo be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.\n\n\n\n\nsdkbox.PluginTune:measureEventName(eventName)\n\n\n\n\n\n\nRecord an event for an Event Name.\n\n\n\n\nsdkbox.PluginTune:measureEventId(eventId)\n\n\n\n\n\n\nRecord an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.\n\n\n\n\nsdkbox.PluginTune:measureEvent(jsonString)\n\n\n\n\n\n\nRecord an event with a MATEvent.\n\n\n\n\nsdkbox.PluginTune:setUseCookieTracking(enable)\n\n\n\n\n\n\nSets whether or not to use cookie based tracking.\n\n\n\n\nsdkbox.PluginTune:setRedirectUrl(redirectUrl)\n\n\n\n\n\n\nSets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.\n\n\n\n\nsdkbox.PluginTune:startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect)\n\n\n\n\n\n\nStart an app-to-app tracking session on the MAT server.\n\n\n\n\nsdkbox.PluginTune:applicationDidOpenURL(urlString, sourceApplication)\n\n\n\n\n\n\nRecord the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/tune/v3-lua/#tune", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/plugins/tune/v3-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002  sdkbox import tune", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/tune/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/tune/v3-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TUNE id  \u4ee5\u53ca  TUNE KEY  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Tune ID  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Tune  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Tune :{\n     id : TUNE ID ,\n     key : TUNE KEY ,\n     debug :false\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/tune/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c  Tune  \u7684 Lua_State\u3002 Note:  \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a  lua_State*  \u53c2\u6570\u3002  #include  PluginTuneLua.hpp \n#include  PluginTuneLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginTuneLua(L);\n  register_PluginTuneLua_helper(L);\n}  \u521d\u59cb\u5316 Tune   \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002   sdkbox.PluginTune:init()  \u4f7f\u7528 Tune  \u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528  events  \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf  MAT Native Event Types \u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06  events  \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  sdkbox.PluginTune:measureEventName( login )\nsdkbox.PluginTune:measureEventId(0123456789)\n\nlocal event = {}\nevent.eventName =  purchase \nevent.refId =  RJ1357 \nevent.searchString =  sweet srisp red apples \nevent.attribute1 =  srisp \nevent.attribute2 =  red \nevent.quantity = 3\nsdkbox.PluginTune:measureEventForScript(json.encode(event))  \u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Tune  \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a  sdkbox.PluginTune:setListener(function(eventName, eventData, timeout)\n        -- \u5f53eventName\u4e3a  onReceiveDeeplink  \u65f6,\u7b2c\u4e09\u4e2a\u53c2\u6570timeout\u624d\u6709\u6548\n        print(eventName, eventData)\n    end)", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/tune/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginTune:init()   initialize the plugin instance.   sdkbox.PluginTune:setDebugMode(enable)   Specifies that the server responses should include debug information.   sdkbox.PluginTune:setAllowDuplicateRequests(allow)   Set to YES to allow duplicate requests to be registered with the MAT server.   sdkbox.PluginTune:checkForDeferredDeeplinkWithTimeout(timeout)   Check for a deferred deeplink entry point upon app installation.   sdkbox.PluginTune:automateIapEventMeasurement(automate)   Enable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.   sdkbox.PluginTune:setFacebookEventLogging(logging, limit)   Set whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.   sdkbox.PluginTune:setExistingUser(existingUser)   Set whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.   sdkbox.PluginTune:setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled)   Set the Apple Advertising Identifier available in iOS 6.   sdkbox.PluginTune:setAppleVendorIdentifier(appleVendorIdentifier)   Set the Apple Vendor Identifier available in iOS 6.   sdkbox.PluginTune:setCurrencyCode(currencyCode)   Sets the currency code.   sdkbox.PluginTune:setJailbroken(jailbroken)   Sets the jailbroken device flag.   sdkbox.PluginTune:setPackageName(packageName)   Sets the package name (bundle identifier).   sdkbox.PluginTune:setShouldAutoDetectJailbroken(autoDetect)   Specifies if the sdk should auto detect if the iOS device is jailbroken.   sdkbox.PluginTune:setShouldAutoGenerateAppleVendorIdentifier(autoGenerate)   Specifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.   sdkbox.PluginTune:setSiteId(siteId)   Sets the site ID.   sdkbox.PluginTune:setTRUSTeId(tpid)   Set the TRUSTe Trusted Preference Identifier (TPID).   sdkbox.PluginTune:setUserEmail(userEmail)   Sets the user's email address.   sdkbox.PluginTune:setUserId(userId)   Sets the user ID.   sdkbox.PluginTune:setUserName(userName)   Sets the user's name.   sdkbox.PluginTune:setPhoneNumber(phoneNumber)   Sets the user's phone number.   sdkbox.PluginTune:setFacebookUserId(facebookUserId)   Set user's Facebook ID.   sdkbox.PluginTune:setTwitterUserId(twitterUserId)   Set user's Twitter ID.   sdkbox.PluginTune:setGoogleUserId(googleUserId)   Set user's Google ID.   sdkbox.PluginTune:setAge(long userAge)   Sets the user's age.   sdkbox.PluginTune:setGender(Gender userGender)   Sets the user's gender.   sdkbox.PluginTune:setLatitude(latitude, longitude)   Sets the user's location.   sdkbox.PluginTune:setLatitude(latitude, longitude, altitude)   Sets the user's location including altitude.   sdkbox.PluginTune:setAppAdTracking(enable)   Set app-level ad-tracking.   sdkbox.PluginTune:setPayingUser(isPayingUser)   Set whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.   sdkbox.PluginTune:setPreloadData(jsonString)   Sets publisher information for attribution.   sdkbox.PluginTune:matId()   Get the MAT ID for this installation (mat_id).   sdkbox.PluginTune:openLogId()   Get the MAT log ID for the first app open (open_log_id).   sdkbox.PluginTune:isPayingUser()   Get whether the user is revenue-generating.   sdkbox.PluginTune:measureSession()   To be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.   sdkbox.PluginTune:measureEventName(eventName)   Record an event for an Event Name.   sdkbox.PluginTune:measureEventId(eventId)   Record an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.   sdkbox.PluginTune:measureEvent(jsonString)   Record an event with a MATEvent.   sdkbox.PluginTune:setUseCookieTracking(enable)   Sets whether or not to use cookie based tracking.   sdkbox.PluginTune:setRedirectUrl(redirectUrl)   Sets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.   sdkbox.PluginTune:startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect)   Start an app-to-app tracking session on the MAT server.   sdkbox.PluginTune:applicationDidOpenURL(urlString, sourceApplication)   Record the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/", 
            "text": "Tune\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002\n\n\nsdkbox import tune\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTUNE id\n \u4ee5\u53ca \nTUNE KEY\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nTune ID\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nTune\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nTune\n:{\n    \nid\n:\nTUNE ID\n,\n    \nkey\n:\nTUNE KEY\n,\n    \ndebug\n:false\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Tune\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\ninit()\n \u4ee5\u53ca \nmesaureSession()\n \u51fd\u6570\u5c06\u4f1a\u88ab\u8c03\u7528\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginTune/PluginTune.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginTune::init();\n     sdkbox::PluginTune::measureSession();\n}\n\n\n\n\n\u4f7f\u7528 Tune\n\n\n\u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528 \nevents\n \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf \nMAT Native Event Types\n\u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06 \nevents\n \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n{\n    PluginTune::measureEventName(\npurchase\n);\n    PluginTune::measureEventId(1122334455);\n        TuneEvent event;\n    event.eventName = \npurchase2\n;\n    event.refId     = \nRJ1357\n;\n    event.searchString = \nsweet crisp red apples\n;\n    event.attribute1 = \ncrisp\n;\n    event.attribute2 = \nred\n;\n    event.quantity = 3;\n    PluginTune::measureEvent(event);\n}\n\n\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 \nevent\n \nPluginTune::measureEvent(event)\n \u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u4e8b\u4ef6\u5c06\u4f1a\u88ab\u8bb0\u5165\u65e5\u5fd7\u3002\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void setDebugMode(bool enable);\n\n\n\n\n\n\nSpecifies that the server responses should include debug information.\n\n\n\n\nstatic void setAllowDuplicateRequests(bool allow);\n\n\n\n\n\n\nSet to YES to allow duplicate requests to be registered with the MAT server.\n\n\n\n\nstatic void checkForDeferredDeeplinkWithTimeout(double timeout);\n\n\n\n\n\n\nCheck for a deferred deeplink entry point upon app installation.\n\n\n\n\nstatic void automateIapEventMeasurement(bool automate);\n\n\n\n\n\n\nEnable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.\n\n\n\n\nstatic void setFacebookEventLogging(bool logging, bool limit);\n\n\n\n\n\n\nSet whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.\n\n\n\n\nstatic void setExistingUser(bool existingUser);\n\n\n\n\n\n\nSet whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.\n\n\n\n\nstatic void setAppleAdvertisingIdentifier(const std::string \nappleAdvertisingIdentifier, bool adTrackingEnabled);\n\n\n\n\n\n\nSet the Apple Advertising Identifier available in iOS 6.\n\n\n\n\nstatic void setAppleVendorIdentifier(const std::string \nappleVendorIdentifier);\n\n\n\n\n\n\nSet the Apple Vendor Identifier available in iOS 6.\n\n\n\n\nstatic void setCurrencyCode(const std::string \ncurrencyCode);\n\n\n\n\n\n\nSets the currency code.\n\n\n\n\nstatic void setJailbroken(bool jailbroken);\n\n\n\n\n\n\nSets the jailbroken device flag.\n\n\n\n\nstatic void setPackageName(const std::string \npackageName);\n\n\n\n\n\n\nSets the package name (bundle identifier).\n\n\n\n\nstatic void setShouldAutoDetectJailbroken(bool autoDetect);\n\n\n\n\n\n\nSpecifies if the sdk should auto detect if the iOS device is jailbroken.\n\n\n\n\nstatic void setShouldAutoGenerateAppleVendorIdentifier(bool autoGenerate);\n\n\n\n\n\n\nSpecifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.\n\n\n\n\nstatic void setSiteId(const std::string \nsiteId);\n\n\n\n\n\n\nSets the site ID.\n\n\n\n\nstatic void setTRUSTeId(const std::string \ntpid);\n\n\n\n\n\n\nSet the TRUSTe Trusted Preference Identifier (TPID).\n\n\n\n\nstatic void setUserEmail(const std::string \nuserEmail);\n\n\n\n\n\n\nSets the user's email address.\n\n\n\n\nstatic void setUserId(const std::string \nuserId);\n\n\n\n\n\n\nSets the user ID.\n\n\n\n\nstatic void setUserName(const std::string \nuserName);\n\n\n\n\n\n\nSets the user's name.\n\n\n\n\nstatic void setPhoneNumber(const std::string \nphoneNumber);\n\n\n\n\n\n\nSets the user's phone number.\n\n\n\n\nstatic void setFacebookUserId(const std::string \nfacebookUserId);\n\n\n\n\n\n\nSet user's Facebook ID.\n\n\n\n\nstatic void setTwitterUserId(const std::string \ntwitterUserId);\n\n\n\n\n\n\nSet user's Twitter ID.\n\n\n\n\nstatic void setGoogleUserId(const std::string \ngoogleUserId);\n\n\n\n\n\n\nSet user's Google ID.\n\n\n\n\nstatic void setAge(int userAge);\n\n\n\n\n\n\nSets the user's age.\n\n\n\n\nstatic void setGender(Gender userGender);\n\n\n\n\n\n\nSets the user's gender.\n\n\n\n\nstatic void setLatitude(double latitude, double longitude);\n\n\n\n\n\n\nSets the user's location.\n\n\n\n\nstatic void setLatitude(double latitude, double longitude, double altitude);\n\n\n\n\n\n\nSets the user's location including altitude.\n\n\n\n\nstatic void setAppAdTracking(bool enable);\n\n\n\n\n\n\nSet app-level ad-tracking.\n\n\n\n\nstatic void setPayingUser(bool isPayingUser);\n\n\n\n\n\n\nSet whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.\n\n\n\n\nstatic void setPreloadDataForScript(const std::string \njsonString);\nstatic void setPreloadData(const TunePreloadData \npreloadData);\n\n\n\n\n\n\nSets publisher information for attribution.\n\n\n\n\nstatic std::string matId();\n\n\n\n\n\n\nGet the MAT ID for this installation (mat_id).\n\n\n\n\nstatic std::string openLogId();\n\n\n\n\n\n\nGet the MAT log ID for the first app open (open_log_id).\n\n\n\n\nstatic bool isPayingUser();\n\n\n\n\n\n\nGet whether the user is revenue-generating.\n\n\n\n\nstatic void measureSession();\n\n\n\n\n\n\nTo be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.\n\n\n\n\nstatic void measureEventName(const std::string \neventName);\n\n\n\n\n\n\nRecord an event for an Event Name.\n\n\n\n\nstatic void measureEventId(int eventId);\n\n\n\n\n\n\nRecord an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.\n\n\n\n\nstatic void measureEventForScript(const std::string \njsonString);\nstatic void measureEvent(const TuneEvent \nevent);\n\n\n\n\n\n\nRecord an event with a MATEvent.\n\n\n\n\nstatic void setUseCookieTracking(bool enable);\n\n\n\n\n\n\nSets whether or not to use cookie based tracking.\n\n\n\n\nstatic void setRedirectUrl(const std::string \nredirectUrl);\n\n\n\n\n\n\nSets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.\n\n\n\n\nstatic void startAppToAppTracking(const std::string \ntargetAppPackageName,\n                                 const std::string \ntargetAppAdvertiserId,\n                                 const std::string \ntargetAdvertiserOfferId,\n                                 const std::string \ntargetAdvertiserPublisherId,\n                                 bool shouldRedirect);\n\n\n\n\n\n\nStart an app-to-app tracking session on the MAT server.\n\n\n\n\nstatic void applicationDidOpenURL(const std::string \nurlString, const std::string \nsourceApplication);\n\n\n\n\n\n\nRecord the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/#tune", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002  sdkbox import tune", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TUNE id  \u4ee5\u53ca  TUNE KEY  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Tune ID  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Tune  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Tune :{\n     id : TUNE ID ,\n     key : TUNE KEY ,\n     debug :false\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Tune  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002 init()  \u4ee5\u53ca  mesaureSession()  \u51fd\u6570\u5c06\u4f1a\u88ab\u8c03\u7528\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginTune/PluginTune.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginTune::init();\n     sdkbox::PluginTune::measureSession();\n}  \u4f7f\u7528 Tune  \u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528  events  \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf  MAT Native Event Types \u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06  events  \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  {\n    PluginTune::measureEventName( purchase );\n    PluginTune::measureEventId(1122334455);\n        TuneEvent event;\n    event.eventName =  purchase2 ;\n    event.refId     =  RJ1357 ;\n    event.searchString =  sweet crisp red apples ;\n    event.attribute1 =  crisp ;\n    event.attribute2 =  red ;\n    event.quantity = 3;\n    PluginTune::measureEvent(event);\n}  \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728  event   PluginTune::measureEvent(event)  \u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u4e8b\u4ef6\u5c06\u4f1a\u88ab\u8bb0\u5165\u65e5\u5fd7\u3002", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/tune/v2-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static void setDebugMode(bool enable);   Specifies that the server responses should include debug information.   static void setAllowDuplicateRequests(bool allow);   Set to YES to allow duplicate requests to be registered with the MAT server.   static void checkForDeferredDeeplinkWithTimeout(double timeout);   Check for a deferred deeplink entry point upon app installation.   static void automateIapEventMeasurement(bool automate);   Enable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.   static void setFacebookEventLogging(bool logging, bool limit);   Set whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.   static void setExistingUser(bool existingUser);   Set whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.   static void setAppleAdvertisingIdentifier(const std::string  appleAdvertisingIdentifier, bool adTrackingEnabled);   Set the Apple Advertising Identifier available in iOS 6.   static void setAppleVendorIdentifier(const std::string  appleVendorIdentifier);   Set the Apple Vendor Identifier available in iOS 6.   static void setCurrencyCode(const std::string  currencyCode);   Sets the currency code.   static void setJailbroken(bool jailbroken);   Sets the jailbroken device flag.   static void setPackageName(const std::string  packageName);   Sets the package name (bundle identifier).   static void setShouldAutoDetectJailbroken(bool autoDetect);   Specifies if the sdk should auto detect if the iOS device is jailbroken.   static void setShouldAutoGenerateAppleVendorIdentifier(bool autoGenerate);   Specifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.   static void setSiteId(const std::string  siteId);   Sets the site ID.   static void setTRUSTeId(const std::string  tpid);   Set the TRUSTe Trusted Preference Identifier (TPID).   static void setUserEmail(const std::string  userEmail);   Sets the user's email address.   static void setUserId(const std::string  userId);   Sets the user ID.   static void setUserName(const std::string  userName);   Sets the user's name.   static void setPhoneNumber(const std::string  phoneNumber);   Sets the user's phone number.   static void setFacebookUserId(const std::string  facebookUserId);   Set user's Facebook ID.   static void setTwitterUserId(const std::string  twitterUserId);   Set user's Twitter ID.   static void setGoogleUserId(const std::string  googleUserId);   Set user's Google ID.   static void setAge(int userAge);   Sets the user's age.   static void setGender(Gender userGender);   Sets the user's gender.   static void setLatitude(double latitude, double longitude);   Sets the user's location.   static void setLatitude(double latitude, double longitude, double altitude);   Sets the user's location including altitude.   static void setAppAdTracking(bool enable);   Set app-level ad-tracking.   static void setPayingUser(bool isPayingUser);   Set whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.   static void setPreloadDataForScript(const std::string  jsonString);\nstatic void setPreloadData(const TunePreloadData  preloadData);   Sets publisher information for attribution.   static std::string matId();   Get the MAT ID for this installation (mat_id).   static std::string openLogId();   Get the MAT log ID for the first app open (open_log_id).   static bool isPayingUser();   Get whether the user is revenue-generating.   static void measureSession();   To be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.   static void measureEventName(const std::string  eventName);   Record an event for an Event Name.   static void measureEventId(int eventId);   Record an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.   static void measureEventForScript(const std::string  jsonString);\nstatic void measureEvent(const TuneEvent  event);   Record an event with a MATEvent.   static void setUseCookieTracking(bool enable);   Sets whether or not to use cookie based tracking.   static void setRedirectUrl(const std::string  redirectUrl);   Sets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.   static void startAppToAppTracking(const std::string  targetAppPackageName,\n                                 const std::string  targetAppAdvertiserId,\n                                 const std::string  targetAdvertiserOfferId,\n                                 const std::string  targetAdvertiserPublisherId,\n                                 bool shouldRedirect);   Start an app-to-app tracking session on the MAT server.   static void applicationDidOpenURL(const std::string  urlString, const std::string  sourceApplication);   Record the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/tune/v2-js/", 
            "text": "Tune\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002\n\n\nsdkbox import tune\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTUNE id\n \u4ee5\u53ca \nTUNE KEY\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nTune ID\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nTune\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nTune\n:{\n    \nid\n:\nTUNE ID\n,\n    \nkey\n:\nTUNE KEY\n,\n    \ndebug\n:false\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Tune\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginTune.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginTuneJS.hpp\n\n#include \nPluginTuneJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginTuneJS);\nsc-\naddRegisterCallback(register_PluginTuneJs_helper);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\n\u4f7f\u7528 Tune\n\n\n\u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528 \nevents\n \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf \nMAT Native Event Types\n\u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06 \nevents\n \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune.measureEventName(\nlogin\n);\nsdkbox.PluginTune.measureEventId(0123456789);\n\nvar event = {};\nevent.eventName = \npurchase\n;\nevent.refId = \nRJ1357\n;\nevent.searchString = \nsweet srisp red apples\n;\nevent.attribute1 = \nsrisp\n;\nevent.attribute2 = \nred\n;\nevent.quantity = 3;\nsdkbox.PluginTune.measureEvent(JSON.stringify(event));\n\n\n\n\n\u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nTune\n \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune.setListener({\n  onEnqueuedAction: function(data) {},\n  onSucceed: function(data) {},\n  onFailed: function(data) {},\n  onReceiveDeeplink: function(data, timeout) {},\n  onFailDeeplink: function(errorString) {}\n});\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginTune.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginTune.setDebugMode(enable);\n\n\n\n\n\n\nSpecifies that the server responses should include debug information.\n\n\n\n\nsdkbox.PluginTune.setAllowDuplicateRequests(allow);\n\n\n\n\n\n\nSet to YES to allow duplicate requests to be registered with the MAT server.\n\n\n\n\nsdkbox.PluginTune.checkForDeferredDeeplinkWithTimeout(timeout);\n\n\n\n\n\n\nCheck for a deferred deeplink entry point upon app installation.\n\n\n\n\nsdkbox.PluginTune.automateIapEventMeasurement(automate);\n\n\n\n\n\n\nEnable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.\n\n\n\n\nsdkbox.PluginTune.setFacebookEventLogging(logging, limit);\n\n\n\n\n\n\nSet whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.\n\n\n\n\nsdkbox.PluginTune.setExistingUser(existingUser);\n\n\n\n\n\n\nSet whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.\n\n\n\n\nsdkbox.PluginTune.setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled);\n\n\n\n\n\n\nSet the Apple Advertising Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune.setAppleVendorIdentifier(appleVendorIdentifier);\n\n\n\n\n\n\nSet the Apple Vendor Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune.setCurrencyCode(currencyCode);\n\n\n\n\n\n\nSets the currency code.\n\n\n\n\nsdkbox.PluginTune.setJailbroken(jailbroken);\n\n\n\n\n\n\nSets the jailbroken device flag.\n\n\n\n\nsdkbox.PluginTune.setPackageName(packageName);\n\n\n\n\n\n\nSets the package name (bundle identifier).\n\n\n\n\nsdkbox.PluginTune.setShouldAutoDetectJailbroken(autoDetect);\n\n\n\n\n\n\nSpecifies if the sdk should auto detect if the iOS device is jailbroken.\n\n\n\n\nsdkbox.PluginTune.setShouldAutoGenerateAppleVendorIdentifier(autoGenerate);\n\n\n\n\n\n\nSpecifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.\n\n\n\n\nsdkbox.PluginTune.setSiteId(siteId);\n\n\n\n\n\n\nSets the site ID.\n\n\n\n\nsdkbox.PluginTune.setTRUSTeId(tpid);\n\n\n\n\n\n\nSet the TRUSTe Trusted Preference Identifier (TPID).\n\n\n\n\nsdkbox.PluginTune.setUserEmail(userEmail);\n\n\n\n\n\n\nSets the user's email address.\n\n\n\n\nsdkbox.PluginTune.setUserId(userId);\n\n\n\n\n\n\nSets the user ID.\n\n\n\n\nsdkbox.PluginTune.setUserName(userName);\n\n\n\n\n\n\nSets the user's name.\n\n\n\n\nsdkbox.PluginTune.setPhoneNumber(phoneNumber);\n\n\n\n\n\n\nSets the user's phone number.\n\n\n\n\nsdkbox.PluginTune.setFacebookUserId(facebookUserId);\n\n\n\n\n\n\nSet user's Facebook ID.\n\n\n\n\nsdkbox.PluginTune.setTwitterUserId(twitterUserId);\n\n\n\n\n\n\nSet user's Twitter ID.\n\n\n\n\nsdkbox.PluginTune.setGoogleUserId(googleUserId);\n\n\n\n\n\n\nSet user's Google ID.\n\n\n\n\nsdkbox.PluginTune.setAge(long userAge);\n\n\n\n\n\n\nSets the user's age.\n\n\n\n\nsdkbox.PluginTune.setGender(Gender userGender);\n\n\n\n\n\n\nSets the user's gender.\n\n\n\n\nsdkbox.PluginTune.setLatitude(latitude, longitude);\n\n\n\n\n\n\nSets the user's location.\n\n\n\n\nsdkbox.PluginTune.setLatitude(latitude, longitude, altitude);\n\n\n\n\n\n\nSets the user's location including altitude.\n\n\n\n\nsdkbox.PluginTune.setAppAdTracking(enable);\n\n\n\n\n\n\nSet app-level ad-tracking.\n\n\n\n\nsdkbox.PluginTune.setPayingUser(isPayingUser);\n\n\n\n\n\n\nSet whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.\n\n\n\n\nsdkbox.PluginTune.setPreloadDataForScript(jsonString);\nsdkbox.PluginTune.setPreloadData(preloadData);\n\n\n\n\n\n\nSets publisher information for attribution.\n\n\n\n\nsdkbox.PluginTune.matId();\n\n\n\n\n\n\nGet the MAT ID for this installation (mat_id).\n\n\n\n\nsdkbox.PluginTune.openLogId();\n\n\n\n\n\n\nGet the MAT log ID for the first app open (open_log_id).\n\n\n\n\nsdkbox.PluginTune.isPayingUser();\n\n\n\n\n\n\nGet whether the user is revenue-generating.\n\n\n\n\nsdkbox.PluginTune.measureSession();\n\n\n\n\n\n\nTo be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.\n\n\n\n\nsdkbox.PluginTune.measureEventName(eventName);\n\n\n\n\n\n\nRecord an event for an Event Name.\n\n\n\n\nsdkbox.PluginTune.measureEventId(eventId);\n\n\n\n\n\n\nRecord an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.\n\n\n\n\nsdkbox.PluginTune.measureEventForScript(jsonString);\nsdkbox.PluginTune.measureEvent(event);\n\n\n\n\n\n\nRecord an event with a MATEvent.\n\n\n\n\nsdkbox.PluginTune.setUseCookieTracking(enable);\n\n\n\n\n\n\nSets whether or not to use cookie based tracking.\n\n\n\n\nsdkbox.PluginTune.setRedirectUrl(redirectUrl);\n\n\n\n\n\n\nSets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.\n\n\n\n\nsdkbox.PluginTune.startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect);\n\n\n\n\n\n\nStart an app-to-app tracking session on the MAT server.\n\n\n\n\nsdkbox.PluginTune.applicationDidOpenURL(urlString, sourceApplication);\n\n\n\n\n\n\nRecord the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/tune/v2-js/#tune", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/plugins/tune/v2-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002  sdkbox import tune", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/tune/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/tune/v2-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TUNE id  \u4ee5\u53ca  TUNE KEY  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Tune ID  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Tune  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Tune :{\n     id : TUNE ID ,\n     key : TUNE KEY ,\n     debug :false\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/tune/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 Tune   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginTune.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginTuneJS.hpp \n#include  PluginTuneJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginTuneJS);\nsc- addRegisterCallback(register_PluginTuneJs_helper);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002  \u4f7f\u7528 Tune  \u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528  events  \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf  MAT Native Event Types \u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06  events  \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  sdkbox.PluginTune.measureEventName( login );\nsdkbox.PluginTune.measureEventId(0123456789);\n\nvar event = {};\nevent.eventName =  purchase ;\nevent.refId =  RJ1357 ;\nevent.searchString =  sweet srisp red apples ;\nevent.attribute1 =  srisp ;\nevent.attribute2 =  red ;\nevent.quantity = 3;\nsdkbox.PluginTune.measureEvent(JSON.stringify(event));  \u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Tune  \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a  sdkbox.PluginTune.setListener({\n  onEnqueuedAction: function(data) {},\n  onSucceed: function(data) {},\n  onFailed: function(data) {},\n  onReceiveDeeplink: function(data, timeout) {},\n  onFailDeeplink: function(errorString) {}\n});", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/tune/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginTune.init();   initialize the plugin instance.   sdkbox.PluginTune.setDebugMode(enable);   Specifies that the server responses should include debug information.   sdkbox.PluginTune.setAllowDuplicateRequests(allow);   Set to YES to allow duplicate requests to be registered with the MAT server.   sdkbox.PluginTune.checkForDeferredDeeplinkWithTimeout(timeout);   Check for a deferred deeplink entry point upon app installation.   sdkbox.PluginTune.automateIapEventMeasurement(automate);   Enable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.   sdkbox.PluginTune.setFacebookEventLogging(logging, limit);   Set whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.   sdkbox.PluginTune.setExistingUser(existingUser);   Set whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.   sdkbox.PluginTune.setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled);   Set the Apple Advertising Identifier available in iOS 6.   sdkbox.PluginTune.setAppleVendorIdentifier(appleVendorIdentifier);   Set the Apple Vendor Identifier available in iOS 6.   sdkbox.PluginTune.setCurrencyCode(currencyCode);   Sets the currency code.   sdkbox.PluginTune.setJailbroken(jailbroken);   Sets the jailbroken device flag.   sdkbox.PluginTune.setPackageName(packageName);   Sets the package name (bundle identifier).   sdkbox.PluginTune.setShouldAutoDetectJailbroken(autoDetect);   Specifies if the sdk should auto detect if the iOS device is jailbroken.   sdkbox.PluginTune.setShouldAutoGenerateAppleVendorIdentifier(autoGenerate);   Specifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.   sdkbox.PluginTune.setSiteId(siteId);   Sets the site ID.   sdkbox.PluginTune.setTRUSTeId(tpid);   Set the TRUSTe Trusted Preference Identifier (TPID).   sdkbox.PluginTune.setUserEmail(userEmail);   Sets the user's email address.   sdkbox.PluginTune.setUserId(userId);   Sets the user ID.   sdkbox.PluginTune.setUserName(userName);   Sets the user's name.   sdkbox.PluginTune.setPhoneNumber(phoneNumber);   Sets the user's phone number.   sdkbox.PluginTune.setFacebookUserId(facebookUserId);   Set user's Facebook ID.   sdkbox.PluginTune.setTwitterUserId(twitterUserId);   Set user's Twitter ID.   sdkbox.PluginTune.setGoogleUserId(googleUserId);   Set user's Google ID.   sdkbox.PluginTune.setAge(long userAge);   Sets the user's age.   sdkbox.PluginTune.setGender(Gender userGender);   Sets the user's gender.   sdkbox.PluginTune.setLatitude(latitude, longitude);   Sets the user's location.   sdkbox.PluginTune.setLatitude(latitude, longitude, altitude);   Sets the user's location including altitude.   sdkbox.PluginTune.setAppAdTracking(enable);   Set app-level ad-tracking.   sdkbox.PluginTune.setPayingUser(isPayingUser);   Set whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.   sdkbox.PluginTune.setPreloadDataForScript(jsonString);\nsdkbox.PluginTune.setPreloadData(preloadData);   Sets publisher information for attribution.   sdkbox.PluginTune.matId();   Get the MAT ID for this installation (mat_id).   sdkbox.PluginTune.openLogId();   Get the MAT log ID for the first app open (open_log_id).   sdkbox.PluginTune.isPayingUser();   Get whether the user is revenue-generating.   sdkbox.PluginTune.measureSession();   To be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.   sdkbox.PluginTune.measureEventName(eventName);   Record an event for an Event Name.   sdkbox.PluginTune.measureEventId(eventId);   Record an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.   sdkbox.PluginTune.measureEventForScript(jsonString);\nsdkbox.PluginTune.measureEvent(event);   Record an event with a MATEvent.   sdkbox.PluginTune.setUseCookieTracking(enable);   Sets whether or not to use cookie based tracking.   sdkbox.PluginTune.setRedirectUrl(redirectUrl);   Sets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.   sdkbox.PluginTune.startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect);   Start an app-to-app tracking session on the MAT server.   sdkbox.PluginTune.applicationDidOpenURL(urlString, sourceApplication);   Record the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/tune/v2-lua/", 
            "text": "Tune\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002\n\n\nsdkbox import tune\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nTUNE id\n \u4ee5\u53ca \nTUNE KEY\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nTune ID\n \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0 \nTune\n \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nTune\n:{\n    \nid\n:\nTUNE ID\n,\n    \nkey\n:\nTUNE KEY\n,\n    \ndebug\n:false\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginTuneLua.hpp\n\n#include \nPluginTuneLuaHelper.h\n\n\n\n\n\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528 \nregister_all_PluginTuneLua(\nlua_State*\n);\n \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002\n\n\n\n\nNote:\n \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e\uff0c\u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u3002\n\n\n\u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\n\n#include \nPluginTuneLua.hpp\n\n#include \nPluginTuneLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginTuneLua(tolua_s);\n    register_all_PluginTuneLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Tune\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\nsdkbox.PluginTune:init()\n\n\n\n\n\u4f7f\u7528 Tune\n\n\n\u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528 \nevents\n \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf \nMAT Native Event Types\n\u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06 \nevents\n \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune:measureEventName(\nlogin\n);\nsdkbox.PluginTune:measureEventId(0123456789);\nlocal event = {}\nevent.eventName = \npurchase\n\nevent.refId = \nRJ1357\n\nevent.searchString = \nsweet srisp red apples\n\nevent.attribute1 = \nsrisp\n\nevent.attribute2 = \nred\n\nevent.quantity = 3\nsdkbox.PluginTune:measureEventForScript(json.encode(event))\n\n\n\n\n\u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nTune\n \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\nsdkbox.PluginTune:setListener(function(eventName, eventData, timeout)\n        -- \u5f53eventName\u4e3a \nonReceiveDeeplink\n \u65f6,\u7b2c\u4e09\u4e2a\u53c2\u6570timeout\u624d\u6709\u6548\n       print(eventName, eventData, timeout)\n   end)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginTune:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginTune:setDebugMode(enable)\n\n\n\n\n\n\nSpecifies that the server responses should include debug information.\n\n\n\n\nsdkbox.PluginTune:setAllowDuplicateRequests(allow)\n\n\n\n\n\n\nSet to YES to allow duplicate requests to be registered with the MAT server.\n\n\n\n\nsdkbox.PluginTune:checkForDeferredDeeplinkWithTimeout(timeout)\n\n\n\n\n\n\nCheck for a deferred deeplink entry point upon app installation.\n\n\n\n\nsdkbox.PluginTune:automateIapEventMeasurement(automate)\n\n\n\n\n\n\nEnable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.\n\n\n\n\nsdkbox.PluginTune:setFacebookEventLogging(logging, limit)\n\n\n\n\n\n\nSet whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.\n\n\n\n\nsdkbox.PluginTune:setExistingUser(existingUser)\n\n\n\n\n\n\nSet whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.\n\n\n\n\nsdkbox.PluginTune:setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled)\n\n\n\n\n\n\nSet the Apple Advertising Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune:setAppleVendorIdentifier(appleVendorIdentifier)\n\n\n\n\n\n\nSet the Apple Vendor Identifier available in iOS 6.\n\n\n\n\nsdkbox.PluginTune:setCurrencyCode(currencyCode)\n\n\n\n\n\n\nSets the currency code.\n\n\n\n\nsdkbox.PluginTune:setJailbroken(jailbroken)\n\n\n\n\n\n\nSets the jailbroken device flag.\n\n\n\n\nsdkbox.PluginTune:setPackageName(packageName)\n\n\n\n\n\n\nSets the package name (bundle identifier).\n\n\n\n\nsdkbox.PluginTune:setShouldAutoDetectJailbroken(autoDetect)\n\n\n\n\n\n\nSpecifies if the sdk should auto detect if the iOS device is jailbroken.\n\n\n\n\nsdkbox.PluginTune:setShouldAutoGenerateAppleVendorIdentifier(autoGenerate)\n\n\n\n\n\n\nSpecifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.\n\n\n\n\nsdkbox.PluginTune:setSiteId(siteId)\n\n\n\n\n\n\nSets the site ID.\n\n\n\n\nsdkbox.PluginTune:setTRUSTeId(tpid)\n\n\n\n\n\n\nSet the TRUSTe Trusted Preference Identifier (TPID).\n\n\n\n\nsdkbox.PluginTune:setUserEmail(userEmail)\n\n\n\n\n\n\nSets the user's email address.\n\n\n\n\nsdkbox.PluginTune:setUserId(userId)\n\n\n\n\n\n\nSets the user ID.\n\n\n\n\nsdkbox.PluginTune:setUserName(userName)\n\n\n\n\n\n\nSets the user's name.\n\n\n\n\nsdkbox.PluginTune:setPhoneNumber(phoneNumber)\n\n\n\n\n\n\nSets the user's phone number.\n\n\n\n\nsdkbox.PluginTune:setFacebookUserId(facebookUserId)\n\n\n\n\n\n\nSet user's Facebook ID.\n\n\n\n\nsdkbox.PluginTune:setTwitterUserId(twitterUserId)\n\n\n\n\n\n\nSet user's Twitter ID.\n\n\n\n\nsdkbox.PluginTune:setGoogleUserId(googleUserId)\n\n\n\n\n\n\nSet user's Google ID.\n\n\n\n\nsdkbox.PluginTune:setAge(long userAge)\n\n\n\n\n\n\nSets the user's age.\n\n\n\n\nsdkbox.PluginTune:setGender(Gender userGender)\n\n\n\n\n\n\nSets the user's gender.\n\n\n\n\nsdkbox.PluginTune:setLatitude(latitude, longitude)\n\n\n\n\n\n\nSets the user's location.\n\n\n\n\nsdkbox.PluginTune:setLatitude(latitude, longitude, altitude)\n\n\n\n\n\n\nSets the user's location including altitude.\n\n\n\n\nsdkbox.PluginTune:setAppAdTracking(enable)\n\n\n\n\n\n\nSet app-level ad-tracking.\n\n\n\n\nsdkbox.PluginTune:setPayingUser(isPayingUser)\n\n\n\n\n\n\nSet whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.\n\n\n\n\nsdkbox.PluginTune:setPreloadData(jsonString)\n\n\n\n\n\n\nSets publisher information for attribution.\n\n\n\n\nsdkbox.PluginTune:matId()\n\n\n\n\n\n\nGet the MAT ID for this installation (mat_id).\n\n\n\n\nsdkbox.PluginTune:openLogId()\n\n\n\n\n\n\nGet the MAT log ID for the first app open (open_log_id).\n\n\n\n\nsdkbox.PluginTune:isPayingUser()\n\n\n\n\n\n\nGet whether the user is revenue-generating.\n\n\n\n\nsdkbox.PluginTune:measureSession()\n\n\n\n\n\n\nTo be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.\n\n\n\n\nsdkbox.PluginTune:measureEventName(eventName)\n\n\n\n\n\n\nRecord an event for an Event Name.\n\n\n\n\nsdkbox.PluginTune:measureEventId(eventId)\n\n\n\n\n\n\nRecord an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.\n\n\n\n\nsdkbox.PluginTune:measureEvent(jsonString)\n\n\n\n\n\n\nRecord an event with a MATEvent.\n\n\n\n\nsdkbox.PluginTune:setUseCookieTracking(enable)\n\n\n\n\n\n\nSets whether or not to use cookie based tracking.\n\n\n\n\nsdkbox.PluginTune:setRedirectUrl(redirectUrl)\n\n\n\n\n\n\nSets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.\n\n\n\n\nsdkbox.PluginTune:startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect)\n\n\n\n\n\n\nStart an app-to-app tracking session on the MAT server.\n\n\n\n\nsdkbox.PluginTune:applicationDidOpenURL(urlString, sourceApplication)\n\n\n\n\n\n\nRecord the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/tune/v2-lua/#tune", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/plugins/tune/v2-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Tune \u63d2\u4ef6\u3002  sdkbox import tune", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/tune/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -keep public class com.mobileapptracker.** {\n    public *;\n}\n\n-keep class * extends java.util.ListResourceBundle {\n    protected Object[][] getContents();\n}\n\n-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {\n    public static final *** NULL;\n}\n\n-keepnames @com.google.android.gms.common.annotation.KeepName class *\n-keepclassmembernames class * {\n    @com.google.android.gms.common.annotation.KeepName *;\n}\n\n-keepnames class * implements android.os.Parcelable {\n    public static final ** CREATOR;\n}  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/tune/v2-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Tune \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  TUNE id  \u4ee5\u53ca  TUNE KEY  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Tune ID  \u5e10\u53f7\u4e2d\u7684\u4fe1\u606f\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u6dfb\u52a0  Tune  \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Tune :{\n     id : TUNE ID ,\n     key : TUNE KEY ,\n     debug :false\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/tune/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginTuneLua.hpp \n#include  PluginTuneLuaHelper.h    \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528  register_all_PluginTuneLua( lua_State* );  \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002   Note:  \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e\uff0c\u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u3002  \u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a  #include  PluginTuneLua.hpp \n#include  PluginTuneLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginTuneLua(tolua_s);\n    register_all_PluginTuneLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Tune  \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002  sdkbox.PluginTune:init()  \u4f7f\u7528 Tune  \u5728\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528 Tune \u63d2\u4ef6\u7684\u529f\u80fd\u4e86\u3002Tune \u4f7f\u7528  events  \u8fd9\u4e2a\u6982\u5ff5\uff08\u5c31\u50cf  MAT Native Event Types \u4e00\u6837\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u9700\u8981\u7684\u5730\u65b9\u5c06  events  \u8bb0\u5165\u65e5\u5fd7\uff0c\u5e76\u4e14\u5728\u7a0d\u540e\u901a\u8fc7\u57fa\u4e8e web \u7684\u62a5\u544a\u9605\u8bfb\u5668\u67e5\u770b\u5b83\u4eec\u3002Tune \u5728\u6587\u6863\u4e2d\u4e3a\u8fd9\u4e9b events \u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  sdkbox.PluginTune:measureEventName( login );\nsdkbox.PluginTune:measureEventId(0123456789);\nlocal event = {}\nevent.eventName =  purchase \nevent.refId =  RJ1357 \nevent.searchString =  sweet srisp red apples \nevent.attribute1 =  srisp \nevent.attribute2 =  red \nevent.quantity = 3\nsdkbox.PluginTune:measureEventForScript(json.encode(event))  \u6355\u6349 Tune \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Tune  \u4e8b\u4ef6\uff0c\u6839\u636e\u54cd\u5e94\u6765\u6267\u884c\u64cd\u4f5c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a  sdkbox.PluginTune:setListener(function(eventName, eventData, timeout)\n        -- \u5f53eventName\u4e3a  onReceiveDeeplink  \u65f6,\u7b2c\u4e09\u4e2a\u53c2\u6570timeout\u624d\u6709\u6548\n       print(eventName, eventData, timeout)\n   end)", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/tune/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginTune:init()   initialize the plugin instance.   sdkbox.PluginTune:setDebugMode(enable)   Specifies that the server responses should include debug information.   sdkbox.PluginTune:setAllowDuplicateRequests(allow)   Set to YES to allow duplicate requests to be registered with the MAT server.   sdkbox.PluginTune:checkForDeferredDeeplinkWithTimeout(timeout)   Check for a deferred deeplink entry point upon app installation.   sdkbox.PluginTune:automateIapEventMeasurement(automate)   Enable automatic measurement of app store in-app-purchase events. When enabled, your code should not explicitly measure events for successful purchases related to StoreKit to avoid event duplication.   sdkbox.PluginTune:setFacebookEventLogging(logging, limit)   Set whether the MAT events should also be logged to the Facebook SDK. This flag is ignored if the Facebook SDK is not present.   sdkbox.PluginTune:setExistingUser(existingUser)   Set whether this is an existing user or a new one. This is generally used to\ndistinguish users who were using previous versions of the app, prior to\nintegration of the MAT SDK. The default is to assume a new user.   sdkbox.PluginTune:setAppleAdvertisingIdentifier(appleAdvertisingIdentifier, adTrackingEnabled)   Set the Apple Advertising Identifier available in iOS 6.   sdkbox.PluginTune:setAppleVendorIdentifier(appleVendorIdentifier)   Set the Apple Vendor Identifier available in iOS 6.   sdkbox.PluginTune:setCurrencyCode(currencyCode)   Sets the currency code.   sdkbox.PluginTune:setJailbroken(jailbroken)   Sets the jailbroken device flag.   sdkbox.PluginTune:setPackageName(packageName)   Sets the package name (bundle identifier).   sdkbox.PluginTune:setShouldAutoDetectJailbroken(autoDetect)   Specifies if the sdk should auto detect if the iOS device is jailbroken.   sdkbox.PluginTune:setShouldAutoGenerateAppleVendorIdentifier(autoGenerate)   Specifies if the sdk should pull the Apple Vendor Identifier from the device. Note that setting to false will clear any previously set value for the property.   sdkbox.PluginTune:setSiteId(siteId)   Sets the site ID.   sdkbox.PluginTune:setTRUSTeId(tpid)   Set the TRUSTe Trusted Preference Identifier (TPID).   sdkbox.PluginTune:setUserEmail(userEmail)   Sets the user's email address.   sdkbox.PluginTune:setUserId(userId)   Sets the user ID.   sdkbox.PluginTune:setUserName(userName)   Sets the user's name.   sdkbox.PluginTune:setPhoneNumber(phoneNumber)   Sets the user's phone number.   sdkbox.PluginTune:setFacebookUserId(facebookUserId)   Set user's Facebook ID.   sdkbox.PluginTune:setTwitterUserId(twitterUserId)   Set user's Twitter ID.   sdkbox.PluginTune:setGoogleUserId(googleUserId)   Set user's Google ID.   sdkbox.PluginTune:setAge(long userAge)   Sets the user's age.   sdkbox.PluginTune:setGender(Gender userGender)   Sets the user's gender.   sdkbox.PluginTune:setLatitude(latitude, longitude)   Sets the user's location.   sdkbox.PluginTune:setLatitude(latitude, longitude, altitude)   Sets the user's location including altitude.   sdkbox.PluginTune:setAppAdTracking(enable)   Set app-level ad-tracking.   sdkbox.PluginTune:setPayingUser(isPayingUser)   Set whether the user is generating revenue for the app or not. If measureEvent is called with a non-zero revenue, this is automatically set to YES.   sdkbox.PluginTune:setPreloadData(jsonString)   Sets publisher information for attribution.   sdkbox.PluginTune:matId()   Get the MAT ID for this installation (mat_id).   sdkbox.PluginTune:openLogId()   Get the MAT log ID for the first app open (open_log_id).   sdkbox.PluginTune:isPayingUser()   Get whether the user is revenue-generating.   sdkbox.PluginTune:measureSession()   To be called when an app opens; typically in the AppDelegate::applicationWillEnterForeground() event.   sdkbox.PluginTune:measureEventName(eventName)   Record an event for an Event Name.   sdkbox.PluginTune:measureEventId(eventId)   Record an event by providing the equivalent Event ID defined on the MobileAppTracking dashboard.   sdkbox.PluginTune:measureEvent(jsonString)   Record an event with a MATEvent.   sdkbox.PluginTune:setUseCookieTracking(enable)   Sets whether or not to use cookie based tracking.   sdkbox.PluginTune:setRedirectUrl(redirectUrl)   Sets a url to be used with app-to-app tracking so that the sdk can open the download (redirect) url. This is used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.   sdkbox.PluginTune:startAppToAppTracking(targetAppPackageName,\n                                 targetAppAdvertiserId,\n                                 targetAdvertiserOfferId,\n                                 targetAdvertiserPublisherId,\n                                 shouldRedirect)   Start an app-to-app tracking session on the MAT server.   sdkbox.PluginTune:applicationDidOpenURL(urlString, sourceApplication)   Record the URL and Source when an application is opened via a URL scheme.\nThis typically occurs during OAUTH or when an app exits and is returned\nto via a URL. The data will be sent to the HasOffers server when the next\nmeasureXXX method is called so that a Re-Engagement can be recorded.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/", 
            "text": "Vungle\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002\n\n\nsdkbox import vungle\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nvungle id\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nVungle\n \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n\n        },\n        \nreward\n:{\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u56e0\u4e3a\u591a\u4e86 \nsound\n \u548c \nbackbutton\n \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n            \nsound\n : true,\n            \nbackbutton\n : true\n        },\n        \nreward\n:{\n            \nsound\n : false,\n            \nbackbutton\n : false,\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Vungle\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginVungle/PluginVungle.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginVungle::init();\n}\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u65e0\u8bba \nvideo\n \u8fd8\u662f \nreward\n \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a\n\n\nsdkbox::PluginVungle::show(\nvideo\n);\nsdkbox::PluginVungle::show(\nreward\n);\n\n\n\n\n\u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nVungle\n \u4e8b\u4ef6\u6765\u6682\u505c\u6216\u8005\u6062\u590d\u60a8\u7684\u6e38\u620f\u3002\n\n\n\n\n\u5199\u4e00\u4e2a\u7ee7\u627f\u4e8e \nsdkbox::VungleListener\n \u7684\u7c7b\u3002\n\n\n\n\n#include \nPluginVungle/PluginVungle.h\n\nclass MyClass : public sdkbox::VungleListener\n{\nprivate:\n  void onVungleCacheAvailable();\n  void onVungleStarted();\n  void onVungleFinished();\n  void onVungleOpenStore();\n}\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03\uff08\u53ef\u9009\uff09\uff1a\n\n\n\n\nsdkbox::PluginVungle::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void show(const std::string\n name);\n\n\n\n\n\n\nshow ad with a provided name.\n\n\n\n\nstatic void setListener(VungleListener* listener);\n\n\n\n\n\n\nset provided listener.\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nremove listeners.\n\n\n\n\nstatic void setDebug(bool enable);\n\n\n\n\n\n\nenable or disable debug mode.\n\n\n\n\nstatic bool isCacheAvailable();\n\n\n\n\n\n\nis there a cached video available.\n\n\n\n\nstatic void setUserID(const std::string\n userID);\n\n\n\n\n\n\nsets the userID for rewarded ads.\n\n\n\n\nListeners\n\n\nvoid onVungleStarted();\n\n\n\n\n\n\nVungle is running and available.\n\n\n\n\nvoid onVungleFinished();\n\n\n\n\n\n\nVungle is not running/has stopped.\n\n\n\n\nvoid onVungleOpenStore();\n\n\n\n\n\n\nis the Vungle store available.\n\n\n\n\nvoid onVungleCacheAvailable();\n\n\n\n\n\n\nad cache is available.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/#vungle", 
            "text": "", 
            "title": "Vungle"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002  sdkbox import vungle", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  vungle id  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Vungle  \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n\n        },\n         reward :{\n             incentivized  : true\n        }\n    }\n}  \u56e0\u4e3a\u591a\u4e86  sound  \u548c  backbutton  \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n             sound  : true,\n             backbutton  : true\n        },\n         reward :{\n             sound  : false,\n             backbutton  : false,\n             incentivized  : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Vungle  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginVungle/PluginVungle.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginVungle::init();\n}  \u663e\u793a\u5e7f\u544a  \u65e0\u8bba  video  \u8fd8\u662f  reward  \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a  sdkbox::PluginVungle::show( video );\nsdkbox::PluginVungle::show( reward );  \u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Vungle  \u4e8b\u4ef6\u6765\u6682\u505c\u6216\u8005\u6062\u590d\u60a8\u7684\u6e38\u620f\u3002   \u5199\u4e00\u4e2a\u7ee7\u627f\u4e8e  sdkbox::VungleListener  \u7684\u7c7b\u3002   #include  PluginVungle/PluginVungle.h \nclass MyClass : public sdkbox::VungleListener\n{\nprivate:\n  void onVungleCacheAvailable();\n  void onVungleStarted();\n  void onVungleFinished();\n  void onVungleOpenStore();\n}   \u521b\u5efa\u4e00\u4e2a  listener  \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03\uff08\u53ef\u9009\uff09\uff1a   sdkbox::PluginVungle::setListener(this);", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/vungle/v3-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static void show(const std::string  name);   show ad with a provided name.   static void setListener(VungleListener* listener);   set provided listener.   static void removeListener();   remove listeners.   static void setDebug(bool enable);   enable or disable debug mode.   static bool isCacheAvailable();   is there a cached video available.   static void setUserID(const std::string  userID);   sets the userID for rewarded ads.   Listeners  void onVungleStarted();   Vungle is running and available.   void onVungleFinished();   Vungle is not running/has stopped.   void onVungleOpenStore();   is the Vungle store available.   void onVungleCacheAvailable();   ad cache is available.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/vungle/v3-js/", 
            "text": "Vungle\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002\n\n\nsdkbox import vungle\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nvungle id\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nVungle\n \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n\n        },\n        \nreward\n:{\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u56e0\u4e3a\u591a\u4e86 \nsound\n \u548c \nbackbutton\n \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n            \nsound\n : true,\n            \nbackbutton\n : true\n        },\n        \nreward\n:{\n            \nsound\n : false,\n            \nbackbutton\n : false,\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Vungle\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginVungle.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginVungleJS.hpp\n\n#include \nPluginVungleJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginVungleJS);\nsc-\naddRegisterCallback(register_PluginVungelJs_helper);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u65e0\u8bba \nvideo\n \u8fd8\u662f \nreward\n \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a\n\n\nsdkbox.PluginVungle.show(\nvideo\n);\nsdkbox.PluginVungle.show(\nreward\n);\n\n\n\n\n\u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nVungle\n \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a\n\n\n\n\nsdkbox.PluginVungle.setListener({\n    onVungleCacheAvailable : function() { cc.log(\nonVungleCacheAvailable\n) },\n    onVungleStarted : function() { cc.log(\nonVungleStarted\n) },\n    onVungleFinished : function() { cc.log(\nonVungleFinished\n) },\n    onVungleAdViewed : function(isComplete) { cc.log(\nonVungleAdViewed\n + isComplete) }\n})\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginVungle.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginVungle.show(name);\n\n\n\n\n\n\nshow ad with a provided name.\n\n\n\n\nsdkbox.PluginVungle.setDebug(enable);\n\n\n\n\n\n\nenable or disable debug mode.\n\n\n\n\nsdkbox.PluginVungle.isCacheAvailable();\n\n\n\n\n\n\nis there a cached video available.\n\n\n\n\nsdkbox.PluginVungle.setUserID(userID);\n\n\n\n\n\n\nsets userID for rewarded ads.\n\n\n\n\nListeners\n\n\nonVungleCacheAvailable()\n\n\n\n\n\n\nad cache is available.\n\n\n\n\nonVungleStarted()\n\n\n\n\n\n\nVungle is running and available.\n\n\n\n\nonVungleFinished()\n\n\n\n\n\n\nVungle is not running/has stopped.\n\n\n\n\nonVungleAdViewed()\n\n\n\n\n\n\nVungle ad has been viewed.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/vungle/v3-js/#vungle", 
            "text": "", 
            "title": "Vungle"
        }, 
        {
            "location": "/plugins/vungle/v3-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002  sdkbox import vungle", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/vungle/v3-js/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/vungle/v3-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  vungle id  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Vungle  \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n\n        },\n         reward :{\n             incentivized  : true\n        }\n    }\n}  \u56e0\u4e3a\u591a\u4e86  sound  \u548c  backbutton  \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n             sound  : true,\n             backbutton  : true\n        },\n         reward :{\n             sound  : false,\n             backbutton  : false,\n             incentivized  : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/vungle/v3-js/#_4", 
            "text": "\u521d\u59cb\u5316 Vungle   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginVungle.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginVungleJS.hpp \n#include  PluginVungleJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginVungleJS);\nsc- addRegisterCallback(register_PluginVungelJs_helper);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002  \u663e\u793a\u5e7f\u544a  \u65e0\u8bba  video  \u8fd8\u662f  reward  \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a  sdkbox.PluginVungle.show( video );\nsdkbox.PluginVungle.show( reward );  \u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Vungle  \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002   \u521b\u5efa\u4e00\u4e2a  listener  \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a   sdkbox.PluginVungle.setListener({\n    onVungleCacheAvailable : function() { cc.log( onVungleCacheAvailable ) },\n    onVungleStarted : function() { cc.log( onVungleStarted ) },\n    onVungleFinished : function() { cc.log( onVungleFinished ) },\n    onVungleAdViewed : function(isComplete) { cc.log( onVungleAdViewed  + isComplete) }\n})", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/vungle/v3-js/#api-reference", 
            "text": "Methods  sdkbox.PluginVungle.init();   initialize the plugin instance.   sdkbox.PluginVungle.show(name);   show ad with a provided name.   sdkbox.PluginVungle.setDebug(enable);   enable or disable debug mode.   sdkbox.PluginVungle.isCacheAvailable();   is there a cached video available.   sdkbox.PluginVungle.setUserID(userID);   sets userID for rewarded ads.   Listeners  onVungleCacheAvailable()   ad cache is available.   onVungleStarted()   Vungle is running and available.   onVungleFinished()   Vungle is not running/has stopped.   onVungleAdViewed()   Vungle ad has been viewed.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/", 
            "text": "Vungle\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002\n\n\nsdkbox import vungle\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728 \nproj.android\n \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230 \nCocos2dxActivity.java\n \u6587\u4ef6\uff1a\n\n\n./src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\nNote:\n \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d \nCocos2dxActivity.java\n \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b \nproj.android/project.properties\n \u3002\u6bd4\u5982\uff1a\n\n\nandroid.library.reference.1=../../cocos2d-x/cocos/platform/android/java\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \nCocos2dxActivity.java\n \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a\n\n\n../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java\n\n\n\n\n\n\n\u4fee\u6539 \nCocos2dxActivity.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539 \nCocos2dxActivity\n \u7c7b\u7684 \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this);\n \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528 \nonLoadNativeLibraries();\n \u4e4b\u540e\u3002\u5982\u4e0b\uff1a\n\n\n\n\nonLoadNativeLibraries();\nSDKBox.init(this);\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nvungle id\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nVungle\n \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n\n        },\n        \nreward\n:{\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u56e0\u4e3a\u591a\u4e86 \nsound\n \u548c \nbackbutton\n \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n            \nsound\n : true,\n            \nbackbutton\n : true\n        },\n        \nreward\n:{\n            \nsound\n : false,\n            \nbackbutton\n : false,\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 Lua \u4ee3\u7801\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/lua_module_register.h\n \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c \nVungle\n \u7684 Lua_State\u3002\n\nNote:\n \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a \nlua_State*\n \u53c2\u6570\u3002\n\n\n#include \nPluginVungleLua.hpp\n\n#include \nPluginVungleLuaHelper.h\n\n\n\n\n\nstatic int lua_module_register(lua_State* L)\n{\n  register_all_PluginVungleLua(L);\n  register_PluginVungleLua_helper(L);\n}\n\n\n\n\n\u521d\u59cb\u5316 Vungle\n\n\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\n\n\nsdkbox.PluginVungle:init()\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u65e0\u8bba \nvideo\n \u8fd8\u662f \nreward\n \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a\n\n\nsdkbox.PluginVungle:show(\nvideo\n)\nsdkbox.PluginVungle:show(\nreward\n)\n\n\n\n\n\u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nVungle\n \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a\n\n\n\n\nsdkbox.PluginVungle:setListener(function(name, isComplete)\n    if \nonVungleCacheAvailable\n == name then\n        print(\nonVungleCacheAvailable\n)\n    elseif \nonVungleStarted\n ==  name then\n        print(\nonVungleStarted\n)\n    elseif \nonVungleFinished\n ==  name then\n        print(\nonVungleFinished\n)\n    elseif \nonVungleAdViewed\n ==  name then\n        print(\nonVungleAdViewed:\n, isComplete)\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginVungle:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginVungle:show(name)\n\n\n\n\n\n\nshow ad with a provided name.\n\n\n\n\nsdkbox.PluginVungle:setDebug(enable)\n\n\n\n\n\n\nenable or disable debug mode.\n\n\n\n\nsdkbox.PluginVungle:isCacheAvailable()\n\n\n\n\n\n\nis there a cached video available.\n\n\n\n\nsdkbox.PluginVungle:setUserID(userID)\n\n\n\n\n\n\nsets userID for rewarded ads.\n\n\n\n\nListeners\n\n\nonVungleCacheAvailable()\n\n\n\n\n\n\nthere is cache available of videos\n\n\n\n\nonVungleStarted()\n\n\n\n\n\n\nVungle has started and is ready to go.\n\n\n\n\nonVungleFinished()\n\n\n\n\n\n\nVungle is stopped and not running\n\n\n\n\nonVungleAdViewed()\n\n\n\n\n\n\nan ad was viewed.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/#vungle", 
            "text": "", 
            "title": "Vungle"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002  sdkbox import vungle", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/#_2", 
            "text": "\u4fee\u6539  Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\uff0c\u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/\nlib/Cocos2dxActivity.java    \u5982\u679c\u60a8\u4f7f\u7528 cocos2dx-x \u9884\u7f16\u8bd1\u5e93\uff0c \u5047\u8bbe\u60a8\u5728  proj.android  \u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u5982\u4e0b\u4f4d\u7f6e\u627e\u5230  Cocos2dxActivity.java  \u6587\u4ef6\uff1a  ./src/org/cocos2dx/lib/Cocos2dxActivity.java    Note:  \u5f53\u4f60\u4f7f\u7528 cocos2d-x \u6e90\u4ee3\u7801\u65f6\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e2d  Cocos2dxActivity.java  \u6587\u4ef6\u7684\u4f4d\u7f6e\u4e5f\u4e0d\u540c\u3002\u4e00\u4e2a\u786e\u5b9a\u8be5\u6587\u4ef6\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\u67e5\u770b  proj.android/project.properties  \u3002\u6bd4\u5982\uff1a  android.library.reference.1=../../cocos2d-x/cocos/platform/android/java  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c  Cocos2dxActivity.java  \u6587\u4ef6\u5e94\u8be5\u5728\u5982\u4e0b\u4f4d\u7f6e\uff1a  ../../cocos2d-x/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java   \u4fee\u6539  Cocos2dxActivity.java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539  Cocos2dxActivity  \u7c7b\u7684  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this);  \u3002\u6dfb\u52a0\u7684\u4f4d\u7f6e\u975e\u5e38\u91cd\u8981\uff0c\u5fc5\u987b\u5728\u8c03\u7528  onLoadNativeLibraries();  \u4e4b\u540e\u3002\u5982\u4e0b\uff1a   onLoadNativeLibraries();\nSDKBox.init(this);    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  vungle id  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Vungle  \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n\n        },\n         reward :{\n             incentivized  : true\n        }\n    }\n}  \u56e0\u4e3a\u591a\u4e86  sound  \u548c  backbutton  \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n             sound  : true,\n             backbutton  : true\n        },\n         reward :{\n             sound  : false,\n             backbutton  : false,\n             incentivized  : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/#_4", 
            "text": "\u4fee\u6539 Lua \u4ee3\u7801  \u4fee\u6539  ./frameworks/runtime-src/Classes/lua_module_register.h  \u6587\u4ef6\uff0c\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\u5e76\u4e14\u6ce8\u518c  Vungle  \u7684 Lua_State\u3002 Note:  \u8bf7\u6ce8\u610f\u8be5\u6ce8\u518c\u51fd\u6570\u9700\u8981\u4e00\u4e2a  lua_State*  \u53c2\u6570\u3002  #include  PluginVungleLua.hpp \n#include  PluginVungleLuaHelper.h   static int lua_module_register(lua_State* L)\n{\n  register_all_PluginVungleLua(L);\n  register_PluginVungleLua_helper(L);\n}  \u521d\u59cb\u5316 Vungle   \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002   sdkbox.PluginVungle:init()  \u663e\u793a\u5e7f\u544a  \u65e0\u8bba  video  \u8fd8\u662f  reward  \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a  sdkbox.PluginVungle:show( video )\nsdkbox.PluginVungle:show( reward )  \u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Vungle  \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002   \u521b\u5efa\u4e00\u4e2a  listener  \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a   sdkbox.PluginVungle:setListener(function(name, isComplete)\n    if  onVungleCacheAvailable  == name then\n        print( onVungleCacheAvailable )\n    elseif  onVungleStarted  ==  name then\n        print( onVungleStarted )\n    elseif  onVungleFinished  ==  name then\n        print( onVungleFinished )\n    elseif  onVungleAdViewed  ==  name then\n        print( onVungleAdViewed: , isComplete)\n    end\nend)", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/vungle/v3-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginVungle:init()   initialize the plugin instance.   sdkbox.PluginVungle:show(name)   show ad with a provided name.   sdkbox.PluginVungle:setDebug(enable)   enable or disable debug mode.   sdkbox.PluginVungle:isCacheAvailable()   is there a cached video available.   sdkbox.PluginVungle:setUserID(userID)   sets userID for rewarded ads.   Listeners  onVungleCacheAvailable()   there is cache available of videos   onVungleStarted()   Vungle has started and is ready to go.   onVungleFinished()   Vungle is stopped and not running   onVungleAdViewed()   an ad was viewed.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/", 
            "text": "Vungle\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002\n\n\nsdkbox import vungle\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nvungle id\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nVungle\n \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n\n        },\n        \nreward\n:{\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u56e0\u4e3a\u591a\u4e86 \nsound\n \u548c \nbackbutton\n \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n            \nsound\n : true,\n            \nbackbutton\n : true\n        },\n        \nreward\n:{\n            \nsound\n : false,\n            \nbackbutton\n : false,\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Vungle\n\n\n\u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \nAppDelegate:applicationDidFinishLaunching()\n \u6216\u8005 \nAppController:didFinishLaunchingWithOptions()\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n#include \nPluginVungle/PluginVungle.h\n\nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginVungle::init();\n}\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u65e0\u8bba \nvideo\n \u8fd8\u662f \nreward\n \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a\n\n\nsdkbox::PluginVungle::show(\nvideo\n);\nsdkbox::PluginVungle::show(\nreward\n);\n\n\n\n\n\u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nVungle\n \u4e8b\u4ef6\u6765\u6682\u505c\u6216\u8005\u6062\u590d\u60a8\u7684\u6e38\u620f\u3002\n\n\n\n\n\u5199\u4e00\u4e2a\u7ee7\u627f\u4e8e \nsdkbox::VungleListener\n \u7684\u7c7b\u3002\n\n\n\n\n#include \nPluginVungle/PluginVungle.h\n\nclass MyClass : public sdkbox::VungleListener\n{\nprivate:\n  void onVungleCacheAvailable();\n  void onVungleStarted();\n  void onVungleFinished();\n  void onVungleOpenStore();\n}\n\n\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03\uff08\u53ef\u9009\uff09\uff1a\n\n\n\n\nsdkbox::PluginVungle::setListener(this);\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nstatic void init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nstatic void show(const std::string\n name);\n\n\n\n\n\n\nshow ad with a provided name.\n\n\n\n\nstatic void setListener(VungleListener* listener);\n\n\n\n\n\n\nset provided listener.\n\n\n\n\nstatic void removeListener();\n\n\n\n\n\n\nremove listeners.\n\n\n\n\nstatic void setDebug(bool enable);\n\n\n\n\n\n\nenable or disable debug mode.\n\n\n\n\nstatic bool isCacheAvailable();\n\n\n\n\n\n\nis there a cached video available.\n\n\n\n\nstatic void setUserID(const std::string\n userID);\n\n\n\n\n\n\nsets the userID for rewarded ads.\n\n\n\n\nListeners\n\n\nvoid onVungleStarted();\n\n\n\n\n\n\nVungle is running and available.\n\n\n\n\nvoid onVungleFinished();\n\n\n\n\n\n\nVungle is not running/has stopped.\n\n\n\n\nvoid onVungleOpenStore();\n\n\n\n\n\n\nis the Vungle store available.\n\n\n\n\nvoid onVungleCacheAvailable();\n\n\n\n\n\n\nad cache is available.", 
            "title": "c++"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/#vungle", 
            "text": "", 
            "title": "Vungle"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002  sdkbox import vungle", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  vungle id  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Vungle  \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n\n        },\n         reward :{\n             incentivized  : true\n        }\n    }\n}  \u56e0\u4e3a\u591a\u4e86  sound  \u548c  backbutton  \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n             sound  : true,\n             backbutton  : true\n        },\n         reward :{\n             sound  : false,\n             backbutton  : false,\n             incentivized  : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/#_4", 
            "text": "\u521d\u59cb\u5316 Vungle  \u5728\u60a8\u7684\u4ee3\u7801\u7684\u5408\u9002\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728  AppDelegate:applicationDidFinishLaunching()  \u6216\u8005  AppController:didFinishLaunchingWithOptions()  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5e76\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u6b63\u786e\u7684\u5934\u6587\u4ef6\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a  #include  PluginVungle/PluginVungle.h \nAppDelegate::applicationDidFinishLaunching()\n{\n     sdkbox::PluginVungle::init();\n}  \u663e\u793a\u5e7f\u544a  \u65e0\u8bba  video  \u8fd8\u662f  reward  \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a  sdkbox::PluginVungle::show( video );\nsdkbox::PluginVungle::show( reward );  \u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Vungle  \u4e8b\u4ef6\u6765\u6682\u505c\u6216\u8005\u6062\u590d\u60a8\u7684\u6e38\u620f\u3002   \u5199\u4e00\u4e2a\u7ee7\u627f\u4e8e  sdkbox::VungleListener  \u7684\u7c7b\u3002   #include  PluginVungle/PluginVungle.h \nclass MyClass : public sdkbox::VungleListener\n{\nprivate:\n  void onVungleCacheAvailable();\n  void onVungleStarted();\n  void onVungleFinished();\n  void onVungleOpenStore();\n}   \u521b\u5efa\u4e00\u4e2a  listener  \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03\uff08\u53ef\u9009\uff09\uff1a   sdkbox::PluginVungle::setListener(this);", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/vungle/v2-cpp/#api-reference", 
            "text": "Methods  static void init();   initialize the plugin instance.   static void show(const std::string  name);   show ad with a provided name.   static void setListener(VungleListener* listener);   set provided listener.   static void removeListener();   remove listeners.   static void setDebug(bool enable);   enable or disable debug mode.   static bool isCacheAvailable();   is there a cached video available.   static void setUserID(const std::string  userID);   sets the userID for rewarded ads.   Listeners  void onVungleStarted();   Vungle is running and available.   void onVungleFinished();   Vungle is not running/has stopped.   void onVungleOpenStore();   is the Vungle store available.   void onVungleCacheAvailable();   ad cache is available.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/vungle/v2-js/", 
            "text": "Vungle\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002\n\n\nsdkbox import vungle\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nvungle id\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nVungle\n \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n\n        },\n        \nreward\n:{\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u56e0\u4e3a\u591a\u4e86 \nsound\n \u548c \nbackbutton\n \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n            \nsound\n : true,\n            \nbackbutton\n : true\n        },\n        \nreward\n:{\n            \nsound\n : false,\n            \nbackbutton\n : false,\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u521d\u59cb\u5316 Vungle\n\n\n\n\n\u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528 \ninit()\n \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728 \napp.js\n \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a\n\n\n\n\nsdkbox.PluginVungle.init();\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginVungleJS.hpp\n\n#include \nPluginVungleJSHelper.h\n\n\n\n\n\n\n\n\u4fee\u6539 \n./frameworks/runtime-src/Classes/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nsc-\naddRegisterCallback(register_all_PluginVungleJS);\nsc-\naddRegisterCallback(register_PluginVungelJs_helper);\n\n\n\n\n\u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u65e0\u8bba \nvideo\n \u8fd8\u662f \nreward\n \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a\n\n\nsdkbox.PluginVungle.show(\nvideo\n);\nsdkbox.PluginVungle.show(\nreward\n);\n\n\n\n\n\u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nVungle\n \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a\n\n\n\n\nsdkbox.PluginVungle.setListener({\n    onVungleCacheAvailable : function() { cc.log(\nonVungleCacheAvailable\n) },\n    onVungleStarted : function() { cc.log(\nonVungleStarted\n) },\n    onVungleFinished : function() { cc.log(\nonVungleFinished\n) },\n    onVungleAdViewed : function(isComplete) { cc.log(\nonVungleAdViewed\n + isComplete) }\n})\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginVungle.init();\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginVungle.show(name);\n\n\n\n\n\n\nshow ad with a provided name.\n\n\n\n\nsdkbox.PluginVungle.setDebug(enable);\n\n\n\n\n\n\nenable or disable debug mode.\n\n\n\n\nsdkbox.PluginVungle.isCacheAvailable();\n\n\n\n\n\n\nis there a cached video available.\n\n\n\n\nsdkbox.PluginVungle.setUserID(userID);\n\n\n\n\n\n\nsets userID for rewarded ads.\n\n\n\n\nListeners\n\n\nonVungleCacheAvailable()\n\n\n\n\n\n\nad cache is available.\n\n\n\n\nonVungleStarted()\n\n\n\n\n\n\nVungle is running and available.\n\n\n\n\nonVungleFinished()\n\n\n\n\n\n\nVungle is not running/has stopped.\n\n\n\n\nonVungleAdViewed()\n\n\n\n\n\n\nVungle ad has been viewed.", 
            "title": "js"
        }, 
        {
            "location": "/plugins/vungle/v2-js/#vungle", 
            "text": "", 
            "title": "Vungle"
        }, 
        {
            "location": "/plugins/vungle/v2-js/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002  sdkbox import vungle", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/vungle/v2-js/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/vungle/v2-js/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  vungle id  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Vungle  \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n\n        },\n         reward :{\n             incentivized  : true\n        }\n    }\n}  \u56e0\u4e3a\u591a\u4e86  sound  \u548c  backbutton  \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n             sound  : true,\n             backbutton  : true\n        },\n         reward :{\n             sound  : false,\n             backbutton  : false,\n             incentivized  : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/vungle/v2-js/#_4", 
            "text": "\u521d\u59cb\u5316 Vungle   \u901a\u8fc7\u5728\u60a8\u7684\u4ee3\u7801\u5408\u9002\u7684\u4f4d\u7f6e\u8c03\u7528  init()  \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u5728  app.js  \u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a   sdkbox.PluginVungle.init();   \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginVungleJS.hpp \n#include  PluginVungleJSHelper.h    \u4fee\u6539  ./frameworks/runtime-src/Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a   sc- addRegisterCallback(register_all_PluginVungleJS);\nsc- addRegisterCallback(register_PluginVungelJs_helper);  \u8fd9\u5c06\u6ce8\u518c Javascript \u56de\u8c03\u51fd\u6570\u3002  \u663e\u793a\u5e7f\u544a  \u65e0\u8bba  video  \u8fd8\u662f  reward  \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a  sdkbox.PluginVungle.show( video );\nsdkbox.PluginVungle.show( reward );  \u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Vungle  \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002   \u521b\u5efa\u4e00\u4e2a  listener  \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a   sdkbox.PluginVungle.setListener({\n    onVungleCacheAvailable : function() { cc.log( onVungleCacheAvailable ) },\n    onVungleStarted : function() { cc.log( onVungleStarted ) },\n    onVungleFinished : function() { cc.log( onVungleFinished ) },\n    onVungleAdViewed : function(isComplete) { cc.log( onVungleAdViewed  + isComplete) }\n})", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/vungle/v2-js/#api-reference", 
            "text": "Methods  sdkbox.PluginVungle.init();   initialize the plugin instance.   sdkbox.PluginVungle.show(name);   show ad with a provided name.   sdkbox.PluginVungle.setDebug(enable);   enable or disable debug mode.   sdkbox.PluginVungle.isCacheAvailable();   is there a cached video available.   sdkbox.PluginVungle.setUserID(userID);   sets userID for rewarded ads.   Listeners  onVungleCacheAvailable()   ad cache is available.   onVungleStarted()   Vungle is running and available.   onVungleFinished()   Vungle is not running/has stopped.   onVungleAdViewed()   Vungle ad has been viewed.", 
            "title": "API Reference"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/", 
            "text": "Vungle\n\n\n\u96c6\u6210\n\n\n\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002\n\n\nsdkbox import vungle\n\n\n\n\n\u989d\u5916\u7684\u6b65\u9aa4\n\n\n\u4fee\u6539 \nYourGameName\n.java\n\n\n\n\n\u4fee\u6539 \nproj.android/src/\npackage identifier\n/\nYourGameName\n.java\n \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a\n\n\n\n\nimport android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;\n\n\n\n\n\n\n\u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b \nonCreate(final Bundle savedInstanceState)\n \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5 \nSDKBox.init(this)\n \u3002\u5982\u4e0b\uff1a\n\n\n\n\nprotected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}\n\n\n\n\n\n\n\n\n\u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684 \noverrides\n \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728 \nSDKBox\n \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48\n\u5b9a\u4e49\u5b83\n\u3002\n\n\n\n\n\n\n\u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728 \nSDKBox\n \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728 \nSDKBox\n \u4e2d\u7684\n\u540c\u540d\u65b9\u6cd5\n\u3002\n\n\n\n\n\n\n\n\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }\n\n\n\n\n\u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09\n\n\n\n\n\u7f16\u8f91 \nproject.properties\n \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a \nProguard\n \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a\n\n\n\n\nproguard.config=proguard.cfg\n\n\n\n\n\n\n\u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\n-dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*\n\n\n\n\nNote:\n Proguard \u53ea\u80fd\u5de5\u4f5c\u5728 \nRelease\n \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a \ncocos run -m release\n\uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002\n\n\n\u914d\u7f6e\n\n\nSDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684 \nsdkbox_config.json\n \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684 \nvungle id\n \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684 \nVungle\n \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n\n        },\n        \nreward\n:{\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u56e0\u4e3a\u591a\u4e86 \nsound\n \u548c \nbackbutton\n \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a\n\n\nVungle\n :\n{\n    \nid\n:\nvungle id\n,\n    \nads\n:{\n        \nvideo\n:{\n            \nsound\n : true,\n            \nbackbutton\n : true\n        },\n        \nreward\n:{\n            \nsound\n : false,\n            \nbackbutton\n : false,\n            \nincentivized\n : true\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\n\n\n\u4fee\u6539 \nAppDelegate.cpp\n\n\n\n\n\u4fee\u6539 \nClasses/AppDelegate.cpp\n \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a\n\n\n\n\n#include \nPluginVungleLua.hpp\n\n#include \nPluginVungleLuaHelper.h\n\n\n\n\n\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528 \nregister_all_PluginVungleLua(\nlua_State*\n);\n \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002\n\n\n\n\nNote:\n \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728 \nlua_State *tolua_s = pStack-\ngetLuaState();\n \u4e4b\u540e\uff0c\u5e76\u4e14\u5728 \ntolua_extensions_ccb_open(tolua_s);\n \u4e4b\u524d\u3002\n\n\n\u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\n\n#include \nPluginVungleLua.hpp\n\n#include \nPluginVungleLuaHelper.hpp\n\nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack-\ngetLuaState();\n    register_all_PluginVungleLua(tolua_s);\n    register_all_PluginVungleLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}\n\n\n\n\n\u521d\u59cb\u5316 Vungle\n\n\n\u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528 \ninit()\n \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002\n\n\nsdkbox.PluginVungle:init()\n\n\n\n\n\u663e\u793a\u5e7f\u544a\n\n\n\u65e0\u8bba \nvideo\n \u8fd8\u662f \nreward\n \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a\n\n\nsdkbox.PluginVungle:show(\nvideo\n)\nsdkbox.PluginVungle:show(\nreward\n)\n\n\n\n\n\u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09\n\n\n\u60a8\u53ef\u4ee5\u6355\u6349 \nVungle\n \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a \nlistener\n \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a\n\n\n\n\nsdkbox.PluginVungle:setListener(function(name, isComplete)\n    if \nonVungleCacheAvailable\n == name then\n        print(\nonVungleCacheAvailable\n)\n    elseif \nonVungleStarted\n ==  name then\n        print(\nonVungleStarted\n)\n    elseif \nonVungleFinished\n ==  name then\n        print(\nonVungleFinished\n)\n    elseif \nonVungleAdViewed\n ==  name then\n        print(\nonVungleAdViewed:\n, isComplete)\n    end\nend)\n\n\n\n\nAPI Reference\n\n\nMethods\n\n\nsdkbox.PluginVungle:init()\n\n\n\n\n\n\ninitialize the plugin instance.\n\n\n\n\nsdkbox.PluginVungle:show(name)\n\n\n\n\n\n\nshow ad with a provided name.\n\n\n\n\nsdkbox.PluginVungle:setDebug(enable)\n\n\n\n\n\n\nenable or disable debug mode.\n\n\n\n\nsdkbox.PluginVungle:isCacheAvailable()\n\n\n\n\n\n\nis there a cached video available.\n\n\n\n\nsdkbox.PluginVungle:setUserID(userID)\n\n\n\n\n\n\nsets userID for rewarded ads.\n\n\n\n\nListeners\n\n\nonVungleCacheAvailable()\n\n\n\n\n\n\nthere is cache available of videos\n\n\n\n\nonVungleStarted()\n\n\n\n\n\n\nVungle has started and is ready to go.\n\n\n\n\nonVungleFinished()\n\n\n\n\n\n\nVungle is stopped and not running\n\n\n\n\nonVungleAdViewed()\n\n\n\n\n\n\nan ad was viewed.", 
            "title": "lua"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/#vungle", 
            "text": "", 
            "title": "Vungle"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/#_1", 
            "text": "\u5728\u60a8\u786e\u4fdd\u6b63\u786e\u5b89\u88c5\u4e86 SDKBOX installer \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u96c6\u6210 SDKBOX Vungle \u63d2\u4ef6\u3002  sdkbox import vungle", 
            "title": "\u96c6\u6210"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/#_2", 
            "text": "\u4fee\u6539  YourGameName .java   \u4fee\u6539  proj.android/src/ package identifier / YourGameName .java  \u6587\u4ef6\uff0c\u5bfc\u5165\u5982\u4e0b\u5305\uff1a   import android.content.Intent;\nimport com.sdkbox.plugin.SDKBox;   \u7136\u540e\uff0c\u4fee\u6539\u60a8\u7684\u7c7b  onCreate(final Bundle savedInstanceState)  \u51fd\u6570\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8c03\u7528\u8bed\u53e5  SDKBox.init(this)  \u3002\u5982\u4e0b\uff1a   protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  SDKBox.init(this);\n}    \u6700\u540e, \u6211\u9700\u8981\u63d0\u4f9b\u5408\u9002\u7684  overrides  \u65b9\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u7ea6\u5b9a\u5982\u4e0b\u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u6ca1\u6709\u5728  SDKBox  \u4e2d\u5b9a\u4e49\uff0c\u90a3\u4e48 \u5b9a\u4e49\u5b83 \u3002    \u5982\u679c\u8fd9\u4e2a\u88ab\u5217\u51fa\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5b9a\u4e49\u5728  SDKBox  \u4e2d\uff0c\u90a3\u4e48\u8bf7\u8c03\u7528\u8fd9\u4e2a\u5728  SDKBox  \u4e2d\u7684 \u540c\u540d\u65b9\u6cd5 \u3002          @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n          if(!SDKBox.onActivityResult(requestCode, resultCode, data)) {\n            super.onActivityResult(requestCode, resultCode, data);\n          }\n    }\n    @Override\n    protected void onStart() {\n          super.onStart();\n          SDKBox.onStart();\n    }\n    @Override\n    protected void onStop() {\n          super.onStop();\n          SDKBox.onStop();\n    }\n    @Override\n    protected void onResume() {\n          super.onResume();\n          SDKBox.onResume();\n    }\n    @Override\n    protected void onPause() {\n          super.onPause();\n          SDKBox.onPause();\n    }\n    @Override\n    public void onBackPressed() {\n          if(!SDKBox.onBackPressed()) {\n            super.onBackPressed();\n          }\n    }  \u4f7f\u7528 Proguard \uff08release\u6a21\u5f0f\u4e0b\u53ef\u9009\uff09   \u7f16\u8f91  project.properties  \u6587\u4ef6\uff0c \u6307\u5b9a\u4e00\u4e2a  Proguard  \u914d\u7f6e\u6587\u4ef6\u3002\u6bd4\u5982\uff1a   proguard.config=proguard.cfg   \u7f16\u8f91\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u52a0\u5165\u5982\u4e0b\u5185\u5bb9\uff1a   -dontwarn com.vungle.**\n-keep class com.vungle.** { public *; }\n-keep class javax.inject.*  Note:  Proguard \u53ea\u80fd\u5de5\u4f5c\u5728  Release  \u6a21\u5f0f\u4e0b \uff08\u6bd4\u5982\uff1a  cocos run -m release \uff09 debug \u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u89e6\u53d1 Proguard\u3002", 
            "title": "\u989d\u5916\u7684\u6b65\u9aa4"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/#_3", 
            "text": "SDKBOX Installer \u5c06\u4f1a\u81ea\u52a8\u5728\u60a8\u7684  sdkbox_config.json  \u4e2d\u63d2\u5165\u4e00\u4efd\u914d\u7f6e\u6837\u4f8b\u3002\u8bf7\u4fee\u6539\u8fd9\u4efd\u914d\u7f6e\u6837\u4f8b\uff0c\u4f7f\u5176\u80fd\u7528\u4e8e\u60a8\u81ea\u5df1\u7684 app \u3002  \u5bf9\u4e8e\u4e00\u4e2a Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff0c\u60a8\u9700\u8981\u5c06\u5176\u4e2d\u7684  vungle id  \u66ff\u6362\u6210\u60a8\u7279\u5b9a\u7684  Vungle  \u53d1\u5e03\u5e10\u53f7\u7684ID\u3002\n\u5982\u4e0b\u662f\u4e00\u4e2a\u5728 IOS \u5e73\u53f0\uff0c\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n\n        },\n         reward :{\n             incentivized  : true\n        }\n    }\n}  \u56e0\u4e3a\u591a\u4e86  sound  \u548c  backbutton  \u4e24\u4e2a\u9009\u9879\uff0c\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5728 Android \u5e73\u53f0\u4e0a\u6dfb\u52a0 Vungle \u63d2\u4ef6\u7684\u914d\u7f6e\u6837\u4f8b\uff1a  Vungle  :\n{\n     id : vungle id ,\n     ads :{\n         video :{\n             sound  : true,\n             backbutton  : true\n        },\n         reward :{\n             sound  : false,\n             backbutton  : false,\n             incentivized  : true\n        }\n    }\n}", 
            "title": "\u914d\u7f6e"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/#_4", 
            "text": "\u4fee\u6539  AppDelegate.cpp   \u4fee\u6539  Classes/AppDelegate.cpp  \u6587\u4ef6\uff0c\u5305\u542b\u4e0b\u5217\u5934\u6587\u4ef6\uff1a   #include  PluginVungleLua.hpp \n#include  PluginVungleLuaHelper.h    \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u8c03\u7528  register_all_PluginVungleLua( lua_State* );  \u6ce8\u518c\u63d2\u4ef6\u7684 Lua_State\u3002   Note:  \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u5fc5\u987b\u5728  lua_State *tolua_s = pStack- getLuaState();  \u4e4b\u540e\uff0c\u5e76\u4e14\u5728  tolua_extensions_ccb_open(tolua_s);  \u4e4b\u524d\u3002  \u8fd9\u91cc\u4e3a\u60a8\u51c6\u5907\u4e86\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a  #include  PluginVungleLua.hpp \n#include  PluginVungleLuaHelper.hpp \nbool AppDelegate::applicationDidFinishLaunching()\n{\n    lua_State *tolua_s = pStack- getLuaState();\n    register_all_PluginVungleLua(tolua_s);\n    register_all_PluginVungleLua_helper(tolua_s);\n    tolua_extensions_ccb_open(tolua_s);\n}  \u521d\u59cb\u5316 Vungle  \u4fee\u6539\u4f60\u7684 Lua \u4ee3\u7801\uff0c \u8c03\u7528  init()  \u521d\u59cb\u5316\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u53ef\u4ee5\u653e\u5728\u4ee3\u7801\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u5728\u4f7f\u7528\u63d2\u4ef6\u529f\u80fd\u4e4b\u524d\u5b8c\u6210\u3002  sdkbox.PluginVungle:init()  \u663e\u793a\u5e7f\u544a  \u65e0\u8bba  video  \u8fd8\u662f  reward  \u7c7b\u578b\u7684\u5e7f\u544a\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60a8\u60f3\u663e\u793a\u5b83\u4eec\u7684\u5730\u65b9\u52a0\u5165\u4ee3\u7801\uff1a  sdkbox.PluginVungle:show( video )\nsdkbox.PluginVungle:show( reward )  \u6355\u6349 Vungle \u4e8b\u4ef6\uff08\u53ef\u9009\uff09  \u60a8\u53ef\u4ee5\u6355\u6349  Vungle  \u4e8b\u4ef6\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u73a9\u5bb6\u89c2\u770b\u4e86\u89c6\u9891\u5e7f\u544a\u540e\u7ed9\u5176\u53d1\u653e\u5956\u52b1\u3002   \u521b\u5efa\u4e00\u4e2a  listener  \u7528\u4e8e\u4e8b\u4ef6\u56de\u8c03 (\u901a\u8fc7\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\u4e3e\u4f8b\u5982\u4e0b)\uff1a   sdkbox.PluginVungle:setListener(function(name, isComplete)\n    if  onVungleCacheAvailable  == name then\n        print( onVungleCacheAvailable )\n    elseif  onVungleStarted  ==  name then\n        print( onVungleStarted )\n    elseif  onVungleFinished  ==  name then\n        print( onVungleFinished )\n    elseif  onVungleAdViewed  ==  name then\n        print( onVungleAdViewed: , isComplete)\n    end\nend)", 
            "title": "\u4f7f\u7528"
        }, 
        {
            "location": "/plugins/vungle/v2-lua/#api-reference", 
            "text": "Methods  sdkbox.PluginVungle:init()   initialize the plugin instance.   sdkbox.PluginVungle:show(name)   show ad with a provided name.   sdkbox.PluginVungle:setDebug(enable)   enable or disable debug mode.   sdkbox.PluginVungle:isCacheAvailable()   is there a cached video available.   sdkbox.PluginVungle:setUserID(userID)   sets userID for rewarded ads.   Listeners  onVungleCacheAvailable()   there is cache available of videos   onVungleStarted()   Vungle has started and is ready to go.   onVungleFinished()   Vungle is stopped and not running   onVungleAdViewed()   an ad was viewed.", 
            "title": "API Reference"
        }, 
        {
            "location": "/release-note/", 
            "text": "Release Notes\n\n\n\n\n1.1.6\n\n\n\u589e\u52a0 SDKBOX \u652f\u6301\u5728\u7ebf\u5b89\u88c5\u63d2\u4ef6\n\u589e\u52a0 SDKBOX \u5728\u7ebf\u6587\u6863\n\u66f4\u65b0 Vungle SDK\u5230\u65b0\u7248\n * iOS: 3.1.2\n * Android: 3.3.1\n\n\n1.1.5\n\n\n\u4fee\u6539 SDKBOX \u4e0e Plugin-x \u7f16\u8bd1\u51b2\u7a81\u95ee\u9898\n\n\n1.1.4\n\n\n\u4fee\u6539 SDKBOX IAP \u63d2\u4ef6\u8fd4\u56de\u65e0\u6548\u7684\u4ef7\u683c\u6570\u636e", 
            "title": "\u5173\u4e8e"
        }, 
        {
            "location": "/release-note/#release-notes", 
            "text": "", 
            "title": "Release Notes"
        }, 
        {
            "location": "/release-note/#116", 
            "text": "\u589e\u52a0 SDKBOX \u652f\u6301\u5728\u7ebf\u5b89\u88c5\u63d2\u4ef6\n\u589e\u52a0 SDKBOX \u5728\u7ebf\u6587\u6863\n\u66f4\u65b0 Vungle SDK\u5230\u65b0\u7248\n * iOS: 3.1.2\n * Android: 3.3.1", 
            "title": "1.1.6"
        }, 
        {
            "location": "/release-note/#115", 
            "text": "\u4fee\u6539 SDKBOX \u4e0e Plugin-x \u7f16\u8bd1\u51b2\u7a81\u95ee\u9898", 
            "title": "1.1.5"
        }, 
        {
            "location": "/release-note/#114", 
            "text": "\u4fee\u6539 SDKBOX IAP \u63d2\u4ef6\u8fd4\u56de\u65e0\u6548\u7684\u4ef7\u683c\u6570\u636e", 
            "title": "1.1.4"
        }
    ]
}